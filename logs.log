2025-03-13 11:17:13,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 11:17:13,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 11:17:13,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 11:17:13,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 11:17:14,301:INFO:PyCaret ClassificationExperiment
2025-03-13 11:17:14,301:INFO:Logging name: clf-default-name
2025-03-13 11:17:14,301:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-13 11:17:14,301:INFO:version 3.3.2
2025-03-13 11:17:14,301:INFO:Initializing setup()
2025-03-13 11:17:14,301:INFO:self.USI: 9536
2025-03-13 11:17:14,301:INFO:self._variable_keys: {'memory', '_available_plots', 'X_test', 'data', 'gpu_param', 'exp_name_log', 'y_test', 'html_param', 'fold_groups_param', 'gpu_n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'log_plots_param', 'exp_id', 'seed', 'USI', '_ml_usecase', 'target_param', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'y', 'X', 'y_train', 'is_multiclass', 'idx'}
2025-03-13 11:17:14,301:INFO:Checking environment
2025-03-13 11:17:14,301:INFO:python_version: 3.9.21
2025-03-13 11:17:14,301:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-13 11:17:14,302:INFO:machine: AMD64
2025-03-13 11:17:14,302:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-13 11:17:14,302:INFO:Memory: svmem(total=25372119040, available=4406566912, percent=82.6, used=20965552128, free=4406566912)
2025-03-13 11:17:14,302:INFO:Physical Core: 10
2025-03-13 11:17:14,302:INFO:Logical Core: 16
2025-03-13 11:17:14,302:INFO:Checking libraries
2025-03-13 11:17:14,303:INFO:System:
2025-03-13 11:17:14,303:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-13 11:17:14,303:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-13 11:17:14,303:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-13 11:17:14,303:INFO:PyCaret required dependencies:
2025-03-13 11:17:14,427:INFO:                 pip: 24.2
2025-03-13 11:17:14,427:INFO:          setuptools: 75.1.0
2025-03-13 11:17:14,427:INFO:             pycaret: 3.3.2
2025-03-13 11:17:14,427:INFO:             IPython: 8.12.0
2025-03-13 11:17:14,427:INFO:          ipywidgets: 8.1.5
2025-03-13 11:17:14,427:INFO:                tqdm: 4.67.1
2025-03-13 11:17:14,427:INFO:               numpy: 1.24.3
2025-03-13 11:17:14,427:INFO:              pandas: 2.1.4
2025-03-13 11:17:14,427:INFO:              jinja2: 3.1.5
2025-03-13 11:17:14,427:INFO:               scipy: 1.11.4
2025-03-13 11:17:14,427:INFO:              joblib: 1.3.2
2025-03-13 11:17:14,427:INFO:             sklearn: 1.4.2
2025-03-13 11:17:14,427:INFO:                pyod: 2.0.3
2025-03-13 11:17:14,427:INFO:            imblearn: 0.12.4
2025-03-13 11:17:14,427:INFO:   category_encoders: 2.6.4
2025-03-13 11:17:14,427:INFO:            lightgbm: 4.6.0
2025-03-13 11:17:14,427:INFO:               numba: 0.60.0
2025-03-13 11:17:14,427:INFO:            requests: 2.32.3
2025-03-13 11:17:14,427:INFO:          matplotlib: 3.7.5
2025-03-13 11:17:14,427:INFO:          scikitplot: 0.3.7
2025-03-13 11:17:14,427:INFO:         yellowbrick: 1.5
2025-03-13 11:17:14,427:INFO:              plotly: 5.24.1
2025-03-13 11:17:14,427:INFO:    plotly-resampler: Not installed
2025-03-13 11:17:14,427:INFO:             kaleido: 0.2.1
2025-03-13 11:17:14,427:INFO:           schemdraw: 0.15
2025-03-13 11:17:14,427:INFO:         statsmodels: 0.14.4
2025-03-13 11:17:14,427:INFO:              sktime: 0.26.0
2025-03-13 11:17:14,427:INFO:               tbats: 1.1.3
2025-03-13 11:17:14,427:INFO:            pmdarima: 2.0.4
2025-03-13 11:17:14,427:INFO:              psutil: 5.9.0
2025-03-13 11:17:14,427:INFO:          markupsafe: 3.0.2
2025-03-13 11:17:14,427:INFO:             pickle5: Not installed
2025-03-13 11:17:14,427:INFO:         cloudpickle: 2.2.1
2025-03-13 11:17:14,427:INFO:         deprecation: 2.1.0
2025-03-13 11:17:14,427:INFO:              xxhash: 3.5.0
2025-03-13 11:17:14,427:INFO:           wurlitzer: Not installed
2025-03-13 11:17:14,427:INFO:PyCaret optional dependencies:
2025-03-13 11:17:14,516:INFO:                shap: Not installed
2025-03-13 11:17:14,516:INFO:           interpret: Not installed
2025-03-13 11:17:14,516:INFO:                umap: Not installed
2025-03-13 11:17:14,516:INFO:     ydata_profiling: Not installed
2025-03-13 11:17:14,516:INFO:  explainerdashboard: Not installed
2025-03-13 11:17:14,516:INFO:             autoviz: Not installed
2025-03-13 11:17:14,516:INFO:           fairlearn: Not installed
2025-03-13 11:17:14,516:INFO:          deepchecks: Not installed
2025-03-13 11:17:14,516:INFO:             xgboost: Not installed
2025-03-13 11:17:14,516:INFO:            catboost: Not installed
2025-03-13 11:17:14,516:INFO:              kmodes: Not installed
2025-03-13 11:17:14,516:INFO:             mlxtend: Not installed
2025-03-13 11:17:14,516:INFO:       statsforecast: Not installed
2025-03-13 11:17:14,516:INFO:        tune_sklearn: Not installed
2025-03-13 11:17:14,516:INFO:                 ray: Not installed
2025-03-13 11:17:14,516:INFO:            hyperopt: Not installed
2025-03-13 11:17:14,516:INFO:              optuna: Not installed
2025-03-13 11:17:14,516:INFO:               skopt: Not installed
2025-03-13 11:17:14,516:INFO:              mlflow: Not installed
2025-03-13 11:17:14,516:INFO:              gradio: Not installed
2025-03-13 11:17:14,517:INFO:             fastapi: Not installed
2025-03-13 11:17:14,517:INFO:             uvicorn: 0.34.0
2025-03-13 11:17:14,517:INFO:              m2cgen: Not installed
2025-03-13 11:17:14,517:INFO:           evidently: Not installed
2025-03-13 11:17:14,517:INFO:               fugue: Not installed
2025-03-13 11:17:14,517:INFO:           streamlit: Not installed
2025-03-13 11:17:14,517:INFO:             prophet: 1.1.6
2025-03-13 11:17:14,517:INFO:None
2025-03-13 11:17:14,517:INFO:Set up data.
2025-03-13 11:17:14,525:INFO:Set up folding strategy.
2025-03-13 11:17:14,525:INFO:Set up train/test split.
2025-03-13 11:17:14,544:INFO:Set up index.
2025-03-13 11:17:14,545:INFO:Assigning column types.
2025-03-13 11:17:14,552:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-13 11:17:14,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,581:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,646:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-13 11:17:14,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,714:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 11:17:14,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,731:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-13 11:17:14,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:14,818:INFO:Preparing preprocessing pipeline...
2025-03-13 11:17:14,823:INFO:Set up label encoding.
2025-03-13 11:17:14,823:INFO:Set up simple imputation.
2025-03-13 11:17:14,823:INFO:Set up feature normalization.
2025-03-13 11:17:14,873:INFO:Finished creating preprocessing pipeline.
2025-03-13 11:17:14,877:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'Z_LOC', 'NPHI',
                                             'DTC', 'SP', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-13 11:17:14,878:INFO:Creating final display dataframe.
2025-03-13 11:17:14,988:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                          (51625, 9)  
5                                          (51625, 9)  
6                                          (36137, 9)  
7                                          (15488, 9)  
8                                                   8  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               9536  
2025-03-13 11:17:15,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:15,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:15,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:15,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 11:17:15,085:INFO:setup() successfully completed in 0.79s...............
2025-03-13 11:17:15,085:INFO:Initializing compare_models()
2025-03-13 11:17:15,085:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-13 11:17:15,085:INFO:Checking exceptions
2025-03-13 11:17:15,095:INFO:Preparing display monitor
2025-03-13 11:17:15,117:INFO:Initializing Logistic Regression
2025-03-13 11:17:15,117:INFO:Total runtime is 0.0 minutes
2025-03-13 11:17:15,120:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:15,120:INFO:Initializing create_model()
2025-03-13 11:17:15,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:15,120:INFO:Checking exceptions
2025-03-13 11:17:15,120:INFO:Importing libraries
2025-03-13 11:17:15,120:INFO:Copying training dataset
2025-03-13 11:17:15,132:INFO:Defining folds
2025-03-13 11:17:15,132:INFO:Declaring metric variables
2025-03-13 11:17:15,135:INFO:Importing untrained model
2025-03-13 11:17:15,139:INFO:Logistic Regression Imported successfully
2025-03-13 11:17:15,147:INFO:Starting cross validation
2025-03-13 11:17:15,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:23,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,155:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,200:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,214:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,220:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:23,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,367:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,370:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:23,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,408:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,419:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,432:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:23,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:23,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:23,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:23,573:INFO:Calculating mean and std
2025-03-13 11:17:23,575:INFO:Creating metrics dataframe
2025-03-13 11:17:23,578:INFO:Uploading results into container
2025-03-13 11:17:23,579:INFO:Uploading model into container now
2025-03-13 11:17:23,579:INFO:_master_model_container: 1
2025-03-13 11:17:23,579:INFO:_display_container: 2
2025-03-13 11:17:23,579:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-13 11:17:23,579:INFO:create_model() successfully completed......................................
2025-03-13 11:17:23,639:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:23,639:INFO:Creating metrics dataframe
2025-03-13 11:17:23,643:INFO:Initializing K Neighbors Classifier
2025-03-13 11:17:23,643:INFO:Total runtime is 0.14210340181986492 minutes
2025-03-13 11:17:23,647:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:23,647:INFO:Initializing create_model()
2025-03-13 11:17:23,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:23,647:INFO:Checking exceptions
2025-03-13 11:17:23,647:INFO:Importing libraries
2025-03-13 11:17:23,647:INFO:Copying training dataset
2025-03-13 11:17:23,656:INFO:Defining folds
2025-03-13 11:17:23,656:INFO:Declaring metric variables
2025-03-13 11:17:23,659:INFO:Importing untrained model
2025-03-13 11:17:23,662:INFO:K Neighbors Classifier Imported successfully
2025-03-13 11:17:23,668:INFO:Starting cross validation
2025-03-13 11:17:23,668:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:24,224:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,239:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,272:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,283:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,325:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:24,339:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,165:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,169:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,170:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,202:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,255:INFO:Calculating mean and std
2025-03-13 11:17:27,255:INFO:Creating metrics dataframe
2025-03-13 11:17:27,257:INFO:Uploading results into container
2025-03-13 11:17:27,257:INFO:Uploading model into container now
2025-03-13 11:17:27,258:INFO:_master_model_container: 2
2025-03-13 11:17:27,258:INFO:_display_container: 2
2025-03-13 11:17:27,258:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-13 11:17:27,258:INFO:create_model() successfully completed......................................
2025-03-13 11:17:27,319:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:27,319:INFO:Creating metrics dataframe
2025-03-13 11:17:27,327:INFO:Initializing Naive Bayes
2025-03-13 11:17:27,327:INFO:Total runtime is 0.20350132783253988 minutes
2025-03-13 11:17:27,330:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:27,330:INFO:Initializing create_model()
2025-03-13 11:17:27,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:27,330:INFO:Checking exceptions
2025-03-13 11:17:27,330:INFO:Importing libraries
2025-03-13 11:17:27,330:INFO:Copying training dataset
2025-03-13 11:17:27,341:INFO:Defining folds
2025-03-13 11:17:27,341:INFO:Declaring metric variables
2025-03-13 11:17:27,344:INFO:Importing untrained model
2025-03-13 11:17:27,346:INFO:Naive Bayes Imported successfully
2025-03-13 11:17:27,352:INFO:Starting cross validation
2025-03-13 11:17:27,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:27,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,514:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,526:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:27,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:27,550:INFO:Calculating mean and std
2025-03-13 11:17:27,550:INFO:Creating metrics dataframe
2025-03-13 11:17:27,552:INFO:Uploading results into container
2025-03-13 11:17:27,553:INFO:Uploading model into container now
2025-03-13 11:17:27,553:INFO:_master_model_container: 3
2025-03-13 11:17:27,553:INFO:_display_container: 2
2025-03-13 11:17:27,553:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-13 11:17:27,553:INFO:create_model() successfully completed......................................
2025-03-13 11:17:27,612:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:27,612:INFO:Creating metrics dataframe
2025-03-13 11:17:27,617:INFO:Initializing Decision Tree Classifier
2025-03-13 11:17:27,617:INFO:Total runtime is 0.20833611488342285 minutes
2025-03-13 11:17:27,620:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:27,620:INFO:Initializing create_model()
2025-03-13 11:17:27,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:27,620:INFO:Checking exceptions
2025-03-13 11:17:27,620:INFO:Importing libraries
2025-03-13 11:17:27,620:INFO:Copying training dataset
2025-03-13 11:17:27,629:INFO:Defining folds
2025-03-13 11:17:27,629:INFO:Declaring metric variables
2025-03-13 11:17:27,633:INFO:Importing untrained model
2025-03-13 11:17:27,636:INFO:Decision Tree Classifier Imported successfully
2025-03-13 11:17:27,642:INFO:Starting cross validation
2025-03-13 11:17:27,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:28,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,341:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,344:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,345:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,366:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,367:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,375:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,390:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,408:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:28,420:INFO:Calculating mean and std
2025-03-13 11:17:28,421:INFO:Creating metrics dataframe
2025-03-13 11:17:28,422:INFO:Uploading results into container
2025-03-13 11:17:28,422:INFO:Uploading model into container now
2025-03-13 11:17:28,423:INFO:_master_model_container: 4
2025-03-13 11:17:28,423:INFO:_display_container: 2
2025-03-13 11:17:28,423:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-13 11:17:28,423:INFO:create_model() successfully completed......................................
2025-03-13 11:17:28,483:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:28,483:INFO:Creating metrics dataframe
2025-03-13 11:17:28,488:INFO:Initializing SVM - Linear Kernel
2025-03-13 11:17:28,488:INFO:Total runtime is 0.2228495955467224 minutes
2025-03-13 11:17:28,491:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:28,491:INFO:Initializing create_model()
2025-03-13 11:17:28,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:28,491:INFO:Checking exceptions
2025-03-13 11:17:28,491:INFO:Importing libraries
2025-03-13 11:17:28,491:INFO:Copying training dataset
2025-03-13 11:17:28,501:INFO:Defining folds
2025-03-13 11:17:28,501:INFO:Declaring metric variables
2025-03-13 11:17:28,504:INFO:Importing untrained model
2025-03-13 11:17:28,508:INFO:SVM - Linear Kernel Imported successfully
2025-03-13 11:17:28,513:INFO:Starting cross validation
2025-03-13 11:17:28,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:29,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,184:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,190:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,196:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,249:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,255:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,256:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,262:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,266:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,267:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,268:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,269:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,270:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,270:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,272:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,273:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,273:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,274:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,279:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,299:INFO:Calculating mean and std
2025-03-13 11:17:29,300:INFO:Creating metrics dataframe
2025-03-13 11:17:29,301:INFO:Uploading results into container
2025-03-13 11:17:29,302:INFO:Uploading model into container now
2025-03-13 11:17:29,302:INFO:_master_model_container: 5
2025-03-13 11:17:29,303:INFO:_display_container: 2
2025-03-13 11:17:29,303:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-13 11:17:29,303:INFO:create_model() successfully completed......................................
2025-03-13 11:17:29,362:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:29,362:INFO:Creating metrics dataframe
2025-03-13 11:17:29,367:INFO:Initializing Ridge Classifier
2025-03-13 11:17:29,367:INFO:Total runtime is 0.23751341501871745 minutes
2025-03-13 11:17:29,370:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:29,370:INFO:Initializing create_model()
2025-03-13 11:17:29,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:29,370:INFO:Checking exceptions
2025-03-13 11:17:29,370:INFO:Importing libraries
2025-03-13 11:17:29,370:INFO:Copying training dataset
2025-03-13 11:17:29,380:INFO:Defining folds
2025-03-13 11:17:29,382:INFO:Declaring metric variables
2025-03-13 11:17:29,384:INFO:Importing untrained model
2025-03-13 11:17:29,387:INFO:Ridge Classifier Imported successfully
2025-03-13 11:17:29,393:INFO:Starting cross validation
2025-03-13 11:17:29,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:29,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,514:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,514:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,526:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,543:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,549:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,549:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:29,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:29,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:29,590:INFO:Calculating mean and std
2025-03-13 11:17:29,593:INFO:Creating metrics dataframe
2025-03-13 11:17:29,594:INFO:Uploading results into container
2025-03-13 11:17:29,595:INFO:Uploading model into container now
2025-03-13 11:17:29,595:INFO:_master_model_container: 6
2025-03-13 11:17:29,595:INFO:_display_container: 2
2025-03-13 11:17:29,595:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-13 11:17:29,595:INFO:create_model() successfully completed......................................
2025-03-13 11:17:29,656:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:29,656:INFO:Creating metrics dataframe
2025-03-13 11:17:29,662:INFO:Initializing Random Forest Classifier
2025-03-13 11:17:29,662:INFO:Total runtime is 0.2424299756685893 minutes
2025-03-13 11:17:29,666:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:29,666:INFO:Initializing create_model()
2025-03-13 11:17:29,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:29,666:INFO:Checking exceptions
2025-03-13 11:17:29,666:INFO:Importing libraries
2025-03-13 11:17:29,666:INFO:Copying training dataset
2025-03-13 11:17:29,677:INFO:Defining folds
2025-03-13 11:17:29,677:INFO:Declaring metric variables
2025-03-13 11:17:29,680:INFO:Importing untrained model
2025-03-13 11:17:29,684:INFO:Random Forest Classifier Imported successfully
2025-03-13 11:17:29,690:INFO:Starting cross validation
2025-03-13 11:17:29,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:38,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,890:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,910:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,917:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:38,960:INFO:Calculating mean and std
2025-03-13 11:17:38,960:INFO:Creating metrics dataframe
2025-03-13 11:17:38,963:INFO:Uploading results into container
2025-03-13 11:17:38,964:INFO:Uploading model into container now
2025-03-13 11:17:38,964:INFO:_master_model_container: 7
2025-03-13 11:17:38,964:INFO:_display_container: 2
2025-03-13 11:17:38,964:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-13 11:17:38,965:INFO:create_model() successfully completed......................................
2025-03-13 11:17:39,028:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:39,029:INFO:Creating metrics dataframe
2025-03-13 11:17:39,034:INFO:Initializing Quadratic Discriminant Analysis
2025-03-13 11:17:39,034:INFO:Total runtime is 0.3986287315686544 minutes
2025-03-13 11:17:39,038:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:39,038:INFO:Initializing create_model()
2025-03-13 11:17:39,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:39,038:INFO:Checking exceptions
2025-03-13 11:17:39,038:INFO:Importing libraries
2025-03-13 11:17:39,038:INFO:Copying training dataset
2025-03-13 11:17:39,049:INFO:Defining folds
2025-03-13 11:17:39,049:INFO:Declaring metric variables
2025-03-13 11:17:39,053:INFO:Importing untrained model
2025-03-13 11:17:39,056:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-13 11:17:39,063:INFO:Starting cross validation
2025-03-13 11:17:39,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:39,180:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,183:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,184:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,207:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,208:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,209:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,210:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,214:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,218:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,218:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,219:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,219:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,220:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,224:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,225:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,225:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 11:17:39,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,235:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,238:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,241:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,242:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,243:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,247:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,248:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,249:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,250:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:39,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,253:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,256:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:39,282:INFO:Calculating mean and std
2025-03-13 11:17:39,283:INFO:Creating metrics dataframe
2025-03-13 11:17:39,284:INFO:Uploading results into container
2025-03-13 11:17:39,285:INFO:Uploading model into container now
2025-03-13 11:17:39,285:INFO:_master_model_container: 8
2025-03-13 11:17:39,285:INFO:_display_container: 2
2025-03-13 11:17:39,285:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-13 11:17:39,285:INFO:create_model() successfully completed......................................
2025-03-13 11:17:39,347:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:39,347:INFO:Creating metrics dataframe
2025-03-13 11:17:39,354:INFO:Initializing Ada Boost Classifier
2025-03-13 11:17:39,354:INFO:Total runtime is 0.40395581324895224 minutes
2025-03-13 11:17:39,358:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:39,358:INFO:Initializing create_model()
2025-03-13 11:17:39,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:39,359:INFO:Checking exceptions
2025-03-13 11:17:39,359:INFO:Importing libraries
2025-03-13 11:17:39,359:INFO:Copying training dataset
2025-03-13 11:17:39,371:INFO:Defining folds
2025-03-13 11:17:39,371:INFO:Declaring metric variables
2025-03-13 11:17:39,375:INFO:Importing untrained model
2025-03-13 11:17:39,377:INFO:Ada Boost Classifier Imported successfully
2025-03-13 11:17:39,385:INFO:Starting cross validation
2025-03-13 11:17:39,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:17:39,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:39,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 11:17:43,722:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,724:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,730:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,733:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,748:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,760:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,764:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,783:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,785:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,790:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,793:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,800:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,800:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,809:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:17:43,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,890:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,896:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:17:43,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:17:43,917:INFO:Calculating mean and std
2025-03-13 11:17:43,918:INFO:Creating metrics dataframe
2025-03-13 11:17:43,921:INFO:Uploading results into container
2025-03-13 11:17:43,921:INFO:Uploading model into container now
2025-03-13 11:17:43,922:INFO:_master_model_container: 9
2025-03-13 11:17:43,922:INFO:_display_container: 2
2025-03-13 11:17:43,922:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-13 11:17:43,922:INFO:create_model() successfully completed......................................
2025-03-13 11:17:43,990:INFO:SubProcess create_model() end ==================================
2025-03-13 11:17:43,990:INFO:Creating metrics dataframe
2025-03-13 11:17:43,997:INFO:Initializing Gradient Boosting Classifier
2025-03-13 11:17:43,998:INFO:Total runtime is 0.4813474456469218 minutes
2025-03-13 11:17:44,001:INFO:SubProcess create_model() called ==================================
2025-03-13 11:17:44,001:INFO:Initializing create_model()
2025-03-13 11:17:44,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:17:44,001:INFO:Checking exceptions
2025-03-13 11:17:44,001:INFO:Importing libraries
2025-03-13 11:17:44,001:INFO:Copying training dataset
2025-03-13 11:17:44,012:INFO:Defining folds
2025-03-13 11:17:44,012:INFO:Declaring metric variables
2025-03-13 11:17:44,015:INFO:Importing untrained model
2025-03-13 11:17:44,019:INFO:Gradient Boosting Classifier Imported successfully
2025-03-13 11:17:44,027:INFO:Starting cross validation
2025-03-13 11:17:44,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:20:33,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:33,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:33,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:33,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:33,904:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:33,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:33,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:33,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,048:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,054:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,345:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,945:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:34,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:34,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:35,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:35,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:35,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:35,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,031:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,058:INFO:Calculating mean and std
2025-03-13 11:20:43,059:INFO:Creating metrics dataframe
2025-03-13 11:20:43,060:INFO:Uploading results into container
2025-03-13 11:20:43,060:INFO:Uploading model into container now
2025-03-13 11:20:43,062:INFO:_master_model_container: 10
2025-03-13 11:20:43,062:INFO:_display_container: 2
2025-03-13 11:20:43,062:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-13 11:20:43,062:INFO:create_model() successfully completed......................................
2025-03-13 11:20:43,125:INFO:SubProcess create_model() end ==================================
2025-03-13 11:20:43,125:INFO:Creating metrics dataframe
2025-03-13 11:20:43,131:INFO:Initializing Linear Discriminant Analysis
2025-03-13 11:20:43,131:INFO:Total runtime is 3.4668999314308167 minutes
2025-03-13 11:20:43,134:INFO:SubProcess create_model() called ==================================
2025-03-13 11:20:43,134:INFO:Initializing create_model()
2025-03-13 11:20:43,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:20:43,134:INFO:Checking exceptions
2025-03-13 11:20:43,135:INFO:Importing libraries
2025-03-13 11:20:43,135:INFO:Copying training dataset
2025-03-13 11:20:43,146:INFO:Defining folds
2025-03-13 11:20:43,146:INFO:Declaring metric variables
2025-03-13 11:20:43,148:INFO:Importing untrained model
2025-03-13 11:20:43,152:INFO:Linear Discriminant Analysis Imported successfully
2025-03-13 11:20:43,160:INFO:Starting cross validation
2025-03-13 11:20:43,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:20:43,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:20:43,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,330:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,339:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:20:43,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,343:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,343:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,348:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:20:43,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 11:20:43,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,358:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,358:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,361:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:43,381:INFO:Calculating mean and std
2025-03-13 11:20:43,382:INFO:Creating metrics dataframe
2025-03-13 11:20:43,384:INFO:Uploading results into container
2025-03-13 11:20:43,384:INFO:Uploading model into container now
2025-03-13 11:20:43,384:INFO:_master_model_container: 11
2025-03-13 11:20:43,384:INFO:_display_container: 2
2025-03-13 11:20:43,384:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-13 11:20:43,384:INFO:create_model() successfully completed......................................
2025-03-13 11:20:43,447:INFO:SubProcess create_model() end ==================================
2025-03-13 11:20:43,448:INFO:Creating metrics dataframe
2025-03-13 11:20:43,454:INFO:Initializing Extra Trees Classifier
2025-03-13 11:20:43,454:INFO:Total runtime is 3.4722819328308105 minutes
2025-03-13 11:20:43,457:INFO:SubProcess create_model() called ==================================
2025-03-13 11:20:43,457:INFO:Initializing create_model()
2025-03-13 11:20:43,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:20:43,457:INFO:Checking exceptions
2025-03-13 11:20:43,457:INFO:Importing libraries
2025-03-13 11:20:43,458:INFO:Copying training dataset
2025-03-13 11:20:43,467:INFO:Defining folds
2025-03-13 11:20:43,467:INFO:Declaring metric variables
2025-03-13 11:20:43,470:INFO:Importing untrained model
2025-03-13 11:20:43,474:INFO:Extra Trees Classifier Imported successfully
2025-03-13 11:20:43,479:INFO:Starting cross validation
2025-03-13 11:20:43,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:20:46,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,407:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,422:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,422:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,446:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,543:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,549:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,554:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:20:46,578:INFO:Calculating mean and std
2025-03-13 11:20:46,579:INFO:Creating metrics dataframe
2025-03-13 11:20:46,582:INFO:Uploading results into container
2025-03-13 11:20:46,583:INFO:Uploading model into container now
2025-03-13 11:20:46,583:INFO:_master_model_container: 12
2025-03-13 11:20:46,583:INFO:_display_container: 2
2025-03-13 11:20:46,584:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 11:20:46,584:INFO:create_model() successfully completed......................................
2025-03-13 11:20:46,654:INFO:SubProcess create_model() end ==================================
2025-03-13 11:20:46,654:INFO:Creating metrics dataframe
2025-03-13 11:20:46,663:INFO:Initializing Light Gradient Boosting Machine
2025-03-13 11:20:46,663:INFO:Total runtime is 3.525765033562978 minutes
2025-03-13 11:20:46,666:INFO:SubProcess create_model() called ==================================
2025-03-13 11:20:46,667:INFO:Initializing create_model()
2025-03-13 11:20:46,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:20:46,667:INFO:Checking exceptions
2025-03-13 11:20:46,667:INFO:Importing libraries
2025-03-13 11:20:46,667:INFO:Copying training dataset
2025-03-13 11:20:46,680:INFO:Defining folds
2025-03-13 11:20:46,680:INFO:Declaring metric variables
2025-03-13 11:20:46,685:INFO:Importing untrained model
2025-03-13 11:20:46,689:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-13 11:20:46,697:INFO:Starting cross validation
2025-03-13 11:20:46,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:21:00,270:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:00,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:00,282:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:00,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:00,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:00,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,568:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,634:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:01,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:02,908:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:02,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:02,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,055:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,185:INFO:Calculating mean and std
2025-03-13 11:21:03,187:INFO:Creating metrics dataframe
2025-03-13 11:21:03,190:INFO:Uploading results into container
2025-03-13 11:21:03,190:INFO:Uploading model into container now
2025-03-13 11:21:03,190:INFO:_master_model_container: 13
2025-03-13 11:21:03,192:INFO:_display_container: 2
2025-03-13 11:21:03,192:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-13 11:21:03,192:INFO:create_model() successfully completed......................................
2025-03-13 11:21:03,275:INFO:SubProcess create_model() end ==================================
2025-03-13 11:21:03,275:INFO:Creating metrics dataframe
2025-03-13 11:21:03,285:INFO:Initializing Dummy Classifier
2025-03-13 11:21:03,286:INFO:Total runtime is 3.802823527654012 minutes
2025-03-13 11:21:03,289:INFO:SubProcess create_model() called ==================================
2025-03-13 11:21:03,291:INFO:Initializing create_model()
2025-03-13 11:21:03,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021492BCC1C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:21:03,291:INFO:Checking exceptions
2025-03-13 11:21:03,291:INFO:Importing libraries
2025-03-13 11:21:03,291:INFO:Copying training dataset
2025-03-13 11:21:03,307:INFO:Defining folds
2025-03-13 11:21:03,307:INFO:Declaring metric variables
2025-03-13 11:21:03,313:INFO:Importing untrained model
2025-03-13 11:21:03,318:INFO:Dummy Classifier Imported successfully
2025-03-13 11:21:03,328:INFO:Starting cross validation
2025-03-13 11:21:03,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 11:21:03,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 11:21:03,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:21:03,540:INFO:Calculating mean and std
2025-03-13 11:21:03,541:INFO:Creating metrics dataframe
2025-03-13 11:21:03,542:INFO:Uploading results into container
2025-03-13 11:21:03,543:INFO:Uploading model into container now
2025-03-13 11:21:03,543:INFO:_master_model_container: 14
2025-03-13 11:21:03,543:INFO:_display_container: 2
2025-03-13 11:21:03,544:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-13 11:21:03,544:INFO:create_model() successfully completed......................................
2025-03-13 11:21:03,641:INFO:SubProcess create_model() end ==================================
2025-03-13 11:21:03,641:INFO:Creating metrics dataframe
2025-03-13 11:21:03,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-13 11:21:03,661:INFO:Initializing create_model()
2025-03-13 11:21:03,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 11:21:03,661:INFO:Checking exceptions
2025-03-13 11:21:03,663:INFO:Importing libraries
2025-03-13 11:21:03,663:INFO:Copying training dataset
2025-03-13 11:21:03,676:INFO:Defining folds
2025-03-13 11:21:03,676:INFO:Declaring metric variables
2025-03-13 11:21:03,676:INFO:Importing untrained model
2025-03-13 11:21:03,676:INFO:Declaring custom model
2025-03-13 11:21:03,677:INFO:Extra Trees Classifier Imported successfully
2025-03-13 11:21:03,677:INFO:Cross validation set to False
2025-03-13 11:21:03,677:INFO:Fitting Model
2025-03-13 11:21:04,084:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 11:21:04,084:INFO:create_model() successfully completed......................................
2025-03-13 11:21:04,170:INFO:_master_model_container: 14
2025-03-13 11:21:04,170:INFO:_display_container: 2
2025-03-13 11:21:04,170:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 11:21:04,170:INFO:compare_models() successfully completed......................................
2025-03-13 11:21:04,172:INFO:Initializing evaluate_model()
2025-03-13 11:21:04,172:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-13 11:21:04,187:INFO:Initializing plot_model()
2025-03-13 11:21:04,187:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:21:04,187:INFO:Checking exceptions
2025-03-13 11:21:04,224:INFO:Preloading libraries
2025-03-13 11:21:04,388:INFO:Copying training dataset
2025-03-13 11:21:04,388:INFO:Plot type: pipeline
2025-03-13 11:21:04,546:INFO:Visual Rendered Successfully
2025-03-13 11:21:04,612:INFO:plot_model() successfully completed......................................
2025-03-13 11:21:35,194:INFO:Initializing plot_model()
2025-03-13 11:21:35,195:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:21:35,195:INFO:Checking exceptions
2025-03-13 11:21:35,220:INFO:Preloading libraries
2025-03-13 11:21:35,362:INFO:Copying training dataset
2025-03-13 11:21:35,362:INFO:Plot type: parameter
2025-03-13 11:21:35,365:INFO:Visual Rendered Successfully
2025-03-13 11:21:35,444:INFO:plot_model() successfully completed......................................
2025-03-13 11:21:43,113:INFO:Initializing plot_model()
2025-03-13 11:21:43,114:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:21:43,114:INFO:Checking exceptions
2025-03-13 11:21:43,143:INFO:Preloading libraries
2025-03-13 11:21:43,282:INFO:Copying training dataset
2025-03-13 11:21:43,282:INFO:Plot type: auc
2025-03-13 11:21:43,380:INFO:Fitting Model
2025-03-13 11:21:43,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 11:21:43,388:INFO:Scoring test/hold-out set
2025-03-13 11:21:43,709:INFO:Visual Rendered Successfully
2025-03-13 11:21:43,778:INFO:plot_model() successfully completed......................................
2025-03-13 11:21:53,622:INFO:Initializing plot_model()
2025-03-13 11:21:53,623:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:21:53,623:INFO:Checking exceptions
2025-03-13 11:21:53,652:INFO:Preloading libraries
2025-03-13 11:21:53,786:INFO:Copying training dataset
2025-03-13 11:21:53,786:INFO:Plot type: feature_all
2025-03-13 11:21:53,816:WARNING:No coef_ found. Trying feature_importances_
2025-03-13 11:21:53,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2025-03-13 11:21:53,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2025-03-13 11:21:53,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\patches.py:739: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2025-03-13 11:21:53,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\transforms.py:2050: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2025-03-13 11:21:53,944:INFO:Visual Rendered Successfully
2025-03-13 11:21:54,028:INFO:plot_model() successfully completed......................................
2025-03-13 11:21:57,375:INFO:Initializing plot_model()
2025-03-13 11:21:57,375:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:21:57,375:INFO:Checking exceptions
2025-03-13 11:21:57,404:INFO:Preloading libraries
2025-03-13 11:21:57,541:INFO:Copying training dataset
2025-03-13 11:21:57,541:INFO:Plot type: feature
2025-03-13 11:21:57,542:WARNING:No coef_ found. Trying feature_importances_
2025-03-13 11:21:57,677:INFO:Visual Rendered Successfully
2025-03-13 11:21:57,736:INFO:plot_model() successfully completed......................................
2025-03-13 11:22:21,009:INFO:Initializing plot_model()
2025-03-13 11:22:21,009:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:22:21,009:INFO:Checking exceptions
2025-03-13 11:22:22,593:INFO:Initializing plot_model()
2025-03-13 11:22:22,593:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:22:22,593:INFO:Checking exceptions
2025-03-13 11:22:22,623:INFO:Preloading libraries
2025-03-13 11:22:22,759:INFO:Copying training dataset
2025-03-13 11:22:22,759:INFO:Plot type: learning
2025-03-13 11:22:22,859:INFO:Fitting Model
2025-03-13 11:23:41,314:INFO:Initializing predict_model()
2025-03-13 11:23:41,314:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002150FF32040>)
2025-03-13 11:23:41,314:INFO:Checking exceptions
2025-03-13 11:23:41,314:INFO:Preloading libraries
2025-03-13 11:23:41,316:INFO:Set up data.
2025-03-13 11:23:41,322:INFO:Set up index.
2025-03-13 11:23:41,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:23:41,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:23:41,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 11:23:41,701:INFO:Initializing plot_model()
2025-03-13 11:23:41,701:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:23:41,702:INFO:Checking exceptions
2025-03-13 11:23:41,733:INFO:Preloading libraries
2025-03-13 11:23:41,882:INFO:Copying training dataset
2025-03-13 11:23:41,882:INFO:Plot type: parameter
2025-03-13 11:23:41,885:INFO:Visual Rendered Successfully
2025-03-13 11:23:41,959:INFO:plot_model() successfully completed......................................
2025-03-13 11:23:48,853:INFO:Initializing plot_model()
2025-03-13 11:23:48,853:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:23:48,853:INFO:Checking exceptions
2025-03-13 11:23:48,882:INFO:Preloading libraries
2025-03-13 11:23:49,037:INFO:Copying training dataset
2025-03-13 11:23:49,038:INFO:Plot type: auc
2025-03-13 11:23:49,140:INFO:Fitting Model
2025-03-13 11:23:49,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 11:23:49,142:INFO:Scoring test/hold-out set
2025-03-13 11:23:49,498:INFO:Visual Rendered Successfully
2025-03-13 11:23:49,577:INFO:plot_model() successfully completed......................................
2025-03-13 11:23:49,939:INFO:Initializing plot_model()
2025-03-13 11:23:49,940:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:23:49,940:INFO:Checking exceptions
2025-03-13 11:23:49,970:INFO:Preloading libraries
2025-03-13 11:23:50,128:INFO:Copying training dataset
2025-03-13 11:23:50,128:INFO:Plot type: confusion_matrix
2025-03-13 11:23:50,224:INFO:Fitting Model
2025-03-13 11:23:50,224:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 11:23:50,225:INFO:Scoring test/hold-out set
2025-03-13 11:23:50,624:INFO:Visual Rendered Successfully
2025-03-13 11:23:50,692:INFO:plot_model() successfully completed......................................
2025-03-13 11:29:04,954:INFO:Initializing plot_model()
2025-03-13 11:29:04,955:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:29:04,955:INFO:Checking exceptions
2025-03-13 11:29:04,985:INFO:Preloading libraries
2025-03-13 11:29:05,132:INFO:Copying training dataset
2025-03-13 11:29:05,132:INFO:Plot type: tree
2025-03-13 11:29:06,035:INFO:Plotting decision trees
2025-03-13 11:29:06,063:INFO:Plotting tree 0
2025-03-13 11:29:17,757:INFO:Initializing plot_model()
2025-03-13 11:29:17,757:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:29:17,757:INFO:Checking exceptions
2025-03-13 11:29:17,786:INFO:Preloading libraries
2025-03-13 11:29:17,937:INFO:Copying training dataset
2025-03-13 11:29:17,937:INFO:Plot type: confusion_matrix
2025-03-13 11:29:18,054:INFO:Fitting Model
2025-03-13 11:29:18,054:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 11:29:18,055:INFO:Scoring test/hold-out set
2025-03-13 11:29:18,410:INFO:Visual Rendered Successfully
2025-03-13 11:29:18,609:INFO:plot_model() successfully completed......................................
2025-03-13 11:29:20,489:INFO:Initializing plot_model()
2025-03-13 11:29:20,489:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:29:20,489:INFO:Checking exceptions
2025-03-13 11:29:20,526:INFO:Preloading libraries
2025-03-13 11:29:20,661:INFO:Copying training dataset
2025-03-13 11:29:20,661:INFO:Plot type: pr
2025-03-13 11:29:20,761:INFO:Fitting Model
2025-03-13 11:29:23,245:INFO:Scoring test/hold-out set
2025-03-13 11:29:24,469:INFO:Visual Rendered Successfully
2025-03-13 11:29:24,666:INFO:plot_model() successfully completed......................................
2025-03-13 11:29:24,757:INFO:Initializing plot_model()
2025-03-13 11:29:24,757:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021493DB0130>, system=True)
2025-03-13 11:29:24,757:INFO:Checking exceptions
2025-03-13 11:29:24,788:INFO:Preloading libraries
2025-03-13 11:29:24,927:INFO:Copying training dataset
2025-03-13 11:29:24,928:INFO:Plot type: auc
2025-03-13 11:29:25,019:INFO:Fitting Model
2025-03-13 11:29:25,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 11:29:25,021:INFO:Scoring test/hold-out set
2025-03-13 11:29:25,323:INFO:Visual Rendered Successfully
2025-03-13 11:29:25,507:INFO:plot_model() successfully completed......................................
2025-03-13 15:55:40,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 15:55:40,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 15:55:40,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 15:55:40,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 15:55:40,714:INFO:PyCaret ClassificationExperiment
2025-03-13 15:55:40,714:INFO:Logging name: clf-default-name
2025-03-13 15:55:40,714:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-13 15:55:40,714:INFO:version 3.3.2
2025-03-13 15:55:40,714:INFO:Initializing setup()
2025-03-13 15:55:40,714:INFO:self.USI: b26c
2025-03-13 15:55:40,714:INFO:self._variable_keys: {'pipeline', 'fold_shuffle_param', 'USI', 'X', 'y_train', 'is_multiclass', '_ml_usecase', 'y', 'target_param', 'X_test', 'n_jobs_param', 'html_param', 'exp_name_log', 'gpu_param', 'seed', 'exp_id', 'data', 'y_test', 'logging_param', 'fold_generator', 'fix_imbalance', 'log_plots_param', 'X_train', '_available_plots', 'idx', 'fold_groups_param', 'gpu_n_jobs_param', 'memory'}
2025-03-13 15:55:40,714:INFO:Checking environment
2025-03-13 15:55:40,714:INFO:python_version: 3.9.21
2025-03-13 15:55:40,714:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-13 15:55:40,714:INFO:machine: AMD64
2025-03-13 15:55:40,715:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-13 15:55:40,715:INFO:Memory: svmem(total=25372119040, available=9487806464, percent=62.6, used=15884312576, free=9487806464)
2025-03-13 15:55:40,715:INFO:Physical Core: 10
2025-03-13 15:55:40,715:INFO:Logical Core: 16
2025-03-13 15:55:40,715:INFO:Checking libraries
2025-03-13 15:55:40,715:INFO:System:
2025-03-13 15:55:40,715:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-13 15:55:40,715:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-13 15:55:40,715:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-13 15:55:40,715:INFO:PyCaret required dependencies:
2025-03-13 15:55:40,776:INFO:                 pip: 24.2
2025-03-13 15:55:40,776:INFO:          setuptools: 75.1.0
2025-03-13 15:55:40,776:INFO:             pycaret: 3.3.2
2025-03-13 15:55:40,776:INFO:             IPython: 8.12.0
2025-03-13 15:55:40,776:INFO:          ipywidgets: 8.1.5
2025-03-13 15:55:40,776:INFO:                tqdm: 4.67.1
2025-03-13 15:55:40,776:INFO:               numpy: 1.24.3
2025-03-13 15:55:40,776:INFO:              pandas: 2.1.4
2025-03-13 15:55:40,776:INFO:              jinja2: 3.1.5
2025-03-13 15:55:40,776:INFO:               scipy: 1.11.4
2025-03-13 15:55:40,776:INFO:              joblib: 1.3.2
2025-03-13 15:55:40,776:INFO:             sklearn: 1.4.2
2025-03-13 15:55:40,776:INFO:                pyod: 2.0.3
2025-03-13 15:55:40,776:INFO:            imblearn: 0.12.4
2025-03-13 15:55:40,776:INFO:   category_encoders: 2.6.4
2025-03-13 15:55:40,776:INFO:            lightgbm: 4.6.0
2025-03-13 15:55:40,776:INFO:               numba: 0.60.0
2025-03-13 15:55:40,776:INFO:            requests: 2.32.3
2025-03-13 15:55:40,776:INFO:          matplotlib: 3.7.5
2025-03-13 15:55:40,776:INFO:          scikitplot: 0.3.7
2025-03-13 15:55:40,777:INFO:         yellowbrick: 1.5
2025-03-13 15:55:40,777:INFO:              plotly: 5.24.1
2025-03-13 15:55:40,777:INFO:    plotly-resampler: Not installed
2025-03-13 15:55:40,777:INFO:             kaleido: 0.2.1
2025-03-13 15:55:40,777:INFO:           schemdraw: 0.15
2025-03-13 15:55:40,777:INFO:         statsmodels: 0.14.4
2025-03-13 15:55:40,777:INFO:              sktime: 0.26.0
2025-03-13 15:55:40,777:INFO:               tbats: 1.1.3
2025-03-13 15:55:40,777:INFO:            pmdarima: 2.0.4
2025-03-13 15:55:40,777:INFO:              psutil: 5.9.0
2025-03-13 15:55:40,777:INFO:          markupsafe: 3.0.2
2025-03-13 15:55:40,777:INFO:             pickle5: Not installed
2025-03-13 15:55:40,777:INFO:         cloudpickle: 2.2.1
2025-03-13 15:55:40,777:INFO:         deprecation: 2.1.0
2025-03-13 15:55:40,777:INFO:              xxhash: 3.5.0
2025-03-13 15:55:40,777:INFO:           wurlitzer: Not installed
2025-03-13 15:55:40,777:INFO:PyCaret optional dependencies:
2025-03-13 15:55:40,859:INFO:                shap: Not installed
2025-03-13 15:55:40,859:INFO:           interpret: Not installed
2025-03-13 15:55:40,859:INFO:                umap: Not installed
2025-03-13 15:55:40,859:INFO:     ydata_profiling: Not installed
2025-03-13 15:55:40,859:INFO:  explainerdashboard: Not installed
2025-03-13 15:55:40,859:INFO:             autoviz: Not installed
2025-03-13 15:55:40,859:INFO:           fairlearn: Not installed
2025-03-13 15:55:40,859:INFO:          deepchecks: Not installed
2025-03-13 15:55:40,859:INFO:             xgboost: Not installed
2025-03-13 15:55:40,859:INFO:            catboost: Not installed
2025-03-13 15:55:40,859:INFO:              kmodes: Not installed
2025-03-13 15:55:40,859:INFO:             mlxtend: Not installed
2025-03-13 15:55:40,859:INFO:       statsforecast: Not installed
2025-03-13 15:55:40,859:INFO:        tune_sklearn: Not installed
2025-03-13 15:55:40,859:INFO:                 ray: Not installed
2025-03-13 15:55:40,859:INFO:            hyperopt: Not installed
2025-03-13 15:55:40,859:INFO:              optuna: Not installed
2025-03-13 15:55:40,859:INFO:               skopt: Not installed
2025-03-13 15:55:40,859:INFO:              mlflow: Not installed
2025-03-13 15:55:40,860:INFO:              gradio: Not installed
2025-03-13 15:55:40,860:INFO:             fastapi: Not installed
2025-03-13 15:55:40,860:INFO:             uvicorn: 0.34.0
2025-03-13 15:55:40,860:INFO:              m2cgen: Not installed
2025-03-13 15:55:40,860:INFO:           evidently: Not installed
2025-03-13 15:55:40,860:INFO:               fugue: Not installed
2025-03-13 15:55:40,860:INFO:           streamlit: Not installed
2025-03-13 15:55:40,860:INFO:             prophet: 1.1.6
2025-03-13 15:55:40,860:INFO:None
2025-03-13 15:55:40,860:INFO:Set up data.
2025-03-13 15:55:40,870:INFO:Set up folding strategy.
2025-03-13 15:55:40,870:INFO:Set up train/test split.
2025-03-13 15:55:40,888:INFO:Set up index.
2025-03-13 15:55:40,889:INFO:Assigning column types.
2025-03-13 15:55:40,897:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-13 15:55:40,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 15:55:40,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:55:40,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:40,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:40,974:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 15:55:40,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:55:40,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:40,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:40,990:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-13 15:55:41,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:55:41,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,058:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:55:41,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,075:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-13 15:55:41,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,165:INFO:Preparing preprocessing pipeline...
2025-03-13 15:55:41,167:INFO:Set up label encoding.
2025-03-13 15:55:41,167:INFO:Set up simple imputation.
2025-03-13 15:55:41,167:INFO:Set up feature normalization.
2025-03-13 15:55:41,212:INFO:Finished creating preprocessing pipeline.
2025-03-13 15:55:41,216:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'Z_LOC', 'NPHI',
                                             'DTC', 'SP', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-13 15:55:41,216:INFO:Creating final display dataframe.
2025-03-13 15:55:41,323:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                          (51625, 9)  
5                                          (51625, 9)  
6                                          (36137, 9)  
7                                          (15488, 9)  
8                                                   8  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               b26c  
2025-03-13 15:55:41,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:55:41,420:INFO:setup() successfully completed in 0.71s...............
2025-03-13 15:55:41,420:INFO:Initializing compare_models()
2025-03-13 15:55:41,420:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F3EAE21250>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F3EAE21250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-13 15:55:41,420:INFO:Checking exceptions
2025-03-13 15:55:41,430:INFO:Preparing display monitor
2025-03-13 15:55:41,450:INFO:Initializing Logistic Regression
2025-03-13 15:55:41,450:INFO:Total runtime is 0.0 minutes
2025-03-13 15:55:41,454:INFO:SubProcess create_model() called ==================================
2025-03-13 15:55:41,454:INFO:Initializing create_model()
2025-03-13 15:55:41,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F3EAE21250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E263880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:55:41,455:INFO:Checking exceptions
2025-03-13 15:55:41,455:INFO:Importing libraries
2025-03-13 15:55:41,455:INFO:Copying training dataset
2025-03-13 15:55:41,473:INFO:Defining folds
2025-03-13 15:55:41,473:INFO:Declaring metric variables
2025-03-13 15:55:41,480:INFO:Importing untrained model
2025-03-13 15:55:41,488:INFO:Logistic Regression Imported successfully
2025-03-13 15:55:41,496:INFO:Starting cross validation
2025-03-13 15:55:41,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:55:43,401:WARNING:C:\Users\Asus\AppData\Local\Temp\ipykernel_14144\4226393491.py:814: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  import pkg_resources

2025-03-13 15:57:10,838:INFO:PyCaret ClassificationExperiment
2025-03-13 15:57:10,838:INFO:Logging name: clf-default-name
2025-03-13 15:57:10,838:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-13 15:57:10,838:INFO:version 3.3.2
2025-03-13 15:57:10,838:INFO:Initializing setup()
2025-03-13 15:57:10,838:INFO:self.USI: da32
2025-03-13 15:57:10,838:INFO:self._variable_keys: {'pipeline', 'fold_shuffle_param', 'USI', 'X', 'y_train', 'is_multiclass', '_ml_usecase', 'y', 'target_param', 'X_test', 'n_jobs_param', 'html_param', 'exp_name_log', 'gpu_param', 'seed', 'exp_id', 'data', 'y_test', 'logging_param', 'fold_generator', 'fix_imbalance', 'log_plots_param', 'X_train', '_available_plots', 'idx', 'fold_groups_param', 'gpu_n_jobs_param', 'memory'}
2025-03-13 15:57:10,838:INFO:Checking environment
2025-03-13 15:57:10,838:INFO:python_version: 3.9.21
2025-03-13 15:57:10,838:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-13 15:57:10,838:INFO:machine: AMD64
2025-03-13 15:57:10,838:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-13 15:57:10,838:INFO:Memory: svmem(total=25372119040, available=9975476224, percent=60.7, used=15396642816, free=9975476224)
2025-03-13 15:57:10,838:INFO:Physical Core: 10
2025-03-13 15:57:10,838:INFO:Logical Core: 16
2025-03-13 15:57:10,838:INFO:Checking libraries
2025-03-13 15:57:10,838:INFO:System:
2025-03-13 15:57:10,838:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-13 15:57:10,838:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-13 15:57:10,838:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-13 15:57:10,838:INFO:PyCaret required dependencies:
2025-03-13 15:57:10,839:INFO:                 pip: 24.2
2025-03-13 15:57:10,839:INFO:          setuptools: 75.1.0
2025-03-13 15:57:10,839:INFO:             pycaret: 3.3.2
2025-03-13 15:57:10,839:INFO:             IPython: 8.12.0
2025-03-13 15:57:10,839:INFO:          ipywidgets: 8.1.5
2025-03-13 15:57:10,839:INFO:                tqdm: 4.67.1
2025-03-13 15:57:10,839:INFO:               numpy: 1.24.3
2025-03-13 15:57:10,839:INFO:              pandas: 2.1.4
2025-03-13 15:57:10,839:INFO:              jinja2: 3.1.5
2025-03-13 15:57:10,839:INFO:               scipy: 1.11.4
2025-03-13 15:57:10,839:INFO:              joblib: 1.3.2
2025-03-13 15:57:10,839:INFO:             sklearn: 1.4.2
2025-03-13 15:57:10,839:INFO:                pyod: 2.0.3
2025-03-13 15:57:10,839:INFO:            imblearn: 0.12.4
2025-03-13 15:57:10,839:INFO:   category_encoders: 2.6.4
2025-03-13 15:57:10,839:INFO:            lightgbm: 4.6.0
2025-03-13 15:57:10,839:INFO:               numba: 0.60.0
2025-03-13 15:57:10,839:INFO:            requests: 2.32.3
2025-03-13 15:57:10,839:INFO:          matplotlib: 3.7.5
2025-03-13 15:57:10,839:INFO:          scikitplot: 0.3.7
2025-03-13 15:57:10,839:INFO:         yellowbrick: 1.5
2025-03-13 15:57:10,839:INFO:              plotly: 5.24.1
2025-03-13 15:57:10,839:INFO:    plotly-resampler: Not installed
2025-03-13 15:57:10,839:INFO:             kaleido: 0.2.1
2025-03-13 15:57:10,839:INFO:           schemdraw: 0.15
2025-03-13 15:57:10,839:INFO:         statsmodels: 0.14.4
2025-03-13 15:57:10,839:INFO:              sktime: 0.26.0
2025-03-13 15:57:10,839:INFO:               tbats: 1.1.3
2025-03-13 15:57:10,839:INFO:            pmdarima: 2.0.4
2025-03-13 15:57:10,839:INFO:              psutil: 5.9.0
2025-03-13 15:57:10,839:INFO:          markupsafe: 3.0.2
2025-03-13 15:57:10,839:INFO:             pickle5: Not installed
2025-03-13 15:57:10,839:INFO:         cloudpickle: 2.2.1
2025-03-13 15:57:10,839:INFO:         deprecation: 2.1.0
2025-03-13 15:57:10,839:INFO:              xxhash: 3.5.0
2025-03-13 15:57:10,839:INFO:           wurlitzer: Not installed
2025-03-13 15:57:10,839:INFO:PyCaret optional dependencies:
2025-03-13 15:57:10,839:INFO:                shap: Not installed
2025-03-13 15:57:10,839:INFO:           interpret: Not installed
2025-03-13 15:57:10,839:INFO:                umap: Not installed
2025-03-13 15:57:10,839:INFO:     ydata_profiling: Not installed
2025-03-13 15:57:10,839:INFO:  explainerdashboard: Not installed
2025-03-13 15:57:10,839:INFO:             autoviz: Not installed
2025-03-13 15:57:10,839:INFO:           fairlearn: Not installed
2025-03-13 15:57:10,839:INFO:          deepchecks: Not installed
2025-03-13 15:57:10,839:INFO:             xgboost: Not installed
2025-03-13 15:57:10,839:INFO:            catboost: Not installed
2025-03-13 15:57:10,839:INFO:              kmodes: Not installed
2025-03-13 15:57:10,839:INFO:             mlxtend: Not installed
2025-03-13 15:57:10,839:INFO:       statsforecast: Not installed
2025-03-13 15:57:10,839:INFO:        tune_sklearn: Not installed
2025-03-13 15:57:10,839:INFO:                 ray: Not installed
2025-03-13 15:57:10,839:INFO:            hyperopt: Not installed
2025-03-13 15:57:10,839:INFO:              optuna: Not installed
2025-03-13 15:57:10,840:INFO:               skopt: Not installed
2025-03-13 15:57:10,840:INFO:              mlflow: Not installed
2025-03-13 15:57:10,840:INFO:              gradio: Not installed
2025-03-13 15:57:10,840:INFO:             fastapi: Not installed
2025-03-13 15:57:10,840:INFO:             uvicorn: 0.34.0
2025-03-13 15:57:10,840:INFO:              m2cgen: Not installed
2025-03-13 15:57:10,840:INFO:           evidently: Not installed
2025-03-13 15:57:10,840:INFO:               fugue: Not installed
2025-03-13 15:57:10,840:INFO:           streamlit: Not installed
2025-03-13 15:57:10,840:INFO:             prophet: 1.1.6
2025-03-13 15:57:10,840:INFO:None
2025-03-13 15:57:10,840:INFO:Set up data.
2025-03-13 15:57:10,847:INFO:Set up folding strategy.
2025-03-13 15:57:10,847:INFO:Set up train/test split.
2025-03-13 15:57:10,864:INFO:Set up index.
2025-03-13 15:57:10,865:INFO:Assigning column types.
2025-03-13 15:57:10,872:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-13 15:57:10,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 15:57:10,898:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:57:10,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:10,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:10,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 15:57:10,940:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:57:10,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:10,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:10,957:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-13 15:57:10,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:57:11,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 15:57:11,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,047:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-13 15:57:11,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,125:INFO:Preparing preprocessing pipeline...
2025-03-13 15:57:11,127:INFO:Set up label encoding.
2025-03-13 15:57:11,127:INFO:Set up simple imputation.
2025-03-13 15:57:11,128:INFO:Set up feature normalization.
2025-03-13 15:57:11,159:INFO:Finished creating preprocessing pipeline.
2025-03-13 15:57:11,162:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'Z_LOC', 'NPHI',
                                             'DTC', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-13 15:57:11,162:INFO:Creating final display dataframe.
2025-03-13 15:57:11,248:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                          (51625, 8)  
5                                          (51625, 8)  
6                                          (36137, 8)  
7                                          (15488, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               da32  
2025-03-13 15:57:11,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 15:57:11,352:INFO:setup() successfully completed in 0.52s...............
2025-03-13 15:57:11,352:INFO:Initializing compare_models()
2025-03-13 15:57:11,352:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-13 15:57:11,352:INFO:Checking exceptions
2025-03-13 15:57:11,359:INFO:Preparing display monitor
2025-03-13 15:57:11,379:INFO:Initializing Logistic Regression
2025-03-13 15:57:11,379:INFO:Total runtime is 0.0 minutes
2025-03-13 15:57:11,383:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:11,383:INFO:Initializing create_model()
2025-03-13 15:57:11,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:11,383:INFO:Checking exceptions
2025-03-13 15:57:11,383:INFO:Importing libraries
2025-03-13 15:57:11,383:INFO:Copying training dataset
2025-03-13 15:57:11,394:INFO:Defining folds
2025-03-13 15:57:11,394:INFO:Declaring metric variables
2025-03-13 15:57:11,398:INFO:Importing untrained model
2025-03-13 15:57:11,402:INFO:Logistic Regression Imported successfully
2025-03-13 15:57:11,409:INFO:Starting cross validation
2025-03-13 15:57:11,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:18,225:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,238:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,243:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,245:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,251:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,258:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,325:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,330:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,341:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,362:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,497:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,502:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,526:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,583:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:18,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:18,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:18,881:INFO:Calculating mean and std
2025-03-13 15:57:18,883:INFO:Creating metrics dataframe
2025-03-13 15:57:18,883:INFO:Uploading results into container
2025-03-13 15:57:18,885:INFO:Uploading model into container now
2025-03-13 15:57:18,885:INFO:_master_model_container: 1
2025-03-13 15:57:18,885:INFO:_display_container: 2
2025-03-13 15:57:18,885:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-13 15:57:18,885:INFO:create_model() successfully completed......................................
2025-03-13 15:57:18,953:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:18,953:INFO:Creating metrics dataframe
2025-03-13 15:57:18,960:INFO:Initializing K Neighbors Classifier
2025-03-13 15:57:18,960:INFO:Total runtime is 0.12634938557942707 minutes
2025-03-13 15:57:18,963:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:18,963:INFO:Initializing create_model()
2025-03-13 15:57:18,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:18,963:INFO:Checking exceptions
2025-03-13 15:57:18,963:INFO:Importing libraries
2025-03-13 15:57:18,963:INFO:Copying training dataset
2025-03-13 15:57:18,972:INFO:Defining folds
2025-03-13 15:57:18,972:INFO:Declaring metric variables
2025-03-13 15:57:18,974:INFO:Importing untrained model
2025-03-13 15:57:18,979:INFO:K Neighbors Classifier Imported successfully
2025-03-13 15:57:18,985:INFO:Starting cross validation
2025-03-13 15:57:18,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:19,412:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:19,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,733:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,789:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,818:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,833:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:21,856:INFO:Calculating mean and std
2025-03-13 15:57:21,857:INFO:Creating metrics dataframe
2025-03-13 15:57:21,859:INFO:Uploading results into container
2025-03-13 15:57:21,860:INFO:Uploading model into container now
2025-03-13 15:57:21,860:INFO:_master_model_container: 2
2025-03-13 15:57:21,860:INFO:_display_container: 2
2025-03-13 15:57:21,861:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-13 15:57:21,861:INFO:create_model() successfully completed......................................
2025-03-13 15:57:21,932:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:21,932:INFO:Creating metrics dataframe
2025-03-13 15:57:21,939:INFO:Initializing Naive Bayes
2025-03-13 15:57:21,939:INFO:Total runtime is 0.1759904424349467 minutes
2025-03-13 15:57:21,943:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:21,943:INFO:Initializing create_model()
2025-03-13 15:57:21,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:21,944:INFO:Checking exceptions
2025-03-13 15:57:21,944:INFO:Importing libraries
2025-03-13 15:57:21,944:INFO:Copying training dataset
2025-03-13 15:57:21,952:INFO:Defining folds
2025-03-13 15:57:21,952:INFO:Declaring metric variables
2025-03-13 15:57:21,955:INFO:Importing untrained model
2025-03-13 15:57:21,959:INFO:Naive Bayes Imported successfully
2025-03-13 15:57:21,965:INFO:Starting cross validation
2025-03-13 15:57:21,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:22,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,110:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,121:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,127:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:22,132:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,152:INFO:Calculating mean and std
2025-03-13 15:57:22,152:INFO:Creating metrics dataframe
2025-03-13 15:57:22,154:INFO:Uploading results into container
2025-03-13 15:57:22,154:INFO:Uploading model into container now
2025-03-13 15:57:22,155:INFO:_master_model_container: 3
2025-03-13 15:57:22,155:INFO:_display_container: 2
2025-03-13 15:57:22,155:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-13 15:57:22,155:INFO:create_model() successfully completed......................................
2025-03-13 15:57:22,223:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:22,223:INFO:Creating metrics dataframe
2025-03-13 15:57:22,227:INFO:Initializing Decision Tree Classifier
2025-03-13 15:57:22,227:INFO:Total runtime is 0.18079171180725095 minutes
2025-03-13 15:57:22,230:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:22,230:INFO:Initializing create_model()
2025-03-13 15:57:22,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:22,230:INFO:Checking exceptions
2025-03-13 15:57:22,230:INFO:Importing libraries
2025-03-13 15:57:22,230:INFO:Copying training dataset
2025-03-13 15:57:22,238:INFO:Defining folds
2025-03-13 15:57:22,239:INFO:Declaring metric variables
2025-03-13 15:57:22,242:INFO:Importing untrained model
2025-03-13 15:57:22,244:INFO:Decision Tree Classifier Imported successfully
2025-03-13 15:57:22,252:INFO:Starting cross validation
2025-03-13 15:57:22,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:22,845:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,851:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,891:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,896:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,899:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,902:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,920:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:22,943:INFO:Calculating mean and std
2025-03-13 15:57:22,943:INFO:Creating metrics dataframe
2025-03-13 15:57:22,945:INFO:Uploading results into container
2025-03-13 15:57:22,945:INFO:Uploading model into container now
2025-03-13 15:57:22,946:INFO:_master_model_container: 4
2025-03-13 15:57:22,946:INFO:_display_container: 2
2025-03-13 15:57:22,946:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-13 15:57:22,946:INFO:create_model() successfully completed......................................
2025-03-13 15:57:23,015:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:23,015:INFO:Creating metrics dataframe
2025-03-13 15:57:23,020:INFO:Initializing SVM - Linear Kernel
2025-03-13 15:57:23,021:INFO:Total runtime is 0.19402757883071897 minutes
2025-03-13 15:57:23,024:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:23,024:INFO:Initializing create_model()
2025-03-13 15:57:23,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:23,024:INFO:Checking exceptions
2025-03-13 15:57:23,024:INFO:Importing libraries
2025-03-13 15:57:23,024:INFO:Copying training dataset
2025-03-13 15:57:23,033:INFO:Defining folds
2025-03-13 15:57:23,033:INFO:Declaring metric variables
2025-03-13 15:57:23,036:INFO:Importing untrained model
2025-03-13 15:57:23,038:INFO:SVM - Linear Kernel Imported successfully
2025-03-13 15:57:23,044:INFO:Starting cross validation
2025-03-13 15:57:23,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:23,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,422:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,428:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,594:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,675:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,680:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,681:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,683:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,687:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,688:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,689:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,689:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,691:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,694:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,694:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,696:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,698:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,701:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,702:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,704:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,709:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,718:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,724:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,727:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,749:INFO:Calculating mean and std
2025-03-13 15:57:23,750:INFO:Creating metrics dataframe
2025-03-13 15:57:23,751:INFO:Uploading results into container
2025-03-13 15:57:23,752:INFO:Uploading model into container now
2025-03-13 15:57:23,752:INFO:_master_model_container: 5
2025-03-13 15:57:23,752:INFO:_display_container: 2
2025-03-13 15:57:23,752:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-13 15:57:23,753:INFO:create_model() successfully completed......................................
2025-03-13 15:57:23,820:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:23,820:INFO:Creating metrics dataframe
2025-03-13 15:57:23,825:INFO:Initializing Ridge Classifier
2025-03-13 15:57:23,825:INFO:Total runtime is 0.2074276844660441 minutes
2025-03-13 15:57:23,827:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:23,828:INFO:Initializing create_model()
2025-03-13 15:57:23,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:23,828:INFO:Checking exceptions
2025-03-13 15:57:23,828:INFO:Importing libraries
2025-03-13 15:57:23,828:INFO:Copying training dataset
2025-03-13 15:57:23,836:INFO:Defining folds
2025-03-13 15:57:23,836:INFO:Declaring metric variables
2025-03-13 15:57:23,839:INFO:Importing untrained model
2025-03-13 15:57:23,842:INFO:Ridge Classifier Imported successfully
2025-03-13 15:57:23,848:INFO:Starting cross validation
2025-03-13 15:57:23,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:23,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,945:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,945:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,960:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,965:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,976:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,986:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:23,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,988:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,989:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,989:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,992:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,992:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,994:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:23,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:23,999:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:24,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:24,004:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:24,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:24,008:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:24,029:INFO:Calculating mean and std
2025-03-13 15:57:24,030:INFO:Creating metrics dataframe
2025-03-13 15:57:24,031:INFO:Uploading results into container
2025-03-13 15:57:24,031:INFO:Uploading model into container now
2025-03-13 15:57:24,032:INFO:_master_model_container: 6
2025-03-13 15:57:24,032:INFO:_display_container: 2
2025-03-13 15:57:24,032:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-13 15:57:24,032:INFO:create_model() successfully completed......................................
2025-03-13 15:57:24,098:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:24,098:INFO:Creating metrics dataframe
2025-03-13 15:57:24,103:INFO:Initializing Random Forest Classifier
2025-03-13 15:57:24,103:INFO:Total runtime is 0.2120639085769653 minutes
2025-03-13 15:57:24,107:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:24,109:INFO:Initializing create_model()
2025-03-13 15:57:24,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:24,109:INFO:Checking exceptions
2025-03-13 15:57:24,109:INFO:Importing libraries
2025-03-13 15:57:24,109:INFO:Copying training dataset
2025-03-13 15:57:24,118:INFO:Defining folds
2025-03-13 15:57:24,118:INFO:Declaring metric variables
2025-03-13 15:57:24,121:INFO:Importing untrained model
2025-03-13 15:57:24,123:INFO:Random Forest Classifier Imported successfully
2025-03-13 15:57:24,130:INFO:Starting cross validation
2025-03-13 15:57:24,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:32,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,894:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,917:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,924:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,955:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,976:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,983:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,989:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:32,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,062:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,082:INFO:Calculating mean and std
2025-03-13 15:57:33,083:INFO:Creating metrics dataframe
2025-03-13 15:57:33,085:INFO:Uploading results into container
2025-03-13 15:57:33,085:INFO:Uploading model into container now
2025-03-13 15:57:33,086:INFO:_master_model_container: 7
2025-03-13 15:57:33,086:INFO:_display_container: 2
2025-03-13 15:57:33,087:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-13 15:57:33,087:INFO:create_model() successfully completed......................................
2025-03-13 15:57:33,159:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:33,159:INFO:Creating metrics dataframe
2025-03-13 15:57:33,165:INFO:Initializing Quadratic Discriminant Analysis
2025-03-13 15:57:33,165:INFO:Total runtime is 0.3630933364232381 minutes
2025-03-13 15:57:33,167:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:33,168:INFO:Initializing create_model()
2025-03-13 15:57:33,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:33,168:INFO:Checking exceptions
2025-03-13 15:57:33,168:INFO:Importing libraries
2025-03-13 15:57:33,168:INFO:Copying training dataset
2025-03-13 15:57:33,178:INFO:Defining folds
2025-03-13 15:57:33,178:INFO:Declaring metric variables
2025-03-13 15:57:33,181:INFO:Importing untrained model
2025-03-13 15:57:33,183:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-13 15:57:33,189:INFO:Starting cross validation
2025-03-13 15:57:33,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:33,269:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,290:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,329:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 15:57:33,339:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,343:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,345:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:33,353:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,353:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:33,376:INFO:Calculating mean and std
2025-03-13 15:57:33,376:INFO:Creating metrics dataframe
2025-03-13 15:57:33,379:INFO:Uploading results into container
2025-03-13 15:57:33,379:INFO:Uploading model into container now
2025-03-13 15:57:33,380:INFO:_master_model_container: 8
2025-03-13 15:57:33,380:INFO:_display_container: 2
2025-03-13 15:57:33,380:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-13 15:57:33,380:INFO:create_model() successfully completed......................................
2025-03-13 15:57:33,447:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:33,447:INFO:Creating metrics dataframe
2025-03-13 15:57:33,454:INFO:Initializing Ada Boost Classifier
2025-03-13 15:57:33,454:INFO:Total runtime is 0.3679043571154276 minutes
2025-03-13 15:57:33,457:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:33,457:INFO:Initializing create_model()
2025-03-13 15:57:33,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:33,458:INFO:Checking exceptions
2025-03-13 15:57:33,458:INFO:Importing libraries
2025-03-13 15:57:33,458:INFO:Copying training dataset
2025-03-13 15:57:33,466:INFO:Defining folds
2025-03-13 15:57:33,466:INFO:Declaring metric variables
2025-03-13 15:57:33,468:INFO:Importing untrained model
2025-03-13 15:57:33,471:INFO:Ada Boost Classifier Imported successfully
2025-03-13 15:57:33,482:INFO:Starting cross validation
2025-03-13 15:57:33,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 15:57:33,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,605:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:33,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 15:57:37,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,404:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,420:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,430:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,437:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,446:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 15:57:37,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 15:57:37,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 15:57:37,478:INFO:Calculating mean and std
2025-03-13 15:57:37,479:INFO:Creating metrics dataframe
2025-03-13 15:57:37,481:INFO:Uploading results into container
2025-03-13 15:57:37,481:INFO:Uploading model into container now
2025-03-13 15:57:37,482:INFO:_master_model_container: 9
2025-03-13 15:57:37,482:INFO:_display_container: 2
2025-03-13 15:57:37,482:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-13 15:57:37,482:INFO:create_model() successfully completed......................................
2025-03-13 15:57:37,554:INFO:SubProcess create_model() end ==================================
2025-03-13 15:57:37,554:INFO:Creating metrics dataframe
2025-03-13 15:57:37,560:INFO:Initializing Gradient Boosting Classifier
2025-03-13 15:57:37,560:INFO:Total runtime is 0.43635032176971433 minutes
2025-03-13 15:57:37,563:INFO:SubProcess create_model() called ==================================
2025-03-13 15:57:37,563:INFO:Initializing create_model()
2025-03-13 15:57:37,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 15:57:37,563:INFO:Checking exceptions
2025-03-13 15:57:37,563:INFO:Importing libraries
2025-03-13 15:57:37,563:INFO:Copying training dataset
2025-03-13 15:57:37,573:INFO:Defining folds
2025-03-13 15:57:37,573:INFO:Declaring metric variables
2025-03-13 15:57:37,576:INFO:Importing untrained model
2025-03-13 15:57:37,580:INFO:Gradient Boosting Classifier Imported successfully
2025-03-13 15:57:37,587:INFO:Starting cross validation
2025-03-13 15:57:37,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 16:00:01,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,401:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,412:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,663:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,666:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,671:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,678:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,684:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,708:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,710:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,713:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,904:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:01,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,911:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:01,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,501:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,541:INFO:Calculating mean and std
2025-03-13 16:00:02,542:INFO:Creating metrics dataframe
2025-03-13 16:00:02,543:INFO:Uploading results into container
2025-03-13 16:00:02,543:INFO:Uploading model into container now
2025-03-13 16:00:02,543:INFO:_master_model_container: 10
2025-03-13 16:00:02,543:INFO:_display_container: 2
2025-03-13 16:00:02,544:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-13 16:00:02,544:INFO:create_model() successfully completed......................................
2025-03-13 16:00:02,616:INFO:SubProcess create_model() end ==================================
2025-03-13 16:00:02,616:INFO:Creating metrics dataframe
2025-03-13 16:00:02,623:INFO:Initializing Linear Discriminant Analysis
2025-03-13 16:00:02,623:INFO:Total runtime is 2.8540540218353274 minutes
2025-03-13 16:00:02,626:INFO:SubProcess create_model() called ==================================
2025-03-13 16:00:02,626:INFO:Initializing create_model()
2025-03-13 16:00:02,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 16:00:02,626:INFO:Checking exceptions
2025-03-13 16:00:02,626:INFO:Importing libraries
2025-03-13 16:00:02,626:INFO:Copying training dataset
2025-03-13 16:00:02,634:INFO:Defining folds
2025-03-13 16:00:02,634:INFO:Declaring metric variables
2025-03-13 16:00:02,638:INFO:Importing untrained model
2025-03-13 16:00:02,640:INFO:Linear Discriminant Analysis Imported successfully
2025-03-13 16:00:02,646:INFO:Starting cross validation
2025-03-13 16:00:02,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 16:00:02,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,783:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:02,785:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,791:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:02,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,809:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,817:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 16:00:02,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:02,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:02,852:INFO:Calculating mean and std
2025-03-13 16:00:02,853:INFO:Creating metrics dataframe
2025-03-13 16:00:02,854:INFO:Uploading results into container
2025-03-13 16:00:02,856:INFO:Uploading model into container now
2025-03-13 16:00:02,856:INFO:_master_model_container: 11
2025-03-13 16:00:02,856:INFO:_display_container: 2
2025-03-13 16:00:02,857:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-13 16:00:02,857:INFO:create_model() successfully completed......................................
2025-03-13 16:00:02,927:INFO:SubProcess create_model() end ==================================
2025-03-13 16:00:02,927:INFO:Creating metrics dataframe
2025-03-13 16:00:02,934:INFO:Initializing Extra Trees Classifier
2025-03-13 16:00:02,934:INFO:Total runtime is 2.859240750471751 minutes
2025-03-13 16:00:02,937:INFO:SubProcess create_model() called ==================================
2025-03-13 16:00:02,937:INFO:Initializing create_model()
2025-03-13 16:00:02,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 16:00:02,937:INFO:Checking exceptions
2025-03-13 16:00:02,937:INFO:Importing libraries
2025-03-13 16:00:02,937:INFO:Copying training dataset
2025-03-13 16:00:02,947:INFO:Defining folds
2025-03-13 16:00:02,948:INFO:Declaring metric variables
2025-03-13 16:00:02,951:INFO:Importing untrained model
2025-03-13 16:00:02,954:INFO:Extra Trees Classifier Imported successfully
2025-03-13 16:00:02,961:INFO:Starting cross validation
2025-03-13 16:00:02,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 16:00:05,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,904:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,959:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,971:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,972:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,976:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:05,985:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:06,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:06,028:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:06,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:06,048:INFO:Calculating mean and std
2025-03-13 16:00:06,048:INFO:Creating metrics dataframe
2025-03-13 16:00:06,052:INFO:Uploading results into container
2025-03-13 16:00:06,053:INFO:Uploading model into container now
2025-03-13 16:00:06,054:INFO:_master_model_container: 12
2025-03-13 16:00:06,054:INFO:_display_container: 2
2025-03-13 16:00:06,054:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 16:00:06,054:INFO:create_model() successfully completed......................................
2025-03-13 16:00:06,134:INFO:SubProcess create_model() end ==================================
2025-03-13 16:00:06,134:INFO:Creating metrics dataframe
2025-03-13 16:00:06,141:INFO:Initializing Light Gradient Boosting Machine
2025-03-13 16:00:06,141:INFO:Total runtime is 2.912686928113302 minutes
2025-03-13 16:00:06,146:INFO:SubProcess create_model() called ==================================
2025-03-13 16:00:06,146:INFO:Initializing create_model()
2025-03-13 16:00:06,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 16:00:06,146:INFO:Checking exceptions
2025-03-13 16:00:06,146:INFO:Importing libraries
2025-03-13 16:00:06,146:INFO:Copying training dataset
2025-03-13 16:00:06,157:INFO:Defining folds
2025-03-13 16:00:06,157:INFO:Declaring metric variables
2025-03-13 16:00:06,161:INFO:Importing untrained model
2025-03-13 16:00:06,164:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-13 16:00:06,174:INFO:Starting cross validation
2025-03-13 16:00:06,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 16:00:19,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:19,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,137:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,195:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,318:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:20,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,427:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,583:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,670:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,679:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,705:INFO:Calculating mean and std
2025-03-13 16:00:21,705:INFO:Creating metrics dataframe
2025-03-13 16:00:21,707:INFO:Uploading results into container
2025-03-13 16:00:21,708:INFO:Uploading model into container now
2025-03-13 16:00:21,710:INFO:_master_model_container: 13
2025-03-13 16:00:21,710:INFO:_display_container: 2
2025-03-13 16:00:21,711:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-13 16:00:21,711:INFO:create_model() successfully completed......................................
2025-03-13 16:00:21,802:INFO:SubProcess create_model() end ==================================
2025-03-13 16:00:21,802:INFO:Creating metrics dataframe
2025-03-13 16:00:21,810:INFO:Initializing Dummy Classifier
2025-03-13 16:00:21,810:INFO:Total runtime is 3.173838857809703 minutes
2025-03-13 16:00:21,814:INFO:SubProcess create_model() called ==================================
2025-03-13 16:00:21,814:INFO:Initializing create_model()
2025-03-13 16:00:21,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F38E7EF8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 16:00:21,814:INFO:Checking exceptions
2025-03-13 16:00:21,814:INFO:Importing libraries
2025-03-13 16:00:21,814:INFO:Copying training dataset
2025-03-13 16:00:21,826:INFO:Defining folds
2025-03-13 16:00:21,826:INFO:Declaring metric variables
2025-03-13 16:00:21,830:INFO:Importing untrained model
2025-03-13 16:00:21,835:INFO:Dummy Classifier Imported successfully
2025-03-13 16:00:21,843:INFO:Starting cross validation
2025-03-13 16:00:21,844:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 16:00:21,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,960:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,965:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,972:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,972:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,990:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,991:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,992:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,993:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:21,994:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:21,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,012:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:22,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,018:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,018:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:22,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 16:00:22,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 16:00:22,044:INFO:Calculating mean and std
2025-03-13 16:00:22,045:INFO:Creating metrics dataframe
2025-03-13 16:00:22,047:INFO:Uploading results into container
2025-03-13 16:00:22,047:INFO:Uploading model into container now
2025-03-13 16:00:22,048:INFO:_master_model_container: 14
2025-03-13 16:00:22,048:INFO:_display_container: 2
2025-03-13 16:00:22,048:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-13 16:00:22,048:INFO:create_model() successfully completed......................................
2025-03-13 16:00:22,140:INFO:SubProcess create_model() end ==================================
2025-03-13 16:00:22,140:INFO:Creating metrics dataframe
2025-03-13 16:00:22,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-13 16:00:22,156:INFO:Initializing create_model()
2025-03-13 16:00:22,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 16:00:22,157:INFO:Checking exceptions
2025-03-13 16:00:22,158:INFO:Importing libraries
2025-03-13 16:00:22,158:INFO:Copying training dataset
2025-03-13 16:00:22,169:INFO:Defining folds
2025-03-13 16:00:22,169:INFO:Declaring metric variables
2025-03-13 16:00:22,169:INFO:Importing untrained model
2025-03-13 16:00:22,169:INFO:Declaring custom model
2025-03-13 16:00:22,169:INFO:Extra Trees Classifier Imported successfully
2025-03-13 16:00:22,169:INFO:Cross validation set to False
2025-03-13 16:00:22,169:INFO:Fitting Model
2025-03-13 16:00:22,631:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 16:00:22,631:INFO:create_model() successfully completed......................................
2025-03-13 16:00:22,726:INFO:_master_model_container: 14
2025-03-13 16:00:22,726:INFO:_display_container: 2
2025-03-13 16:00:22,726:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 16:00:22,727:INFO:compare_models() successfully completed......................................
2025-03-13 16:00:22,727:INFO:Initializing evaluate_model()
2025-03-13 16:00:22,727:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-13 16:00:22,743:INFO:Initializing plot_model()
2025-03-13 16:00:22,744:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, system=True)
2025-03-13 16:00:22,744:INFO:Checking exceptions
2025-03-13 16:00:22,775:INFO:Preloading libraries
2025-03-13 16:00:22,951:INFO:Copying training dataset
2025-03-13 16:00:22,952:INFO:Plot type: pipeline
2025-03-13 16:00:23,093:INFO:Visual Rendered Successfully
2025-03-13 16:00:23,169:INFO:plot_model() successfully completed......................................
2025-03-13 16:00:42,416:INFO:Initializing plot_model()
2025-03-13 16:00:42,416:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, system=True)
2025-03-13 16:00:42,416:INFO:Checking exceptions
2025-03-13 16:00:42,443:INFO:Preloading libraries
2025-03-13 16:00:42,587:INFO:Copying training dataset
2025-03-13 16:00:42,587:INFO:Plot type: feature
2025-03-13 16:00:42,587:WARNING:No coef_ found. Trying feature_importances_
2025-03-13 16:00:42,717:INFO:Visual Rendered Successfully
2025-03-13 16:00:42,786:INFO:plot_model() successfully completed......................................
2025-03-13 16:00:51,112:INFO:Initializing plot_model()
2025-03-13 16:00:51,112:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F38E7EF8B0>, system=True)
2025-03-13 16:00:51,112:INFO:Checking exceptions
2025-03-13 16:00:51,140:INFO:Preloading libraries
2025-03-13 16:00:51,278:INFO:Copying training dataset
2025-03-13 16:00:51,278:INFO:Plot type: auc
2025-03-13 16:00:51,373:INFO:Fitting Model
2025-03-13 16:00:51,374:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 16:00:51,376:INFO:Scoring test/hold-out set
2025-03-13 16:00:51,711:INFO:Visual Rendered Successfully
2025-03-13 16:00:51,798:INFO:plot_model() successfully completed......................................
2025-03-13 19:22:23,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 19:22:23,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 19:22:23,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 19:22:23,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 19:22:24,051:INFO:PyCaret ClassificationExperiment
2025-03-13 19:22:24,051:INFO:Logging name: clf-default-name
2025-03-13 19:22:24,051:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-13 19:22:24,051:INFO:version 3.3.2
2025-03-13 19:22:24,051:INFO:Initializing setup()
2025-03-13 19:22:24,051:INFO:self.USI: 13a0
2025-03-13 19:22:24,051:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'X', 'y_train', 'target_param', 'y', 'logging_param', 'is_multiclass', 'pipeline', '_available_plots', 'X_train', 'n_jobs_param', 'html_param', 'y_test', 'memory', 'exp_name_log', 'seed', 'fold_groups_param', '_ml_usecase', 'fix_imbalance', 'USI', 'log_plots_param', 'idx', 'data', 'fold_generator', 'X_test', 'gpu_n_jobs_param', 'fold_shuffle_param'}
2025-03-13 19:22:24,051:INFO:Checking environment
2025-03-13 19:22:24,051:INFO:python_version: 3.9.21
2025-03-13 19:22:24,051:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-13 19:22:24,051:INFO:machine: AMD64
2025-03-13 19:22:24,051:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-13 19:22:24,051:INFO:Memory: svmem(total=25372119040, available=7185289216, percent=71.7, used=18186829824, free=7185289216)
2025-03-13 19:22:24,051:INFO:Physical Core: 10
2025-03-13 19:22:24,051:INFO:Logical Core: 16
2025-03-13 19:22:24,051:INFO:Checking libraries
2025-03-13 19:22:24,051:INFO:System:
2025-03-13 19:22:24,051:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-13 19:22:24,051:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-13 19:22:24,051:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-13 19:22:24,051:INFO:PyCaret required dependencies:
2025-03-13 19:22:24,114:INFO:                 pip: 24.2
2025-03-13 19:22:24,114:INFO:          setuptools: 75.1.0
2025-03-13 19:22:24,114:INFO:             pycaret: 3.3.2
2025-03-13 19:22:24,114:INFO:             IPython: 8.12.0
2025-03-13 19:22:24,114:INFO:          ipywidgets: 8.1.5
2025-03-13 19:22:24,114:INFO:                tqdm: 4.67.1
2025-03-13 19:22:24,114:INFO:               numpy: 1.24.3
2025-03-13 19:22:24,114:INFO:              pandas: 2.1.4
2025-03-13 19:22:24,114:INFO:              jinja2: 3.1.5
2025-03-13 19:22:24,114:INFO:               scipy: 1.11.4
2025-03-13 19:22:24,114:INFO:              joblib: 1.3.2
2025-03-13 19:22:24,114:INFO:             sklearn: 1.4.2
2025-03-13 19:22:24,114:INFO:                pyod: 2.0.3
2025-03-13 19:22:24,114:INFO:            imblearn: 0.12.4
2025-03-13 19:22:24,114:INFO:   category_encoders: 2.6.4
2025-03-13 19:22:24,114:INFO:            lightgbm: 4.6.0
2025-03-13 19:22:24,114:INFO:               numba: 0.60.0
2025-03-13 19:22:24,114:INFO:            requests: 2.32.3
2025-03-13 19:22:24,114:INFO:          matplotlib: 3.7.5
2025-03-13 19:22:24,114:INFO:          scikitplot: 0.3.7
2025-03-13 19:22:24,114:INFO:         yellowbrick: 1.5
2025-03-13 19:22:24,114:INFO:              plotly: 5.24.1
2025-03-13 19:22:24,114:INFO:    plotly-resampler: Not installed
2025-03-13 19:22:24,114:INFO:             kaleido: 0.2.1
2025-03-13 19:22:24,114:INFO:           schemdraw: 0.15
2025-03-13 19:22:24,114:INFO:         statsmodels: 0.14.4
2025-03-13 19:22:24,114:INFO:              sktime: 0.26.0
2025-03-13 19:22:24,114:INFO:               tbats: 1.1.3
2025-03-13 19:22:24,114:INFO:            pmdarima: 2.0.4
2025-03-13 19:22:24,114:INFO:              psutil: 5.9.0
2025-03-13 19:22:24,114:INFO:          markupsafe: 3.0.2
2025-03-13 19:22:24,114:INFO:             pickle5: Not installed
2025-03-13 19:22:24,114:INFO:         cloudpickle: 2.2.1
2025-03-13 19:22:24,114:INFO:         deprecation: 2.1.0
2025-03-13 19:22:24,114:INFO:              xxhash: 3.5.0
2025-03-13 19:22:24,114:INFO:           wurlitzer: Not installed
2025-03-13 19:22:24,114:INFO:PyCaret optional dependencies:
2025-03-13 19:22:24,204:INFO:                shap: Not installed
2025-03-13 19:22:24,204:INFO:           interpret: Not installed
2025-03-13 19:22:24,204:INFO:                umap: Not installed
2025-03-13 19:22:24,204:INFO:     ydata_profiling: Not installed
2025-03-13 19:22:24,204:INFO:  explainerdashboard: Not installed
2025-03-13 19:22:24,204:INFO:             autoviz: Not installed
2025-03-13 19:22:24,204:INFO:           fairlearn: Not installed
2025-03-13 19:22:24,204:INFO:          deepchecks: Not installed
2025-03-13 19:22:24,204:INFO:             xgboost: Not installed
2025-03-13 19:22:24,204:INFO:            catboost: Not installed
2025-03-13 19:22:24,204:INFO:              kmodes: Not installed
2025-03-13 19:22:24,204:INFO:             mlxtend: Not installed
2025-03-13 19:22:24,204:INFO:       statsforecast: Not installed
2025-03-13 19:22:24,204:INFO:        tune_sklearn: Not installed
2025-03-13 19:22:24,204:INFO:                 ray: Not installed
2025-03-13 19:22:24,204:INFO:            hyperopt: Not installed
2025-03-13 19:22:24,204:INFO:              optuna: Not installed
2025-03-13 19:22:24,204:INFO:               skopt: Not installed
2025-03-13 19:22:24,204:INFO:              mlflow: Not installed
2025-03-13 19:22:24,204:INFO:              gradio: Not installed
2025-03-13 19:22:24,204:INFO:             fastapi: Not installed
2025-03-13 19:22:24,204:INFO:             uvicorn: 0.34.0
2025-03-13 19:22:24,204:INFO:              m2cgen: Not installed
2025-03-13 19:22:24,204:INFO:           evidently: Not installed
2025-03-13 19:22:24,204:INFO:               fugue: Not installed
2025-03-13 19:22:24,204:INFO:           streamlit: Not installed
2025-03-13 19:22:24,204:INFO:             prophet: 1.1.6
2025-03-13 19:22:24,204:INFO:None
2025-03-13 19:22:24,204:INFO:Set up data.
2025-03-13 19:22:24,231:INFO:Set up folding strategy.
2025-03-13 19:22:24,231:INFO:Set up train/test split.
2025-03-13 19:22:24,275:INFO:Set up index.
2025-03-13 19:22:24,278:INFO:Assigning column types.
2025-03-13 19:22:24,301:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-13 19:22:24,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,404:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-13 19:22:24,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 19:22:24,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,495:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-13 19:22:24,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,583:INFO:Preparing preprocessing pipeline...
2025-03-13 19:22:24,587:INFO:Set up label encoding.
2025-03-13 19:22:24,587:INFO:Set up simple imputation.
2025-03-13 19:22:24,587:INFO:Set up feature normalization.
2025-03-13 19:22:24,654:INFO:Finished creating preprocessing pipeline.
2025-03-13 19:22:24,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'SP', 'RHOB', 'GR',
                                             'CALI'],
                                    transformer=SimpleImputer(add_indicator=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-13 19:22:24,658:INFO:Creating final display dataframe.
2025-03-13 19:22:24,849:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9      Rows with missing values   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                        (124347, 10)  
5                                        (124347, 10)  
6                                         (87042, 10)  
7                                         (37305, 10)  
8                                                   9  
9                                                0.1%  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               13a0  
2025-03-13 19:22:24,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 19:22:24,953:INFO:setup() successfully completed in 0.91s...............
2025-03-13 19:22:24,953:INFO:Initializing compare_models()
2025-03-13 19:22:24,953:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-13 19:22:24,953:INFO:Checking exceptions
2025-03-13 19:22:24,972:INFO:Preparing display monitor
2025-03-13 19:22:24,994:INFO:Initializing Logistic Regression
2025-03-13 19:22:24,995:INFO:Total runtime is 1.6776720682779946e-05 minutes
2025-03-13 19:22:24,999:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:24,999:INFO:Initializing create_model()
2025-03-13 19:22:24,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:24,999:INFO:Checking exceptions
2025-03-13 19:22:24,999:INFO:Importing libraries
2025-03-13 19:22:24,999:INFO:Copying training dataset
2025-03-13 19:22:25,035:INFO:Defining folds
2025-03-13 19:22:25,035:INFO:Declaring metric variables
2025-03-13 19:22:25,045:INFO:Importing untrained model
2025-03-13 19:22:25,050:INFO:Logistic Regression Imported successfully
2025-03-13 19:22:25,060:INFO:Starting cross validation
2025-03-13 19:22:25,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:36,531:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:36,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:36,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:36,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:36,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:37,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:37,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:37,965:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:37,971:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:37,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,344:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,501:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,528:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,595:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,684:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,696:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,702:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:38,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,899:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:38,901:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:38,904:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:39,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:39,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:39,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:39,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:39,165:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:39,192:INFO:Calculating mean and std
2025-03-13 19:22:39,193:INFO:Creating metrics dataframe
2025-03-13 19:22:39,195:INFO:Uploading results into container
2025-03-13 19:22:39,196:INFO:Uploading model into container now
2025-03-13 19:22:39,196:INFO:_master_model_container: 1
2025-03-13 19:22:39,196:INFO:_display_container: 2
2025-03-13 19:22:39,197:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-13 19:22:39,197:INFO:create_model() successfully completed......................................
2025-03-13 19:22:39,277:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:39,277:INFO:Creating metrics dataframe
2025-03-13 19:22:39,285:INFO:Initializing K Neighbors Classifier
2025-03-13 19:22:39,285:INFO:Total runtime is 0.2381868044535319 minutes
2025-03-13 19:22:39,290:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:39,290:INFO:Initializing create_model()
2025-03-13 19:22:39,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:39,291:INFO:Checking exceptions
2025-03-13 19:22:39,291:INFO:Importing libraries
2025-03-13 19:22:39,291:INFO:Copying training dataset
2025-03-13 19:22:39,330:INFO:Defining folds
2025-03-13 19:22:39,330:INFO:Declaring metric variables
2025-03-13 19:22:39,334:INFO:Importing untrained model
2025-03-13 19:22:39,337:INFO:K Neighbors Classifier Imported successfully
2025-03-13 19:22:39,344:INFO:Starting cross validation
2025-03-13 19:22:39,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:40,657:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,733:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:40,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,910:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,920:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,989:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,990:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:43,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,266:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,283:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,311:INFO:Calculating mean and std
2025-03-13 19:22:44,312:INFO:Creating metrics dataframe
2025-03-13 19:22:44,315:INFO:Uploading results into container
2025-03-13 19:22:44,316:INFO:Uploading model into container now
2025-03-13 19:22:44,316:INFO:_master_model_container: 2
2025-03-13 19:22:44,317:INFO:_display_container: 2
2025-03-13 19:22:44,317:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-13 19:22:44,317:INFO:create_model() successfully completed......................................
2025-03-13 19:22:44,392:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:44,392:INFO:Creating metrics dataframe
2025-03-13 19:22:44,397:INFO:Initializing Naive Bayes
2025-03-13 19:22:44,397:INFO:Total runtime is 0.3233860452969869 minutes
2025-03-13 19:22:44,402:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:44,402:INFO:Initializing create_model()
2025-03-13 19:22:44,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:44,403:INFO:Checking exceptions
2025-03-13 19:22:44,403:INFO:Importing libraries
2025-03-13 19:22:44,403:INFO:Copying training dataset
2025-03-13 19:22:44,442:INFO:Defining folds
2025-03-13 19:22:44,443:INFO:Declaring metric variables
2025-03-13 19:22:44,447:INFO:Importing untrained model
2025-03-13 19:22:44,452:INFO:Naive Bayes Imported successfully
2025-03-13 19:22:44,459:INFO:Starting cross validation
2025-03-13 19:22:44,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:44,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,705:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,709:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,714:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,731:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,735:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,740:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,754:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,764:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,774:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,881:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,890:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:44,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:44,931:INFO:Calculating mean and std
2025-03-13 19:22:44,932:INFO:Creating metrics dataframe
2025-03-13 19:22:44,934:INFO:Uploading results into container
2025-03-13 19:22:44,934:INFO:Uploading model into container now
2025-03-13 19:22:44,935:INFO:_master_model_container: 3
2025-03-13 19:22:44,935:INFO:_display_container: 2
2025-03-13 19:22:44,935:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-13 19:22:44,935:INFO:create_model() successfully completed......................................
2025-03-13 19:22:45,002:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:45,002:INFO:Creating metrics dataframe
2025-03-13 19:22:45,010:INFO:Initializing Decision Tree Classifier
2025-03-13 19:22:45,010:INFO:Total runtime is 0.33360267480214434 minutes
2025-03-13 19:22:45,014:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:45,014:INFO:Initializing create_model()
2025-03-13 19:22:45,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:45,014:INFO:Checking exceptions
2025-03-13 19:22:45,014:INFO:Importing libraries
2025-03-13 19:22:45,015:INFO:Copying training dataset
2025-03-13 19:22:45,057:INFO:Defining folds
2025-03-13 19:22:45,057:INFO:Declaring metric variables
2025-03-13 19:22:45,064:INFO:Importing untrained model
2025-03-13 19:22:45,069:INFO:Decision Tree Classifier Imported successfully
2025-03-13 19:22:45,077:INFO:Starting cross validation
2025-03-13 19:22:45,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:47,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,551:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,635:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,639:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:47,664:INFO:Calculating mean and std
2025-03-13 19:22:47,665:INFO:Creating metrics dataframe
2025-03-13 19:22:47,666:INFO:Uploading results into container
2025-03-13 19:22:47,667:INFO:Uploading model into container now
2025-03-13 19:22:47,667:INFO:_master_model_container: 4
2025-03-13 19:22:47,667:INFO:_display_container: 2
2025-03-13 19:22:47,668:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-13 19:22:47,669:INFO:create_model() successfully completed......................................
2025-03-13 19:22:47,732:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:47,732:INFO:Creating metrics dataframe
2025-03-13 19:22:47,738:INFO:Initializing SVM - Linear Kernel
2025-03-13 19:22:47,738:INFO:Total runtime is 0.3790778597195943 minutes
2025-03-13 19:22:47,741:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:47,741:INFO:Initializing create_model()
2025-03-13 19:22:47,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:47,743:INFO:Checking exceptions
2025-03-13 19:22:47,743:INFO:Importing libraries
2025-03-13 19:22:47,743:INFO:Copying training dataset
2025-03-13 19:22:47,779:INFO:Defining folds
2025-03-13 19:22:47,779:INFO:Declaring metric variables
2025-03-13 19:22:47,784:INFO:Importing untrained model
2025-03-13 19:22:47,790:INFO:SVM - Linear Kernel Imported successfully
2025-03-13 19:22:47,801:INFO:Starting cross validation
2025-03-13 19:22:47,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:48,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:48,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:48,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:48,703:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:48,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:48,952:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:48,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:48,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,061:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,096:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,164:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,207:INFO:Calculating mean and std
2025-03-13 19:22:49,207:INFO:Creating metrics dataframe
2025-03-13 19:22:49,210:INFO:Uploading results into container
2025-03-13 19:22:49,211:INFO:Uploading model into container now
2025-03-13 19:22:49,211:INFO:_master_model_container: 5
2025-03-13 19:22:49,212:INFO:_display_container: 2
2025-03-13 19:22:49,212:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-13 19:22:49,212:INFO:create_model() successfully completed......................................
2025-03-13 19:22:49,280:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:49,280:INFO:Creating metrics dataframe
2025-03-13 19:22:49,287:INFO:Initializing Ridge Classifier
2025-03-13 19:22:49,288:INFO:Total runtime is 0.40490505695343015 minutes
2025-03-13 19:22:49,297:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:49,297:INFO:Initializing create_model()
2025-03-13 19:22:49,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:49,297:INFO:Checking exceptions
2025-03-13 19:22:49,297:INFO:Importing libraries
2025-03-13 19:22:49,297:INFO:Copying training dataset
2025-03-13 19:22:49,340:INFO:Defining folds
2025-03-13 19:22:49,341:INFO:Declaring metric variables
2025-03-13 19:22:49,345:INFO:Importing untrained model
2025-03-13 19:22:49,351:INFO:Ridge Classifier Imported successfully
2025-03-13 19:22:49,361:INFO:Starting cross validation
2025-03-13 19:22:49,362:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:22:49,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,596:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,604:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,618:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,634:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,644:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,664:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,682:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,687:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,701:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,705:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,714:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,724:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,733:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,742:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,761:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,778:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:22:49,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:22:49,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:22:49,847:INFO:Calculating mean and std
2025-03-13 19:22:49,847:INFO:Creating metrics dataframe
2025-03-13 19:22:49,849:INFO:Uploading results into container
2025-03-13 19:22:49,850:INFO:Uploading model into container now
2025-03-13 19:22:49,850:INFO:_master_model_container: 6
2025-03-13 19:22:49,851:INFO:_display_container: 2
2025-03-13 19:22:49,851:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-13 19:22:49,851:INFO:create_model() successfully completed......................................
2025-03-13 19:22:49,917:INFO:SubProcess create_model() end ==================================
2025-03-13 19:22:49,918:INFO:Creating metrics dataframe
2025-03-13 19:22:49,923:INFO:Initializing Random Forest Classifier
2025-03-13 19:22:49,923:INFO:Total runtime is 0.4154969771703084 minutes
2025-03-13 19:22:49,927:INFO:SubProcess create_model() called ==================================
2025-03-13 19:22:49,927:INFO:Initializing create_model()
2025-03-13 19:22:49,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:22:49,927:INFO:Checking exceptions
2025-03-13 19:22:49,927:INFO:Importing libraries
2025-03-13 19:22:49,927:INFO:Copying training dataset
2025-03-13 19:22:49,960:INFO:Defining folds
2025-03-13 19:22:49,961:INFO:Declaring metric variables
2025-03-13 19:22:49,964:INFO:Importing untrained model
2025-03-13 19:22:49,969:INFO:Random Forest Classifier Imported successfully
2025-03-13 19:22:49,976:INFO:Starting cross validation
2025-03-13 19:22:49,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:24:13,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:13,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:13,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:14,254:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:14,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:14,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:15,891:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:15,955:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,025:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,025:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,052:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,091:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,145:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,183:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,247:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,293:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:16,334:INFO:Calculating mean and std
2025-03-13 19:24:16,336:INFO:Creating metrics dataframe
2025-03-13 19:24:16,344:INFO:Uploading results into container
2025-03-13 19:24:16,344:INFO:Uploading model into container now
2025-03-13 19:24:16,345:INFO:_master_model_container: 7
2025-03-13 19:24:16,345:INFO:_display_container: 2
2025-03-13 19:24:16,345:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-13 19:24:16,346:INFO:create_model() successfully completed......................................
2025-03-13 19:24:16,433:INFO:SubProcess create_model() end ==================================
2025-03-13 19:24:16,433:INFO:Creating metrics dataframe
2025-03-13 19:24:16,446:INFO:Initializing Quadratic Discriminant Analysis
2025-03-13 19:24:16,446:INFO:Total runtime is 1.8575323939323427 minutes
2025-03-13 19:24:16,452:INFO:SubProcess create_model() called ==================================
2025-03-13 19:24:16,453:INFO:Initializing create_model()
2025-03-13 19:24:16,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:24:16,453:INFO:Checking exceptions
2025-03-13 19:24:16,453:INFO:Importing libraries
2025-03-13 19:24:16,453:INFO:Copying training dataset
2025-03-13 19:24:16,615:INFO:Defining folds
2025-03-13 19:24:16,615:INFO:Declaring metric variables
2025-03-13 19:24:16,631:INFO:Importing untrained model
2025-03-13 19:24:16,638:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-13 19:24:16,654:INFO:Starting cross validation
2025-03-13 19:24:16,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:24:16,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,127:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,175:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,199:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,236:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,242:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,264:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,272:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,330:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,361:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,362:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,366:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,371:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 19:24:17,401:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,426:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,430:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:17,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:17,470:INFO:Calculating mean and std
2025-03-13 19:24:17,472:INFO:Creating metrics dataframe
2025-03-13 19:24:17,478:INFO:Uploading results into container
2025-03-13 19:24:17,478:INFO:Uploading model into container now
2025-03-13 19:24:17,478:INFO:_master_model_container: 8
2025-03-13 19:24:17,478:INFO:_display_container: 2
2025-03-13 19:24:17,480:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-13 19:24:17,480:INFO:create_model() successfully completed......................................
2025-03-13 19:24:17,567:INFO:SubProcess create_model() end ==================================
2025-03-13 19:24:17,567:INFO:Creating metrics dataframe
2025-03-13 19:24:17,580:INFO:Initializing Ada Boost Classifier
2025-03-13 19:24:17,580:INFO:Total runtime is 1.87644393046697 minutes
2025-03-13 19:24:17,587:INFO:SubProcess create_model() called ==================================
2025-03-13 19:24:17,588:INFO:Initializing create_model()
2025-03-13 19:24:17,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:24:17,589:INFO:Checking exceptions
2025-03-13 19:24:17,589:INFO:Importing libraries
2025-03-13 19:24:17,589:INFO:Copying training dataset
2025-03-13 19:24:17,700:INFO:Defining folds
2025-03-13 19:24:17,703:INFO:Declaring metric variables
2025-03-13 19:24:17,713:INFO:Importing untrained model
2025-03-13 19:24:17,728:INFO:Ada Boost Classifier Imported successfully
2025-03-13 19:24:17,747:INFO:Starting cross validation
2025-03-13 19:24:17,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:24:17,991:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,089:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,189:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,266:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,374:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:18,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 19:24:52,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:52,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:52,890:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:52,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:52,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,028:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,165:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,170:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,206:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,215:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,421:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:24:53,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:24:53,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:24:53,551:INFO:Calculating mean and std
2025-03-13 19:24:53,555:INFO:Creating metrics dataframe
2025-03-13 19:24:53,568:INFO:Uploading results into container
2025-03-13 19:24:53,569:INFO:Uploading model into container now
2025-03-13 19:24:53,569:INFO:_master_model_container: 9
2025-03-13 19:24:53,570:INFO:_display_container: 2
2025-03-13 19:24:53,570:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-13 19:24:53,570:INFO:create_model() successfully completed......................................
2025-03-13 19:24:53,666:INFO:SubProcess create_model() end ==================================
2025-03-13 19:24:53,666:INFO:Creating metrics dataframe
2025-03-13 19:24:53,680:INFO:Initializing Gradient Boosting Classifier
2025-03-13 19:24:53,680:INFO:Total runtime is 2.4781049807866418 minutes
2025-03-13 19:24:53,687:INFO:SubProcess create_model() called ==================================
2025-03-13 19:24:53,689:INFO:Initializing create_model()
2025-03-13 19:24:53,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:24:53,689:INFO:Checking exceptions
2025-03-13 19:24:53,689:INFO:Importing libraries
2025-03-13 19:24:53,690:INFO:Copying training dataset
2025-03-13 19:24:53,802:INFO:Defining folds
2025-03-13 19:24:53,803:INFO:Declaring metric variables
2025-03-13 19:24:53,823:INFO:Importing untrained model
2025-03-13 19:24:53,835:INFO:Gradient Boosting Classifier Imported successfully
2025-03-13 19:24:53,853:INFO:Starting cross validation
2025-03-13 19:24:53,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:46:15,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:15,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:15,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:15,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:19,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:19,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:19,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:21,691:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:21,702:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:21,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:21,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:22,924:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:22,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:22,943:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:22,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:24,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:24,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:24,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:24,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:25,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,025:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,033:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,379:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:25,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:25,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:28,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:28,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:28,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:28,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:30,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:30,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:30,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:30,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:30,426:INFO:Calculating mean and std
2025-03-13 19:46:30,432:INFO:Creating metrics dataframe
2025-03-13 19:46:30,437:INFO:Uploading results into container
2025-03-13 19:46:30,437:INFO:Uploading model into container now
2025-03-13 19:46:30,438:INFO:_master_model_container: 10
2025-03-13 19:46:30,438:INFO:_display_container: 2
2025-03-13 19:46:30,440:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-13 19:46:30,440:INFO:create_model() successfully completed......................................
2025-03-13 19:46:30,518:INFO:SubProcess create_model() end ==================================
2025-03-13 19:46:30,518:INFO:Creating metrics dataframe
2025-03-13 19:46:30,531:INFO:Initializing Linear Discriminant Analysis
2025-03-13 19:46:30,531:INFO:Total runtime is 24.09228367408117 minutes
2025-03-13 19:46:30,537:INFO:SubProcess create_model() called ==================================
2025-03-13 19:46:30,538:INFO:Initializing create_model()
2025-03-13 19:46:30,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:46:30,538:INFO:Checking exceptions
2025-03-13 19:46:30,538:INFO:Importing libraries
2025-03-13 19:46:30,538:INFO:Copying training dataset
2025-03-13 19:46:30,617:INFO:Defining folds
2025-03-13 19:46:30,618:INFO:Declaring metric variables
2025-03-13 19:46:30,626:INFO:Importing untrained model
2025-03-13 19:46:30,635:INFO:Linear Discriminant Analysis Imported successfully
2025-03-13 19:46:30,650:INFO:Starting cross validation
2025-03-13 19:46:30,652:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:46:31,284:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,404:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,437:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,528:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,537:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,543:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,596:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,601:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,610:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,614:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,635:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 19:46:31,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,645:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,649:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:46:31,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:31,676:INFO:Calculating mean and std
2025-03-13 19:46:31,678:INFO:Creating metrics dataframe
2025-03-13 19:46:31,682:INFO:Uploading results into container
2025-03-13 19:46:31,684:INFO:Uploading model into container now
2025-03-13 19:46:31,684:INFO:_master_model_container: 11
2025-03-13 19:46:31,685:INFO:_display_container: 2
2025-03-13 19:46:31,685:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-13 19:46:31,685:INFO:create_model() successfully completed......................................
2025-03-13 19:46:31,761:INFO:SubProcess create_model() end ==================================
2025-03-13 19:46:31,761:INFO:Creating metrics dataframe
2025-03-13 19:46:31,774:INFO:Initializing Extra Trees Classifier
2025-03-13 19:46:31,774:INFO:Total runtime is 24.112997174263004 minutes
2025-03-13 19:46:31,780:INFO:SubProcess create_model() called ==================================
2025-03-13 19:46:31,780:INFO:Initializing create_model()
2025-03-13 19:46:31,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:46:31,780:INFO:Checking exceptions
2025-03-13 19:46:31,781:INFO:Importing libraries
2025-03-13 19:46:31,781:INFO:Copying training dataset
2025-03-13 19:46:31,864:INFO:Defining folds
2025-03-13 19:46:31,865:INFO:Declaring metric variables
2025-03-13 19:46:31,874:INFO:Importing untrained model
2025-03-13 19:46:31,881:INFO:Extra Trees Classifier Imported successfully
2025-03-13 19:46:31,900:INFO:Starting cross validation
2025-03-13 19:46:31,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:46:45,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:45,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,377:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,610:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,805:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,894:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:46,967:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,714:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,790:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,904:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,977:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,988:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:47,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:46:48,044:INFO:Calculating mean and std
2025-03-13 19:46:48,046:INFO:Creating metrics dataframe
2025-03-13 19:46:48,051:INFO:Uploading results into container
2025-03-13 19:46:48,053:INFO:Uploading model into container now
2025-03-13 19:46:48,053:INFO:_master_model_container: 12
2025-03-13 19:46:48,054:INFO:_display_container: 2
2025-03-13 19:46:48,060:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 19:46:48,060:INFO:create_model() successfully completed......................................
2025-03-13 19:46:48,160:INFO:SubProcess create_model() end ==================================
2025-03-13 19:46:48,161:INFO:Creating metrics dataframe
2025-03-13 19:46:48,177:INFO:Initializing Light Gradient Boosting Machine
2025-03-13 19:46:48,178:INFO:Total runtime is 24.386400047938032 minutes
2025-03-13 19:46:48,185:INFO:SubProcess create_model() called ==================================
2025-03-13 19:46:48,185:INFO:Initializing create_model()
2025-03-13 19:46:48,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:46:48,186:INFO:Checking exceptions
2025-03-13 19:46:48,186:INFO:Importing libraries
2025-03-13 19:46:48,186:INFO:Copying training dataset
2025-03-13 19:46:48,282:INFO:Defining folds
2025-03-13 19:46:48,282:INFO:Declaring metric variables
2025-03-13 19:46:48,301:INFO:Importing untrained model
2025-03-13 19:46:48,327:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-13 19:46:48,352:INFO:Starting cross validation
2025-03-13 19:46:48,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:47:52,813:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:52,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:52,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:54,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:54,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:54,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:55,250:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:55,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:55,270:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:56,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:56,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:56,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,162:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,171:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,190:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,959:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:47:58,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:01,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:01,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:01,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:01,892:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,069:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:03,895:INFO:Calculating mean and std
2025-03-13 19:48:03,896:INFO:Creating metrics dataframe
2025-03-13 19:48:03,899:INFO:Uploading results into container
2025-03-13 19:48:03,899:INFO:Uploading model into container now
2025-03-13 19:48:03,900:INFO:_master_model_container: 13
2025-03-13 19:48:03,900:INFO:_display_container: 2
2025-03-13 19:48:03,901:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-13 19:48:03,902:INFO:create_model() successfully completed......................................
2025-03-13 19:48:03,986:INFO:SubProcess create_model() end ==================================
2025-03-13 19:48:03,986:INFO:Creating metrics dataframe
2025-03-13 19:48:04,001:INFO:Initializing Dummy Classifier
2025-03-13 19:48:04,002:INFO:Total runtime is 25.650134801864628 minutes
2025-03-13 19:48:04,007:INFO:SubProcess create_model() called ==================================
2025-03-13 19:48:04,008:INFO:Initializing create_model()
2025-03-13 19:48:04,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022591D286A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:48:04,008:INFO:Checking exceptions
2025-03-13 19:48:04,009:INFO:Importing libraries
2025-03-13 19:48:04,009:INFO:Copying training dataset
2025-03-13 19:48:04,087:INFO:Defining folds
2025-03-13 19:48:04,088:INFO:Declaring metric variables
2025-03-13 19:48:04,096:INFO:Importing untrained model
2025-03-13 19:48:04,103:INFO:Dummy Classifier Imported successfully
2025-03-13 19:48:04,120:INFO:Starting cross validation
2025-03-13 19:48:04,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 19:48:04,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,615:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,618:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,635:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,636:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,644:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,657:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,689:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,698:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,710:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,774:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,818:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 19:48:04,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 19:48:04,938:INFO:Calculating mean and std
2025-03-13 19:48:04,940:INFO:Creating metrics dataframe
2025-03-13 19:48:04,947:INFO:Uploading results into container
2025-03-13 19:48:04,948:INFO:Uploading model into container now
2025-03-13 19:48:04,949:INFO:_master_model_container: 14
2025-03-13 19:48:04,949:INFO:_display_container: 2
2025-03-13 19:48:04,950:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-13 19:48:04,950:INFO:create_model() successfully completed......................................
2025-03-13 19:48:05,032:INFO:SubProcess create_model() end ==================================
2025-03-13 19:48:05,032:INFO:Creating metrics dataframe
2025-03-13 19:48:05,053:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-13 19:48:05,072:INFO:Initializing create_model()
2025-03-13 19:48:05,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 19:48:05,072:INFO:Checking exceptions
2025-03-13 19:48:05,075:INFO:Importing libraries
2025-03-13 19:48:05,075:INFO:Copying training dataset
2025-03-13 19:48:05,159:INFO:Defining folds
2025-03-13 19:48:05,159:INFO:Declaring metric variables
2025-03-13 19:48:05,159:INFO:Importing untrained model
2025-03-13 19:48:05,159:INFO:Declaring custom model
2025-03-13 19:48:05,161:INFO:Extra Trees Classifier Imported successfully
2025-03-13 19:48:05,162:INFO:Cross validation set to False
2025-03-13 19:48:05,163:INFO:Fitting Model
2025-03-13 19:48:07,897:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 19:48:07,897:INFO:create_model() successfully completed......................................
2025-03-13 19:48:08,034:INFO:_master_model_container: 14
2025-03-13 19:48:08,034:INFO:_display_container: 2
2025-03-13 19:48:08,034:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 19:48:08,034:INFO:compare_models() successfully completed......................................
2025-03-13 19:48:08,035:INFO:Initializing evaluate_model()
2025-03-13 19:48:08,035:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-13 19:48:08,086:INFO:Initializing plot_model()
2025-03-13 19:48:08,086:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 19:48:08,086:INFO:Checking exceptions
2025-03-13 19:48:08,152:INFO:Preloading libraries
2025-03-13 19:48:08,436:INFO:Copying training dataset
2025-03-13 19:48:08,436:INFO:Plot type: pipeline
2025-03-13 19:48:08,713:INFO:Visual Rendered Successfully
2025-03-13 19:48:08,794:INFO:plot_model() successfully completed......................................
2025-03-13 20:12:57,676:INFO:Initializing predict_model()
2025-03-13 20:12:57,676:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022597A4B040>)
2025-03-13 20:12:57,676:INFO:Checking exceptions
2025-03-13 20:12:57,677:INFO:Preloading libraries
2025-03-13 20:12:57,678:INFO:Set up data.
2025-03-13 20:12:57,686:INFO:Set up index.
2025-03-13 20:12:57,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:12:57,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:12:57,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:13:04,467:INFO:Initializing plot_model()
2025-03-13 20:13:04,467:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 20:13:04,467:INFO:Checking exceptions
2025-03-13 20:13:04,514:INFO:Preloading libraries
2025-03-13 20:13:04,706:INFO:Copying training dataset
2025-03-13 20:13:04,707:INFO:Plot type: auc
2025-03-13 20:13:04,874:INFO:Fitting Model
2025-03-13 20:13:04,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 20:13:04,882:INFO:Scoring test/hold-out set
2025-03-13 20:13:05,330:INFO:Visual Rendered Successfully
2025-03-13 20:13:05,400:INFO:plot_model() successfully completed......................................
2025-03-13 20:13:08,427:INFO:Initializing plot_model()
2025-03-13 20:13:08,428:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 20:13:08,428:INFO:Checking exceptions
2025-03-13 20:13:08,459:INFO:Preloading libraries
2025-03-13 20:13:08,654:INFO:Copying training dataset
2025-03-13 20:13:08,654:INFO:Plot type: confusion_matrix
2025-03-13 20:13:08,824:INFO:Fitting Model
2025-03-13 20:13:08,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-13 20:13:08,826:INFO:Scoring test/hold-out set
2025-03-13 20:13:09,282:INFO:Visual Rendered Successfully
2025-03-13 20:13:09,363:INFO:plot_model() successfully completed......................................
2025-03-13 20:13:21,947:INFO:Initializing plot_model()
2025-03-13 20:13:21,948:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 20:13:21,948:INFO:Checking exceptions
2025-03-13 20:13:25,798:INFO:Initializing plot_model()
2025-03-13 20:13:25,798:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 20:13:25,798:INFO:Checking exceptions
2025-03-13 20:13:25,842:INFO:Preloading libraries
2025-03-13 20:13:26,054:INFO:Copying training dataset
2025-03-13 20:13:26,054:INFO:Plot type: feature_all
2025-03-13 20:13:26,107:WARNING:No coef_ found. Trying feature_importances_
2025-03-13 20:13:26,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2025-03-13 20:13:26,239:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2025-03-13 20:13:26,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\patches.py:739: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2025-03-13 20:13:26,242:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\matplotlib\transforms.py:2050: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2025-03-13 20:13:26,264:INFO:Visual Rendered Successfully
2025-03-13 20:13:26,343:INFO:plot_model() successfully completed......................................
2025-03-13 20:13:31,552:INFO:Initializing plot_model()
2025-03-13 20:13:31,552:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002258E3C9BE0>, system=True)
2025-03-13 20:13:31,552:INFO:Checking exceptions
2025-03-13 20:13:31,614:INFO:Preloading libraries
2025-03-13 20:13:31,800:INFO:Copying training dataset
2025-03-13 20:13:31,800:INFO:Plot type: feature
2025-03-13 20:13:31,800:WARNING:No coef_ found. Trying feature_importances_
2025-03-13 20:13:31,953:INFO:Visual Rendered Successfully
2025-03-13 20:13:32,020:INFO:plot_model() successfully completed......................................
2025-03-13 20:14:33,853:INFO:Initializing save_model()
2025-03-13 20:14:33,853:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'SP', 'RHOB', 'GR',
                                             'CALI'],
                                    transformer=SimpleImputer(add_indicator=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-13 20:14:33,853:INFO:Adding model into prep_pipe
2025-03-13 20:14:34,152:INFO:best_model.pkl saved in current working directory
2025-03-13 20:14:34,155:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'SP', 'RHOB', 'GR',
                                             'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-03-13 20:14:34,155:INFO:save_model() successfully completed......................................
2025-03-13 20:16:50,215:INFO:PyCaret ClassificationExperiment
2025-03-13 20:16:50,215:INFO:Logging name: clf-default-name
2025-03-13 20:16:50,216:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-13 20:16:50,216:INFO:version 3.3.2
2025-03-13 20:16:50,216:INFO:Initializing setup()
2025-03-13 20:16:50,216:INFO:self.USI: 7843
2025-03-13 20:16:50,216:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'X', 'y_train', 'target_param', 'y', 'logging_param', 'is_multiclass', 'pipeline', '_available_plots', 'X_train', 'n_jobs_param', 'html_param', 'y_test', 'memory', 'exp_name_log', 'seed', 'fold_groups_param', '_ml_usecase', 'fix_imbalance', 'USI', 'log_plots_param', 'idx', 'data', 'fold_generator', 'X_test', 'gpu_n_jobs_param', 'fold_shuffle_param'}
2025-03-13 20:16:50,216:INFO:Checking environment
2025-03-13 20:16:50,216:INFO:python_version: 3.9.21
2025-03-13 20:16:50,216:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-13 20:16:50,216:INFO:machine: AMD64
2025-03-13 20:16:50,216:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-13 20:16:50,216:INFO:Memory: svmem(total=25372119040, available=6593073152, percent=74.0, used=18779045888, free=6593073152)
2025-03-13 20:16:50,216:INFO:Physical Core: 10
2025-03-13 20:16:50,216:INFO:Logical Core: 16
2025-03-13 20:16:50,216:INFO:Checking libraries
2025-03-13 20:16:50,216:INFO:System:
2025-03-13 20:16:50,216:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-13 20:16:50,216:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-13 20:16:50,216:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-13 20:16:50,216:INFO:PyCaret required dependencies:
2025-03-13 20:16:50,216:INFO:                 pip: 24.2
2025-03-13 20:16:50,216:INFO:          setuptools: 75.1.0
2025-03-13 20:16:50,216:INFO:             pycaret: 3.3.2
2025-03-13 20:16:50,216:INFO:             IPython: 8.12.0
2025-03-13 20:16:50,216:INFO:          ipywidgets: 8.1.5
2025-03-13 20:16:50,216:INFO:                tqdm: 4.67.1
2025-03-13 20:16:50,216:INFO:               numpy: 1.24.3
2025-03-13 20:16:50,216:INFO:              pandas: 2.1.4
2025-03-13 20:16:50,216:INFO:              jinja2: 3.1.5
2025-03-13 20:16:50,216:INFO:               scipy: 1.11.4
2025-03-13 20:16:50,216:INFO:              joblib: 1.3.2
2025-03-13 20:16:50,216:INFO:             sklearn: 1.4.2
2025-03-13 20:16:50,216:INFO:                pyod: 2.0.3
2025-03-13 20:16:50,216:INFO:            imblearn: 0.12.4
2025-03-13 20:16:50,216:INFO:   category_encoders: 2.6.4
2025-03-13 20:16:50,216:INFO:            lightgbm: 4.6.0
2025-03-13 20:16:50,216:INFO:               numba: 0.60.0
2025-03-13 20:16:50,216:INFO:            requests: 2.32.3
2025-03-13 20:16:50,216:INFO:          matplotlib: 3.7.5
2025-03-13 20:16:50,216:INFO:          scikitplot: 0.3.7
2025-03-13 20:16:50,216:INFO:         yellowbrick: 1.5
2025-03-13 20:16:50,216:INFO:              plotly: 5.24.1
2025-03-13 20:16:50,216:INFO:    plotly-resampler: Not installed
2025-03-13 20:16:50,216:INFO:             kaleido: 0.2.1
2025-03-13 20:16:50,216:INFO:           schemdraw: 0.15
2025-03-13 20:16:50,216:INFO:         statsmodels: 0.14.4
2025-03-13 20:16:50,216:INFO:              sktime: 0.26.0
2025-03-13 20:16:50,216:INFO:               tbats: 1.1.3
2025-03-13 20:16:50,216:INFO:            pmdarima: 2.0.4
2025-03-13 20:16:50,216:INFO:              psutil: 5.9.0
2025-03-13 20:16:50,216:INFO:          markupsafe: 3.0.2
2025-03-13 20:16:50,216:INFO:             pickle5: Not installed
2025-03-13 20:16:50,216:INFO:         cloudpickle: 2.2.1
2025-03-13 20:16:50,216:INFO:         deprecation: 2.1.0
2025-03-13 20:16:50,216:INFO:              xxhash: 3.5.0
2025-03-13 20:16:50,216:INFO:           wurlitzer: Not installed
2025-03-13 20:16:50,216:INFO:PyCaret optional dependencies:
2025-03-13 20:16:50,216:INFO:                shap: Not installed
2025-03-13 20:16:50,216:INFO:           interpret: Not installed
2025-03-13 20:16:50,216:INFO:                umap: Not installed
2025-03-13 20:16:50,216:INFO:     ydata_profiling: Not installed
2025-03-13 20:16:50,216:INFO:  explainerdashboard: Not installed
2025-03-13 20:16:50,216:INFO:             autoviz: Not installed
2025-03-13 20:16:50,216:INFO:           fairlearn: Not installed
2025-03-13 20:16:50,216:INFO:          deepchecks: Not installed
2025-03-13 20:16:50,217:INFO:             xgboost: Not installed
2025-03-13 20:16:50,217:INFO:            catboost: Not installed
2025-03-13 20:16:50,217:INFO:              kmodes: Not installed
2025-03-13 20:16:50,217:INFO:             mlxtend: Not installed
2025-03-13 20:16:50,217:INFO:       statsforecast: Not installed
2025-03-13 20:16:50,217:INFO:        tune_sklearn: Not installed
2025-03-13 20:16:50,217:INFO:                 ray: Not installed
2025-03-13 20:16:50,217:INFO:            hyperopt: Not installed
2025-03-13 20:16:50,217:INFO:              optuna: Not installed
2025-03-13 20:16:50,217:INFO:               skopt: Not installed
2025-03-13 20:16:50,217:INFO:              mlflow: Not installed
2025-03-13 20:16:50,217:INFO:              gradio: Not installed
2025-03-13 20:16:50,217:INFO:             fastapi: Not installed
2025-03-13 20:16:50,217:INFO:             uvicorn: 0.34.0
2025-03-13 20:16:50,217:INFO:              m2cgen: Not installed
2025-03-13 20:16:50,217:INFO:           evidently: Not installed
2025-03-13 20:16:50,217:INFO:               fugue: Not installed
2025-03-13 20:16:50,217:INFO:           streamlit: Not installed
2025-03-13 20:16:50,217:INFO:             prophet: 1.1.6
2025-03-13 20:16:50,217:INFO:None
2025-03-13 20:16:50,217:INFO:Set up data.
2025-03-13 20:16:50,235:INFO:Set up folding strategy.
2025-03-13 20:16:50,235:INFO:Set up train/test split.
2025-03-13 20:16:50,286:INFO:Set up index.
2025-03-13 20:16:50,288:INFO:Assigning column types.
2025-03-13 20:16:50,308:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-13 20:16:50,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,380:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,396:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-13 20:16:50,423:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-13 20:16:50,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,486:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-13 20:16:50,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,573:INFO:Preparing preprocessing pipeline...
2025-03-13 20:16:50,576:INFO:Set up label encoding.
2025-03-13 20:16:50,576:INFO:Set up simple imputation.
2025-03-13 20:16:50,576:INFO:Set up feature normalization.
2025-03-13 20:16:50,641:INFO:Finished creating preprocessing pipeline.
2025-03-13 20:16:50,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'RHOB', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-13 20:16:50,645:INFO:Creating final display dataframe.
2025-03-13 20:16:50,828:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9      Rows with missing values   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                         (124347, 9)  
5                                         (124347, 9)  
6                                          (87042, 9)  
7                                          (37305, 9)  
8                                                   8  
9                                                0.1%  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               7843  
2025-03-13 20:16:50,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-13 20:16:50,924:INFO:setup() successfully completed in 0.71s...............
2025-03-13 20:16:50,924:INFO:Initializing compare_models()
2025-03-13 20:16:50,924:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-13 20:16:50,924:INFO:Checking exceptions
2025-03-13 20:16:50,940:INFO:Preparing display monitor
2025-03-13 20:16:50,959:INFO:Initializing Logistic Regression
2025-03-13 20:16:50,960:INFO:Total runtime is 1.6617774963378907e-05 minutes
2025-03-13 20:16:50,964:INFO:SubProcess create_model() called ==================================
2025-03-13 20:16:50,965:INFO:Initializing create_model()
2025-03-13 20:16:50,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:16:50,965:INFO:Checking exceptions
2025-03-13 20:16:50,965:INFO:Importing libraries
2025-03-13 20:16:50,965:INFO:Copying training dataset
2025-03-13 20:16:51,015:INFO:Defining folds
2025-03-13 20:16:51,015:INFO:Declaring metric variables
2025-03-13 20:16:51,023:INFO:Importing untrained model
2025-03-13 20:16:51,028:INFO:Logistic Regression Imported successfully
2025-03-13 20:16:51,040:INFO:Starting cross validation
2025-03-13 20:16:51,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:01,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:01,654:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:01,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:01,665:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:01,670:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:01,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:01,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:01,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:01,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:01,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,164:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,195:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,209:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,329:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,751:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,753:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,881:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:03,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,922:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:03,927:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:03,947:INFO:Calculating mean and std
2025-03-13 20:17:03,948:INFO:Creating metrics dataframe
2025-03-13 20:17:03,950:INFO:Uploading results into container
2025-03-13 20:17:03,950:INFO:Uploading model into container now
2025-03-13 20:17:03,951:INFO:_master_model_container: 1
2025-03-13 20:17:03,951:INFO:_display_container: 2
2025-03-13 20:17:03,951:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-13 20:17:03,951:INFO:create_model() successfully completed......................................
2025-03-13 20:17:04,027:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:04,027:INFO:Creating metrics dataframe
2025-03-13 20:17:04,031:INFO:Initializing K Neighbors Classifier
2025-03-13 20:17:04,031:INFO:Total runtime is 0.21786463658014932 minutes
2025-03-13 20:17:04,034:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:04,034:INFO:Initializing create_model()
2025-03-13 20:17:04,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:04,034:INFO:Checking exceptions
2025-03-13 20:17:04,034:INFO:Importing libraries
2025-03-13 20:17:04,034:INFO:Copying training dataset
2025-03-13 20:17:04,056:INFO:Defining folds
2025-03-13 20:17:04,056:INFO:Declaring metric variables
2025-03-13 20:17:04,059:INFO:Importing untrained model
2025-03-13 20:17:04,063:INFO:K Neighbors Classifier Imported successfully
2025-03-13 20:17:04,068:INFO:Starting cross validation
2025-03-13 20:17:04,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:05,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,171:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,218:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:05,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,833:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,952:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:07,983:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,008:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,015:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,040:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,051:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,077:INFO:Calculating mean and std
2025-03-13 20:17:08,079:INFO:Creating metrics dataframe
2025-03-13 20:17:08,081:INFO:Uploading results into container
2025-03-13 20:17:08,081:INFO:Uploading model into container now
2025-03-13 20:17:08,081:INFO:_master_model_container: 2
2025-03-13 20:17:08,081:INFO:_display_container: 2
2025-03-13 20:17:08,082:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-13 20:17:08,082:INFO:create_model() successfully completed......................................
2025-03-13 20:17:08,164:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:08,164:INFO:Creating metrics dataframe
2025-03-13 20:17:08,169:INFO:Initializing Naive Bayes
2025-03-13 20:17:08,169:INFO:Total runtime is 0.2868238131205241 minutes
2025-03-13 20:17:08,173:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:08,173:INFO:Initializing create_model()
2025-03-13 20:17:08,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:08,173:INFO:Checking exceptions
2025-03-13 20:17:08,174:INFO:Importing libraries
2025-03-13 20:17:08,174:INFO:Copying training dataset
2025-03-13 20:17:08,200:INFO:Defining folds
2025-03-13 20:17:08,201:INFO:Declaring metric variables
2025-03-13 20:17:08,207:INFO:Importing untrained model
2025-03-13 20:17:08,214:INFO:Naive Bayes Imported successfully
2025-03-13 20:17:08,223:INFO:Starting cross validation
2025-03-13 20:17:08,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:08,412:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,421:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,430:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,502:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,537:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,554:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,568:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:08,582:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:08,608:INFO:Calculating mean and std
2025-03-13 20:17:08,609:INFO:Creating metrics dataframe
2025-03-13 20:17:08,611:INFO:Uploading results into container
2025-03-13 20:17:08,611:INFO:Uploading model into container now
2025-03-13 20:17:08,612:INFO:_master_model_container: 3
2025-03-13 20:17:08,612:INFO:_display_container: 2
2025-03-13 20:17:08,612:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-13 20:17:08,612:INFO:create_model() successfully completed......................................
2025-03-13 20:17:08,691:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:08,692:INFO:Creating metrics dataframe
2025-03-13 20:17:08,699:INFO:Initializing Decision Tree Classifier
2025-03-13 20:17:08,699:INFO:Total runtime is 0.2956598401069641 minutes
2025-03-13 20:17:08,703:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:08,703:INFO:Initializing create_model()
2025-03-13 20:17:08,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:08,704:INFO:Checking exceptions
2025-03-13 20:17:08,704:INFO:Importing libraries
2025-03-13 20:17:08,704:INFO:Copying training dataset
2025-03-13 20:17:08,734:INFO:Defining folds
2025-03-13 20:17:08,734:INFO:Declaring metric variables
2025-03-13 20:17:08,738:INFO:Importing untrained model
2025-03-13 20:17:08,742:INFO:Decision Tree Classifier Imported successfully
2025-03-13 20:17:08,750:INFO:Starting cross validation
2025-03-13 20:17:08,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:10,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,419:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:10,535:INFO:Calculating mean and std
2025-03-13 20:17:10,536:INFO:Creating metrics dataframe
2025-03-13 20:17:10,538:INFO:Uploading results into container
2025-03-13 20:17:10,539:INFO:Uploading model into container now
2025-03-13 20:17:10,539:INFO:_master_model_container: 4
2025-03-13 20:17:10,540:INFO:_display_container: 2
2025-03-13 20:17:10,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-13 20:17:10,540:INFO:create_model() successfully completed......................................
2025-03-13 20:17:10,616:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:10,617:INFO:Creating metrics dataframe
2025-03-13 20:17:10,622:INFO:Initializing SVM - Linear Kernel
2025-03-13 20:17:10,622:INFO:Total runtime is 0.3277104338010152 minutes
2025-03-13 20:17:10,626:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:10,626:INFO:Initializing create_model()
2025-03-13 20:17:10,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:10,626:INFO:Checking exceptions
2025-03-13 20:17:10,626:INFO:Importing libraries
2025-03-13 20:17:10,626:INFO:Copying training dataset
2025-03-13 20:17:10,649:INFO:Defining folds
2025-03-13 20:17:10,650:INFO:Declaring metric variables
2025-03-13 20:17:10,653:INFO:Importing untrained model
2025-03-13 20:17:10,658:INFO:SVM - Linear Kernel Imported successfully
2025-03-13 20:17:10,666:INFO:Starting cross validation
2025-03-13 20:17:10,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:11,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,208:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,407:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,420:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,537:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,633:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,640:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,651:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,655:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,662:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,665:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

at the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,667:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,667:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,678:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,680:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,688:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,698:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,701:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,704:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:11,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,711:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,714:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:11,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:11,739:INFO:Calculating mean and std
2025-03-13 20:17:11,739:INFO:Creating metrics dataframe
2025-03-13 20:17:11,741:INFO:Uploading results into container
2025-03-13 20:17:11,742:INFO:Uploading model into container now
2025-03-13 20:17:11,742:INFO:_master_model_container: 5
2025-03-13 20:17:11,742:INFO:_display_container: 2
2025-03-13 20:17:11,743:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-13 20:17:11,743:INFO:create_model() successfully completed......................................
2025-03-13 20:17:11,816:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:11,816:INFO:Creating metrics dataframe
2025-03-13 20:17:11,822:INFO:Initializing Ridge Classifier
2025-03-13 20:17:11,823:INFO:Total runtime is 0.3477255662282308 minutes
2025-03-13 20:17:11,825:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:11,826:INFO:Initializing create_model()
2025-03-13 20:17:11,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:11,826:INFO:Checking exceptions
2025-03-13 20:17:11,826:INFO:Importing libraries
2025-03-13 20:17:11,826:INFO:Copying training dataset
2025-03-13 20:17:11,852:INFO:Defining folds
2025-03-13 20:17:11,852:INFO:Declaring metric variables
2025-03-13 20:17:11,854:INFO:Importing untrained model
2025-03-13 20:17:11,858:INFO:Ridge Classifier Imported successfully
2025-03-13 20:17:11,864:INFO:Starting cross validation
2025-03-13 20:17:11,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:12,006:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,008:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,042:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,053:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,056:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,062:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,069:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,140:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:12,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,155:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:12,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:12,176:INFO:Calculating mean and std
2025-03-13 20:17:12,177:INFO:Creating metrics dataframe
2025-03-13 20:17:12,178:INFO:Uploading results into container
2025-03-13 20:17:12,179:INFO:Uploading model into container now
2025-03-13 20:17:12,179:INFO:_master_model_container: 6
2025-03-13 20:17:12,179:INFO:_display_container: 2
2025-03-13 20:17:12,179:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-13 20:17:12,180:INFO:create_model() successfully completed......................................
2025-03-13 20:17:12,250:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:12,250:INFO:Creating metrics dataframe
2025-03-13 20:17:12,257:INFO:Initializing Random Forest Classifier
2025-03-13 20:17:12,257:INFO:Total runtime is 0.3549663265546163 minutes
2025-03-13 20:17:12,262:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:12,262:INFO:Initializing create_model()
2025-03-13 20:17:12,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:12,263:INFO:Checking exceptions
2025-03-13 20:17:12,263:INFO:Importing libraries
2025-03-13 20:17:12,263:INFO:Copying training dataset
2025-03-13 20:17:12,285:INFO:Defining folds
2025-03-13 20:17:12,285:INFO:Declaring metric variables
2025-03-13 20:17:12,293:INFO:Importing untrained model
2025-03-13 20:17:12,299:INFO:Random Forest Classifier Imported successfully
2025-03-13 20:17:12,308:INFO:Starting cross validation
2025-03-13 20:17:12,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:33,691:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,704:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,709:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,718:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,990:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:33,991:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,040:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,135:INFO:Calculating mean and std
2025-03-13 20:17:34,136:INFO:Creating metrics dataframe
2025-03-13 20:17:34,137:INFO:Uploading results into container
2025-03-13 20:17:34,138:INFO:Uploading model into container now
2025-03-13 20:17:34,139:INFO:_master_model_container: 7
2025-03-13 20:17:34,139:INFO:_display_container: 2
2025-03-13 20:17:34,139:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-13 20:17:34,139:INFO:create_model() successfully completed......................................
2025-03-13 20:17:34,220:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:34,220:INFO:Creating metrics dataframe
2025-03-13 20:17:34,226:INFO:Initializing Quadratic Discriminant Analysis
2025-03-13 20:17:34,226:INFO:Total runtime is 0.7211092829704284 minutes
2025-03-13 20:17:34,229:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:34,229:INFO:Initializing create_model()
2025-03-13 20:17:34,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:34,229:INFO:Checking exceptions
2025-03-13 20:17:34,229:INFO:Importing libraries
2025-03-13 20:17:34,229:INFO:Copying training dataset
2025-03-13 20:17:34,256:INFO:Defining folds
2025-03-13 20:17:34,257:INFO:Declaring metric variables
2025-03-13 20:17:34,261:INFO:Importing untrained model
2025-03-13 20:17:34,265:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-13 20:17:34,271:INFO:Starting cross validation
2025-03-13 20:17:34,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:34,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,420:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,421:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,437:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,476:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,548:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-13 20:17:34,563:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:34,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,592:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:34,614:INFO:Calculating mean and std
2025-03-13 20:17:34,615:INFO:Creating metrics dataframe
2025-03-13 20:17:34,616:INFO:Uploading results into container
2025-03-13 20:17:34,617:INFO:Uploading model into container now
2025-03-13 20:17:34,617:INFO:_master_model_container: 8
2025-03-13 20:17:34,617:INFO:_display_container: 2
2025-03-13 20:17:34,617:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-13 20:17:34,617:INFO:create_model() successfully completed......................................
2025-03-13 20:17:34,691:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:34,691:INFO:Creating metrics dataframe
2025-03-13 20:17:34,698:INFO:Initializing Ada Boost Classifier
2025-03-13 20:17:34,698:INFO:Total runtime is 0.7289761821428934 minutes
2025-03-13 20:17:34,703:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:34,703:INFO:Initializing create_model()
2025-03-13 20:17:34,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:34,703:INFO:Checking exceptions
2025-03-13 20:17:34,703:INFO:Importing libraries
2025-03-13 20:17:34,703:INFO:Copying training dataset
2025-03-13 20:17:34,729:INFO:Defining folds
2025-03-13 20:17:34,729:INFO:Declaring metric variables
2025-03-13 20:17:34,736:INFO:Importing untrained model
2025-03-13 20:17:34,741:INFO:Ada Boost Classifier Imported successfully
2025-03-13 20:17:34,753:INFO:Starting cross validation
2025-03-13 20:17:34,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:17:34,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,894:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:34,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:35,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-13 20:17:44,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:44,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:44,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:44,901:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:44,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:44,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,997:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:44,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:45,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:45,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:45,049:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:45,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,052:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,055:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:45,055:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,056:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:17:45,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:45,058:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,062:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,063:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:45,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:17:45,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:17:45,087:INFO:Calculating mean and std
2025-03-13 20:17:45,088:INFO:Creating metrics dataframe
2025-03-13 20:17:45,089:INFO:Uploading results into container
2025-03-13 20:17:45,090:INFO:Uploading model into container now
2025-03-13 20:17:45,090:INFO:_master_model_container: 9
2025-03-13 20:17:45,090:INFO:_display_container: 2
2025-03-13 20:17:45,091:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-13 20:17:45,091:INFO:create_model() successfully completed......................................
2025-03-13 20:17:45,164:INFO:SubProcess create_model() end ==================================
2025-03-13 20:17:45,164:INFO:Creating metrics dataframe
2025-03-13 20:17:45,171:INFO:Initializing Gradient Boosting Classifier
2025-03-13 20:17:45,171:INFO:Total runtime is 0.9035244146982828 minutes
2025-03-13 20:17:45,174:INFO:SubProcess create_model() called ==================================
2025-03-13 20:17:45,174:INFO:Initializing create_model()
2025-03-13 20:17:45,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:17:45,175:INFO:Checking exceptions
2025-03-13 20:17:45,175:INFO:Importing libraries
2025-03-13 20:17:45,175:INFO:Copying training dataset
2025-03-13 20:17:45,199:INFO:Defining folds
2025-03-13 20:17:45,199:INFO:Declaring metric variables
2025-03-13 20:17:45,203:INFO:Importing untrained model
2025-03-13 20:17:45,207:INFO:Gradient Boosting Classifier Imported successfully
2025-03-13 20:17:45,213:INFO:Starting cross validation
2025-03-13 20:17:45,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:24:53,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:53,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:53,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:53,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:55,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:55,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:55,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:55,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,251:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:56,254:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,261:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:56,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:56,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:56,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,732:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:56,881:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:56,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:57,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:57,675:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:57,680:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:57,685:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,232:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,263:INFO:Calculating mean and std
2025-03-13 20:24:58,264:INFO:Creating metrics dataframe
2025-03-13 20:24:58,266:INFO:Uploading results into container
2025-03-13 20:24:58,267:INFO:Uploading model into container now
2025-03-13 20:24:58,267:INFO:_master_model_container: 10
2025-03-13 20:24:58,267:INFO:_display_container: 2
2025-03-13 20:24:58,267:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-13 20:24:58,267:INFO:create_model() successfully completed......................................
2025-03-13 20:24:58,353:INFO:SubProcess create_model() end ==================================
2025-03-13 20:24:58,353:INFO:Creating metrics dataframe
2025-03-13 20:24:58,360:INFO:Initializing Linear Discriminant Analysis
2025-03-13 20:24:58,360:INFO:Total runtime is 8.123344496885935 minutes
2025-03-13 20:24:58,364:INFO:SubProcess create_model() called ==================================
2025-03-13 20:24:58,364:INFO:Initializing create_model()
2025-03-13 20:24:58,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:24:58,364:INFO:Checking exceptions
2025-03-13 20:24:58,364:INFO:Importing libraries
2025-03-13 20:24:58,364:INFO:Copying training dataset
2025-03-13 20:24:58,393:INFO:Defining folds
2025-03-13 20:24:58,393:INFO:Declaring metric variables
2025-03-13 20:24:58,398:INFO:Importing untrained model
2025-03-13 20:24:58,402:INFO:Linear Discriminant Analysis Imported successfully
2025-03-13 20:24:58,410:INFO:Starting cross validation
2025-03-13 20:24:58,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:24:58,688:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,731:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,774:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,818:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,823:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,884:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,885:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-13 20:24:58,886:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,893:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,905:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:24:58,910:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:24:58,936:INFO:Calculating mean and std
2025-03-13 20:24:58,937:INFO:Creating metrics dataframe
2025-03-13 20:24:58,940:INFO:Uploading results into container
2025-03-13 20:24:58,941:INFO:Uploading model into container now
2025-03-13 20:24:58,942:INFO:_master_model_container: 11
2025-03-13 20:24:58,942:INFO:_display_container: 2
2025-03-13 20:24:58,942:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-13 20:24:58,943:INFO:create_model() successfully completed......................................
2025-03-13 20:24:59,023:INFO:SubProcess create_model() end ==================================
2025-03-13 20:24:59,023:INFO:Creating metrics dataframe
2025-03-13 20:24:59,029:INFO:Initializing Extra Trees Classifier
2025-03-13 20:24:59,029:INFO:Total runtime is 8.13449857632319 minutes
2025-03-13 20:24:59,032:INFO:SubProcess create_model() called ==================================
2025-03-13 20:24:59,032:INFO:Initializing create_model()
2025-03-13 20:24:59,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:24:59,034:INFO:Checking exceptions
2025-03-13 20:24:59,034:INFO:Importing libraries
2025-03-13 20:24:59,034:INFO:Copying training dataset
2025-03-13 20:24:59,059:INFO:Defining folds
2025-03-13 20:24:59,060:INFO:Declaring metric variables
2025-03-13 20:24:59,063:INFO:Importing untrained model
2025-03-13 20:24:59,066:INFO:Extra Trees Classifier Imported successfully
2025-03-13 20:24:59,073:INFO:Starting cross validation
2025-03-13 20:24:59,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:25:05,602:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,620:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,678:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,689:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,713:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,715:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,729:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,730:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,740:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,752:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,760:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,790:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,805:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:05,885:INFO:Calculating mean and std
2025-03-13 20:25:05,887:INFO:Creating metrics dataframe
2025-03-13 20:25:05,889:INFO:Uploading results into container
2025-03-13 20:25:05,890:INFO:Uploading model into container now
2025-03-13 20:25:05,890:INFO:_master_model_container: 12
2025-03-13 20:25:05,890:INFO:_display_container: 2
2025-03-13 20:25:05,891:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 20:25:05,892:INFO:create_model() successfully completed......................................
2025-03-13 20:25:05,978:INFO:SubProcess create_model() end ==================================
2025-03-13 20:25:05,978:INFO:Creating metrics dataframe
2025-03-13 20:25:05,985:INFO:Initializing Light Gradient Boosting Machine
2025-03-13 20:25:05,986:INFO:Total runtime is 8.250437915325165 minutes
2025-03-13 20:25:05,989:INFO:SubProcess create_model() called ==================================
2025-03-13 20:25:05,989:INFO:Initializing create_model()
2025-03-13 20:25:05,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:25:05,990:INFO:Checking exceptions
2025-03-13 20:25:05,990:INFO:Importing libraries
2025-03-13 20:25:05,990:INFO:Copying training dataset
2025-03-13 20:25:06,019:INFO:Defining folds
2025-03-13 20:25:06,019:INFO:Declaring metric variables
2025-03-13 20:25:06,025:INFO:Importing untrained model
2025-03-13 20:25:06,030:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-13 20:25:06,039:INFO:Starting cross validation
2025-03-13 20:25:06,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:25:27,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,497:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,899:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,908:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:27,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:28,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:28,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:28,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,162:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,180:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:29,994:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,003:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,514:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:30,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,529:INFO:Calculating mean and std
2025-03-13 20:25:31,530:INFO:Creating metrics dataframe
2025-03-13 20:25:31,533:INFO:Uploading results into container
2025-03-13 20:25:31,533:INFO:Uploading model into container now
2025-03-13 20:25:31,534:INFO:_master_model_container: 13
2025-03-13 20:25:31,535:INFO:_display_container: 2
2025-03-13 20:25:31,535:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-13 20:25:31,535:INFO:create_model() successfully completed......................................
2025-03-13 20:25:31,619:INFO:SubProcess create_model() end ==================================
2025-03-13 20:25:31,619:INFO:Creating metrics dataframe
2025-03-13 20:25:31,627:INFO:Initializing Dummy Classifier
2025-03-13 20:25:31,627:INFO:Total runtime is 8.677787685394287 minutes
2025-03-13 20:25:31,630:INFO:SubProcess create_model() called ==================================
2025-03-13 20:25:31,630:INFO:Initializing create_model()
2025-03-13 20:25:31,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002259539A160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:25:31,630:INFO:Checking exceptions
2025-03-13 20:25:31,630:INFO:Importing libraries
2025-03-13 20:25:31,631:INFO:Copying training dataset
2025-03-13 20:25:31,654:INFO:Defining folds
2025-03-13 20:25:31,654:INFO:Declaring metric variables
2025-03-13 20:25:31,659:INFO:Importing untrained model
2025-03-13 20:25:31,665:INFO:Dummy Classifier Imported successfully
2025-03-13 20:25:31,674:INFO:Starting cross validation
2025-03-13 20:25:31,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-13 20:25:31,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,901:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,943:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,961:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,977:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,979:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,991:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,992:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:31,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:31,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:32,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:32,003:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:32,004:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:32,008:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:32,012:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-13 20:25:32,015:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:25:32,043:INFO:Calculating mean and std
2025-03-13 20:25:32,044:INFO:Creating metrics dataframe
2025-03-13 20:25:32,047:INFO:Uploading results into container
2025-03-13 20:25:32,047:INFO:Uploading model into container now
2025-03-13 20:25:32,048:INFO:_master_model_container: 14
2025-03-13 20:25:32,048:INFO:_display_container: 2
2025-03-13 20:25:32,048:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-13 20:25:32,048:INFO:create_model() successfully completed......................................
2025-03-13 20:25:32,126:INFO:SubProcess create_model() end ==================================
2025-03-13 20:25:32,127:INFO:Creating metrics dataframe
2025-03-13 20:25:32,134:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-13 20:25:32,144:INFO:Initializing create_model()
2025-03-13 20:25:32,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-13 20:25:32,144:INFO:Checking exceptions
2025-03-13 20:25:32,146:INFO:Importing libraries
2025-03-13 20:25:32,146:INFO:Copying training dataset
2025-03-13 20:25:32,177:INFO:Defining folds
2025-03-13 20:25:32,178:INFO:Declaring metric variables
2025-03-13 20:25:32,178:INFO:Importing untrained model
2025-03-13 20:25:32,178:INFO:Declaring custom model
2025-03-13 20:25:32,178:INFO:Extra Trees Classifier Imported successfully
2025-03-13 20:25:32,178:INFO:Cross validation set to False
2025-03-13 20:25:32,179:INFO:Fitting Model
2025-03-13 20:25:33,072:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 20:25:33,073:INFO:create_model() successfully completed......................................
2025-03-13 20:25:33,172:INFO:_master_model_container: 14
2025-03-13 20:25:33,172:INFO:_display_container: 2
2025-03-13 20:25:33,173:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-13 20:25:33,173:INFO:compare_models() successfully completed......................................
2025-03-13 20:25:33,174:INFO:Initializing evaluate_model()
2025-03-13 20:25:33,174:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-13 20:25:33,193:INFO:Initializing plot_model()
2025-03-13 20:25:33,193:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, system=True)
2025-03-13 20:25:33,193:INFO:Checking exceptions
2025-03-13 20:25:33,240:INFO:Preloading libraries
2025-03-13 20:25:33,511:INFO:Copying training dataset
2025-03-13 20:25:33,511:INFO:Plot type: pipeline
2025-03-13 20:25:33,589:INFO:Visual Rendered Successfully
2025-03-13 20:25:33,667:INFO:plot_model() successfully completed......................................
2025-03-13 20:26:02,611:INFO:Initializing predict_model()
2025-03-13 20:26:02,611:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225922B32E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002259361E9D0>)
2025-03-13 20:26:02,611:INFO:Checking exceptions
2025-03-13 20:26:02,611:INFO:Preloading libraries
2025-03-13 20:26:02,616:INFO:Set up data.
2025-03-13 20:26:02,626:INFO:Set up index.
2025-03-13 20:26:02,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:26:02,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:26:02,967:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-13 20:26:06,393:INFO:Initializing save_model()
2025-03-13 20:26:06,393:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'RHOB', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-13 20:26:06,394:INFO:Adding model into prep_pipe
2025-03-13 20:26:06,722:INFO:best_model.pkl saved in current working directory
2025-03-13 20:26:06,726:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'RHOB', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_f...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-03-13 20:26:06,726:INFO:save_model() successfully completed......................................
2025-03-13 20:45:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 20:45:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 20:45:41,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 20:45:41,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-13 20:45:41,823:INFO:Initializing load_model()
2025-03-13 20:45:41,824:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-03-13 20:46:04,026:INFO:Initializing load_model()
2025-03-13 20:46:04,026:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-03-13 20:46:04,461:INFO:Initializing predict_model()
2025-03-13 20:46:04,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C960FAEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'RHOB', 'GR', 'CALI'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C9CCF0670>)
2025-03-13 20:46:04,461:INFO:Checking exceptions
2025-03-13 20:46:04,461:INFO:Preloading libraries
2025-03-13 20:46:04,461:INFO:Set up data.
2025-03-13 20:46:04,478:INFO:Set up index.
2025-03-14 08:03:43,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 08:03:43,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 08:03:43,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 08:03:43,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 08:03:43,797:INFO:PyCaret ClassificationExperiment
2025-03-14 08:03:43,797:INFO:Logging name: clf-default-name
2025-03-14 08:03:43,797:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-14 08:03:43,797:INFO:version 3.3.2
2025-03-14 08:03:43,797:INFO:Initializing setup()
2025-03-14 08:03:43,797:INFO:self.USI: ee1c
2025-03-14 08:03:43,797:INFO:self._variable_keys: {'gpu_n_jobs_param', 'fix_imbalance', 'X_test', 'fold_shuffle_param', 'y', 'log_plots_param', 'n_jobs_param', 'y_train', 'X_train', 'is_multiclass', 'y_test', 'data', 'USI', 'pipeline', 'idx', 'gpu_param', 'exp_id', 'X', 'fold_groups_param', 'logging_param', 'fold_generator', 'html_param', 'exp_name_log', '_ml_usecase', 'seed', 'target_param', 'memory', '_available_plots'}
2025-03-14 08:03:43,797:INFO:Checking environment
2025-03-14 08:03:43,797:INFO:python_version: 3.9.21
2025-03-14 08:03:43,797:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-14 08:03:43,797:INFO:machine: AMD64
2025-03-14 08:03:43,797:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-14 08:03:43,797:INFO:Memory: svmem(total=25372119040, available=8495063040, percent=66.5, used=16877056000, free=8495063040)
2025-03-14 08:03:43,798:INFO:Physical Core: 10
2025-03-14 08:03:43,798:INFO:Logical Core: 16
2025-03-14 08:03:43,798:INFO:Checking libraries
2025-03-14 08:03:43,798:INFO:System:
2025-03-14 08:03:43,798:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-14 08:03:43,798:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-14 08:03:43,798:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-14 08:03:43,798:INFO:PyCaret required dependencies:
2025-03-14 08:03:43,878:INFO:                 pip: 24.2
2025-03-14 08:03:43,878:INFO:          setuptools: 75.1.0
2025-03-14 08:03:43,878:INFO:             pycaret: 3.3.2
2025-03-14 08:03:43,878:INFO:             IPython: 8.12.0
2025-03-14 08:03:43,878:INFO:          ipywidgets: 8.1.5
2025-03-14 08:03:43,878:INFO:                tqdm: 4.67.1
2025-03-14 08:03:43,879:INFO:               numpy: 1.24.3
2025-03-14 08:03:43,879:INFO:              pandas: 2.1.4
2025-03-14 08:03:43,879:INFO:              jinja2: 3.1.5
2025-03-14 08:03:43,879:INFO:               scipy: 1.11.4
2025-03-14 08:03:43,879:INFO:              joblib: 1.3.2
2025-03-14 08:03:43,879:INFO:             sklearn: 1.4.2
2025-03-14 08:03:43,879:INFO:                pyod: 2.0.3
2025-03-14 08:03:43,879:INFO:            imblearn: 0.12.4
2025-03-14 08:03:43,879:INFO:   category_encoders: 2.6.4
2025-03-14 08:03:43,879:INFO:            lightgbm: 4.6.0
2025-03-14 08:03:43,879:INFO:               numba: 0.60.0
2025-03-14 08:03:43,879:INFO:            requests: 2.32.3
2025-03-14 08:03:43,879:INFO:          matplotlib: 3.7.5
2025-03-14 08:03:43,879:INFO:          scikitplot: 0.3.7
2025-03-14 08:03:43,879:INFO:         yellowbrick: 1.5
2025-03-14 08:03:43,879:INFO:              plotly: 5.24.1
2025-03-14 08:03:43,879:INFO:    plotly-resampler: Not installed
2025-03-14 08:03:43,879:INFO:             kaleido: 0.2.1
2025-03-14 08:03:43,879:INFO:           schemdraw: 0.15
2025-03-14 08:03:43,879:INFO:         statsmodels: 0.14.4
2025-03-14 08:03:43,879:INFO:              sktime: 0.26.0
2025-03-14 08:03:43,879:INFO:               tbats: 1.1.3
2025-03-14 08:03:43,879:INFO:            pmdarima: 2.0.4
2025-03-14 08:03:43,879:INFO:              psutil: 5.9.0
2025-03-14 08:03:43,879:INFO:          markupsafe: 3.0.2
2025-03-14 08:03:43,879:INFO:             pickle5: Not installed
2025-03-14 08:03:43,879:INFO:         cloudpickle: 2.2.1
2025-03-14 08:03:43,879:INFO:         deprecation: 2.1.0
2025-03-14 08:03:43,879:INFO:              xxhash: 3.5.0
2025-03-14 08:03:43,879:INFO:           wurlitzer: Not installed
2025-03-14 08:03:43,879:INFO:PyCaret optional dependencies:
2025-03-14 08:03:43,996:INFO:                shap: Not installed
2025-03-14 08:03:43,996:INFO:           interpret: Not installed
2025-03-14 08:03:43,996:INFO:                umap: Not installed
2025-03-14 08:03:43,996:INFO:     ydata_profiling: Not installed
2025-03-14 08:03:43,996:INFO:  explainerdashboard: Not installed
2025-03-14 08:03:43,996:INFO:             autoviz: Not installed
2025-03-14 08:03:43,996:INFO:           fairlearn: Not installed
2025-03-14 08:03:43,996:INFO:          deepchecks: Not installed
2025-03-14 08:03:43,996:INFO:             xgboost: Not installed
2025-03-14 08:03:43,996:INFO:            catboost: Not installed
2025-03-14 08:03:43,996:INFO:              kmodes: Not installed
2025-03-14 08:03:43,996:INFO:             mlxtend: Not installed
2025-03-14 08:03:43,996:INFO:       statsforecast: Not installed
2025-03-14 08:03:43,996:INFO:        tune_sklearn: Not installed
2025-03-14 08:03:43,996:INFO:                 ray: Not installed
2025-03-14 08:03:43,996:INFO:            hyperopt: Not installed
2025-03-14 08:03:43,996:INFO:              optuna: Not installed
2025-03-14 08:03:43,996:INFO:               skopt: Not installed
2025-03-14 08:03:43,996:INFO:              mlflow: Not installed
2025-03-14 08:03:43,996:INFO:              gradio: Not installed
2025-03-14 08:03:43,996:INFO:             fastapi: Not installed
2025-03-14 08:03:43,996:INFO:             uvicorn: 0.34.0
2025-03-14 08:03:43,996:INFO:              m2cgen: Not installed
2025-03-14 08:03:43,996:INFO:           evidently: Not installed
2025-03-14 08:03:43,996:INFO:               fugue: Not installed
2025-03-14 08:03:43,996:INFO:           streamlit: Not installed
2025-03-14 08:03:43,996:INFO:             prophet: 1.1.6
2025-03-14 08:03:43,996:INFO:None
2025-03-14 08:03:43,996:INFO:Set up data.
2025-03-14 08:03:44,017:INFO:Set up folding strategy.
2025-03-14 08:03:44,017:INFO:Set up train/test split.
2025-03-14 08:03:44,061:INFO:Set up index.
2025-03-14 08:03:44,066:INFO:Assigning column types.
2025-03-14 08:03:44,086:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-14 08:03:44,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,172:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,172:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,189:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-14 08:03:44,217:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 08:03:44,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,281:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-14 08:03:44,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,376:INFO:Preparing preprocessing pipeline...
2025-03-14 08:03:44,381:INFO:Set up label encoding.
2025-03-14 08:03:44,381:INFO:Set up simple imputation.
2025-03-14 08:03:44,381:INFO:Set up feature normalization.
2025-03-14 08:03:44,467:INFO:Finished creating preprocessing pipeline.
2025-03-14 08:03:44,472:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_LOC', 'Y_LOC', 'DEPT', 'NPHI',
                                             'DTC', 'GR', 'CALI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=T...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-14 08:03:44,472:INFO:Creating final display dataframe.
2025-03-14 08:03:44,663:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                         (124347, 8)  
5                                         (124347, 8)  
6                                          (87042, 8)  
7                                          (37305, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               ee1c  
2025-03-14 08:03:44,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-14 08:03:44,762:INFO:setup() successfully completed in 0.97s...............
2025-03-14 08:03:44,762:INFO:Initializing compare_models()
2025-03-14 08:03:44,762:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-14 08:03:44,762:INFO:Checking exceptions
2025-03-14 08:03:44,778:INFO:Preparing display monitor
2025-03-14 08:03:44,801:INFO:Initializing Logistic Regression
2025-03-14 08:03:44,801:INFO:Total runtime is 0.0 minutes
2025-03-14 08:03:44,805:INFO:SubProcess create_model() called ==================================
2025-03-14 08:03:44,805:INFO:Initializing create_model()
2025-03-14 08:03:44,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:03:44,806:INFO:Checking exceptions
2025-03-14 08:03:44,806:INFO:Importing libraries
2025-03-14 08:03:44,806:INFO:Copying training dataset
2025-03-14 08:03:44,836:INFO:Defining folds
2025-03-14 08:03:44,836:INFO:Declaring metric variables
2025-03-14 08:03:44,840:INFO:Importing untrained model
2025-03-14 08:03:44,844:INFO:Logistic Regression Imported successfully
2025-03-14 08:03:44,851:INFO:Starting cross validation
2025-03-14 08:03:44,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:03:59,698:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,698:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,700:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,700:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,704:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,705:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,705:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,708:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:03:59,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,713:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,715:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,715:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,718:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,719:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,719:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,722:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:03:59,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:03:59,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:00,371:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:00,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:00,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:00,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:00,600:INFO:Calculating mean and std
2025-03-14 08:04:00,602:INFO:Creating metrics dataframe
2025-03-14 08:04:00,605:INFO:Uploading results into container
2025-03-14 08:04:00,605:INFO:Uploading model into container now
2025-03-14 08:04:00,606:INFO:_master_model_container: 1
2025-03-14 08:04:00,606:INFO:_display_container: 2
2025-03-14 08:04:00,606:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-14 08:04:00,606:INFO:create_model() successfully completed......................................
2025-03-14 08:04:00,729:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:00,729:INFO:Creating metrics dataframe
2025-03-14 08:04:00,736:INFO:Initializing K Neighbors Classifier
2025-03-14 08:04:00,736:INFO:Total runtime is 0.26557751099268595 minutes
2025-03-14 08:04:00,740:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:00,741:INFO:Initializing create_model()
2025-03-14 08:04:00,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:00,741:INFO:Checking exceptions
2025-03-14 08:04:00,741:INFO:Importing libraries
2025-03-14 08:04:00,741:INFO:Copying training dataset
2025-03-14 08:04:00,783:INFO:Defining folds
2025-03-14 08:04:00,783:INFO:Declaring metric variables
2025-03-14 08:04:00,790:INFO:Importing untrained model
2025-03-14 08:04:00,796:INFO:K Neighbors Classifier Imported successfully
2025-03-14 08:04:00,806:INFO:Starting cross validation
2025-03-14 08:04:00,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:02,220:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,235:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,248:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,268:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,273:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,284:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:02,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,593:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,775:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,790:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:05,901:INFO:Calculating mean and std
2025-03-14 08:04:05,903:INFO:Creating metrics dataframe
2025-03-14 08:04:05,905:INFO:Uploading results into container
2025-03-14 08:04:05,906:INFO:Uploading model into container now
2025-03-14 08:04:05,906:INFO:_master_model_container: 2
2025-03-14 08:04:05,906:INFO:_display_container: 2
2025-03-14 08:04:05,907:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-14 08:04:05,907:INFO:create_model() successfully completed......................................
2025-03-14 08:04:06,002:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:06,002:INFO:Creating metrics dataframe
2025-03-14 08:04:06,010:INFO:Initializing Naive Bayes
2025-03-14 08:04:06,010:INFO:Total runtime is 0.35348798433939616 minutes
2025-03-14 08:04:06,013:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:06,013:INFO:Initializing create_model()
2025-03-14 08:04:06,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:06,015:INFO:Checking exceptions
2025-03-14 08:04:06,015:INFO:Importing libraries
2025-03-14 08:04:06,015:INFO:Copying training dataset
2025-03-14 08:04:06,044:INFO:Defining folds
2025-03-14 08:04:06,044:INFO:Declaring metric variables
2025-03-14 08:04:06,049:INFO:Importing untrained model
2025-03-14 08:04:06,053:INFO:Naive Bayes Imported successfully
2025-03-14 08:04:06,063:INFO:Starting cross validation
2025-03-14 08:04:06,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:06,261:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,272:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,283:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,318:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,339:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,352:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,352:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,364:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,374:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,420:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,421:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,426:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:06,440:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:06,464:INFO:Calculating mean and std
2025-03-14 08:04:06,465:INFO:Creating metrics dataframe
2025-03-14 08:04:06,466:INFO:Uploading results into container
2025-03-14 08:04:06,466:INFO:Uploading model into container now
2025-03-14 08:04:06,467:INFO:_master_model_container: 3
2025-03-14 08:04:06,467:INFO:_display_container: 2
2025-03-14 08:04:06,467:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-14 08:04:06,467:INFO:create_model() successfully completed......................................
2025-03-14 08:04:06,551:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:06,551:INFO:Creating metrics dataframe
2025-03-14 08:04:06,557:INFO:Initializing Decision Tree Classifier
2025-03-14 08:04:06,557:INFO:Total runtime is 0.3626047849655151 minutes
2025-03-14 08:04:06,560:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:06,560:INFO:Initializing create_model()
2025-03-14 08:04:06,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:06,560:INFO:Checking exceptions
2025-03-14 08:04:06,560:INFO:Importing libraries
2025-03-14 08:04:06,560:INFO:Copying training dataset
2025-03-14 08:04:06,596:INFO:Defining folds
2025-03-14 08:04:06,596:INFO:Declaring metric variables
2025-03-14 08:04:06,602:INFO:Importing untrained model
2025-03-14 08:04:06,609:INFO:Decision Tree Classifier Imported successfully
2025-03-14 08:04:06,618:INFO:Starting cross validation
2025-03-14 08:04:06,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:08,202:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,211:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,215:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,219:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,235:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,288:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,288:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,330:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:08,413:INFO:Calculating mean and std
2025-03-14 08:04:08,414:INFO:Creating metrics dataframe
2025-03-14 08:04:08,416:INFO:Uploading results into container
2025-03-14 08:04:08,417:INFO:Uploading model into container now
2025-03-14 08:04:08,417:INFO:_master_model_container: 4
2025-03-14 08:04:08,417:INFO:_display_container: 2
2025-03-14 08:04:08,418:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-14 08:04:08,418:INFO:create_model() successfully completed......................................
2025-03-14 08:04:08,506:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:08,506:INFO:Creating metrics dataframe
2025-03-14 08:04:08,512:INFO:Initializing SVM - Linear Kernel
2025-03-14 08:04:08,512:INFO:Total runtime is 0.395190159479777 minutes
2025-03-14 08:04:08,516:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:08,516:INFO:Initializing create_model()
2025-03-14 08:04:08,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:08,517:INFO:Checking exceptions
2025-03-14 08:04:08,517:INFO:Importing libraries
2025-03-14 08:04:08,517:INFO:Copying training dataset
2025-03-14 08:04:08,543:INFO:Defining folds
2025-03-14 08:04:08,543:INFO:Declaring metric variables
2025-03-14 08:04:08,547:INFO:Importing untrained model
2025-03-14 08:04:08,552:INFO:SVM - Linear Kernel Imported successfully
2025-03-14 08:04:08,561:INFO:Starting cross validation
2025-03-14 08:04:08,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:09,199:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,414:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,419:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,502:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,643:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,688:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,703:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,718:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:09,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:09,775:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:09,796:INFO:Calculating mean and std
2025-03-14 08:04:09,797:INFO:Creating metrics dataframe
2025-03-14 08:04:09,799:INFO:Uploading results into container
2025-03-14 08:04:09,799:INFO:Uploading model into container now
2025-03-14 08:04:09,800:INFO:_master_model_container: 5
2025-03-14 08:04:09,800:INFO:_display_container: 2
2025-03-14 08:04:09,800:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-14 08:04:09,800:INFO:create_model() successfully completed......................................
2025-03-14 08:04:09,883:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:09,883:INFO:Creating metrics dataframe
2025-03-14 08:04:09,889:INFO:Initializing Ridge Classifier
2025-03-14 08:04:09,890:INFO:Total runtime is 0.41815052429835 minutes
2025-03-14 08:04:09,893:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:09,893:INFO:Initializing create_model()
2025-03-14 08:04:09,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:09,893:INFO:Checking exceptions
2025-03-14 08:04:09,893:INFO:Importing libraries
2025-03-14 08:04:09,893:INFO:Copying training dataset
2025-03-14 08:04:09,924:INFO:Defining folds
2025-03-14 08:04:09,925:INFO:Declaring metric variables
2025-03-14 08:04:09,928:INFO:Importing untrained model
2025-03-14 08:04:09,932:INFO:Ridge Classifier Imported successfully
2025-03-14 08:04:09,941:INFO:Starting cross validation
2025-03-14 08:04:09,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:10,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,171:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,175:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,195:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,199:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,200:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,202:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,210:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,220:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,227:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,239:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,246:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,250:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,257:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,262:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,263:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:10,266:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,270:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,273:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:10,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:10,287:INFO:Calculating mean and std
2025-03-14 08:04:10,288:INFO:Creating metrics dataframe
2025-03-14 08:04:10,289:INFO:Uploading results into container
2025-03-14 08:04:10,290:INFO:Uploading model into container now
2025-03-14 08:04:10,291:INFO:_master_model_container: 6
2025-03-14 08:04:10,291:INFO:_display_container: 2
2025-03-14 08:04:10,291:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-14 08:04:10,291:INFO:create_model() successfully completed......................................
2025-03-14 08:04:10,374:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:10,374:INFO:Creating metrics dataframe
2025-03-14 08:04:10,381:INFO:Initializing Random Forest Classifier
2025-03-14 08:04:10,381:INFO:Total runtime is 0.4263361136118571 minutes
2025-03-14 08:04:10,385:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:10,386:INFO:Initializing create_model()
2025-03-14 08:04:10,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:10,386:INFO:Checking exceptions
2025-03-14 08:04:10,386:INFO:Importing libraries
2025-03-14 08:04:10,386:INFO:Copying training dataset
2025-03-14 08:04:10,413:INFO:Defining folds
2025-03-14 08:04:10,413:INFO:Declaring metric variables
2025-03-14 08:04:10,417:INFO:Importing untrained model
2025-03-14 08:04:10,421:INFO:Random Forest Classifier Imported successfully
2025-03-14 08:04:10,428:INFO:Starting cross validation
2025-03-14 08:04:10,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:32,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,208:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,358:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,370:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,373:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,408:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,563:INFO:Calculating mean and std
2025-03-14 08:04:32,564:INFO:Creating metrics dataframe
2025-03-14 08:04:32,566:INFO:Uploading results into container
2025-03-14 08:04:32,567:INFO:Uploading model into container now
2025-03-14 08:04:32,567:INFO:_master_model_container: 7
2025-03-14 08:04:32,567:INFO:_display_container: 2
2025-03-14 08:04:32,568:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-14 08:04:32,568:INFO:create_model() successfully completed......................................
2025-03-14 08:04:32,665:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:32,665:INFO:Creating metrics dataframe
2025-03-14 08:04:32,672:INFO:Initializing Quadratic Discriminant Analysis
2025-03-14 08:04:32,672:INFO:Total runtime is 0.7978466510772705 minutes
2025-03-14 08:04:32,677:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:32,677:INFO:Initializing create_model()
2025-03-14 08:04:32,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:32,677:INFO:Checking exceptions
2025-03-14 08:04:32,677:INFO:Importing libraries
2025-03-14 08:04:32,677:INFO:Copying training dataset
2025-03-14 08:04:32,707:INFO:Defining folds
2025-03-14 08:04:32,707:INFO:Declaring metric variables
2025-03-14 08:04:32,711:INFO:Importing untrained model
2025-03-14 08:04:32,717:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-14 08:04:32,726:INFO:Starting cross validation
2025-03-14 08:04:32,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:32,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,884:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,896:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:32,902:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:32,920:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:32,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:32,971:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,979:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:32,983:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:32,985:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,986:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,994:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:32,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:33,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:33,009:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:33,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:33,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:33,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:33,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,053:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 08:04:33,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,062:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:33,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:33,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:33,108:INFO:Calculating mean and std
2025-03-14 08:04:33,109:INFO:Creating metrics dataframe
2025-03-14 08:04:33,110:INFO:Uploading results into container
2025-03-14 08:04:33,111:INFO:Uploading model into container now
2025-03-14 08:04:33,111:INFO:_master_model_container: 8
2025-03-14 08:04:33,112:INFO:_display_container: 2
2025-03-14 08:04:33,112:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-14 08:04:33,112:INFO:create_model() successfully completed......................................
2025-03-14 08:04:33,199:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:33,199:INFO:Creating metrics dataframe
2025-03-14 08:04:33,206:INFO:Initializing Ada Boost Classifier
2025-03-14 08:04:33,206:INFO:Total runtime is 0.8067535718282064 minutes
2025-03-14 08:04:33,209:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:33,209:INFO:Initializing create_model()
2025-03-14 08:04:33,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:33,209:INFO:Checking exceptions
2025-03-14 08:04:33,209:INFO:Importing libraries
2025-03-14 08:04:33,210:INFO:Copying training dataset
2025-03-14 08:04:33,235:INFO:Defining folds
2025-03-14 08:04:33,235:INFO:Declaring metric variables
2025-03-14 08:04:33,239:INFO:Importing untrained model
2025-03-14 08:04:33,243:INFO:Ada Boost Classifier Imported successfully
2025-03-14 08:04:33,252:INFO:Starting cross validation
2025-03-14 08:04:33,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:04:33,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,426:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,476:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:33,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 08:04:42,290:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,434:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,440:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,446:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,446:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,526:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,551:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,582:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:04:42,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,625:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:04:42,629:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:04:42,650:INFO:Calculating mean and std
2025-03-14 08:04:42,651:INFO:Creating metrics dataframe
2025-03-14 08:04:42,653:INFO:Uploading results into container
2025-03-14 08:04:42,653:INFO:Uploading model into container now
2025-03-14 08:04:42,654:INFO:_master_model_container: 9
2025-03-14 08:04:42,654:INFO:_display_container: 2
2025-03-14 08:04:42,654:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-14 08:04:42,654:INFO:create_model() successfully completed......................................
2025-03-14 08:04:42,734:INFO:SubProcess create_model() end ==================================
2025-03-14 08:04:42,734:INFO:Creating metrics dataframe
2025-03-14 08:04:42,739:INFO:Initializing Gradient Boosting Classifier
2025-03-14 08:04:42,740:INFO:Total runtime is 0.9656576911608379 minutes
2025-03-14 08:04:42,742:INFO:SubProcess create_model() called ==================================
2025-03-14 08:04:42,743:INFO:Initializing create_model()
2025-03-14 08:04:42,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:04:42,743:INFO:Checking exceptions
2025-03-14 08:04:42,743:INFO:Importing libraries
2025-03-14 08:04:42,743:INFO:Copying training dataset
2025-03-14 08:04:42,768:INFO:Defining folds
2025-03-14 08:04:42,768:INFO:Declaring metric variables
2025-03-14 08:04:42,772:INFO:Importing untrained model
2025-03-14 08:04:42,775:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 08:04:42,782:INFO:Starting cross validation
2025-03-14 08:04:42,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:14:07,740:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:07,749:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:07,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:07,793:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:08,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:08,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:08,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:08,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:09,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:09,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:09,645:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:09,662:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,207:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:11,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,251:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:11,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:11,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:12,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:12,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:12,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:12,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:16,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:16,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:16,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:16,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:17,666:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:17,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:17,678:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:17,685:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:19,227:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:19,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:19,238:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:19,247:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:20,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:20,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:20,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:20,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:20,249:INFO:Calculating mean and std
2025-03-14 08:14:20,251:INFO:Creating metrics dataframe
2025-03-14 08:14:20,253:INFO:Uploading results into container
2025-03-14 08:14:20,254:INFO:Uploading model into container now
2025-03-14 08:14:20,254:INFO:_master_model_container: 10
2025-03-14 08:14:20,255:INFO:_display_container: 2
2025-03-14 08:14:20,255:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 08:14:20,256:INFO:create_model() successfully completed......................................
2025-03-14 08:14:20,399:INFO:SubProcess create_model() end ==================================
2025-03-14 08:14:20,399:INFO:Creating metrics dataframe
2025-03-14 08:14:20,409:INFO:Initializing Linear Discriminant Analysis
2025-03-14 08:14:20,410:INFO:Total runtime is 10.593487477302551 minutes
2025-03-14 08:14:20,415:INFO:SubProcess create_model() called ==================================
2025-03-14 08:14:20,416:INFO:Initializing create_model()
2025-03-14 08:14:20,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:14:20,416:INFO:Checking exceptions
2025-03-14 08:14:20,416:INFO:Importing libraries
2025-03-14 08:14:20,417:INFO:Copying training dataset
2025-03-14 08:14:20,499:INFO:Defining folds
2025-03-14 08:14:20,499:INFO:Declaring metric variables
2025-03-14 08:14:20,517:INFO:Importing untrained model
2025-03-14 08:14:20,575:INFO:Linear Discriminant Analysis Imported successfully
2025-03-14 08:14:20,626:INFO:Starting cross validation
2025-03-14 08:14:20,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:14:21,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,230:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,250:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:21,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,361:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:21,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,537:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:21,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 08:14:21,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:21,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:21,625:INFO:Calculating mean and std
2025-03-14 08:14:21,628:INFO:Creating metrics dataframe
2025-03-14 08:14:21,630:INFO:Uploading results into container
2025-03-14 08:14:21,631:INFO:Uploading model into container now
2025-03-14 08:14:21,631:INFO:_master_model_container: 11
2025-03-14 08:14:21,631:INFO:_display_container: 2
2025-03-14 08:14:21,631:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-14 08:14:21,631:INFO:create_model() successfully completed......................................
2025-03-14 08:14:21,775:INFO:SubProcess create_model() end ==================================
2025-03-14 08:14:21,775:INFO:Creating metrics dataframe
2025-03-14 08:14:21,788:INFO:Initializing Extra Trees Classifier
2025-03-14 08:14:21,788:INFO:Total runtime is 10.616448084513346 minutes
2025-03-14 08:14:21,794:INFO:SubProcess create_model() called ==================================
2025-03-14 08:14:21,795:INFO:Initializing create_model()
2025-03-14 08:14:21,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:14:21,795:INFO:Checking exceptions
2025-03-14 08:14:21,795:INFO:Importing libraries
2025-03-14 08:14:21,795:INFO:Copying training dataset
2025-03-14 08:14:21,879:INFO:Defining folds
2025-03-14 08:14:21,879:INFO:Declaring metric variables
2025-03-14 08:14:21,886:INFO:Importing untrained model
2025-03-14 08:14:21,897:INFO:Extra Trees Classifier Imported successfully
2025-03-14 08:14:21,914:INFO:Starting cross validation
2025-03-14 08:14:21,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:14:31,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,015:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,026:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:31,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,977:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:33,992:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,015:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,043:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:34,070:INFO:Calculating mean and std
2025-03-14 08:14:34,071:INFO:Creating metrics dataframe
2025-03-14 08:14:34,073:INFO:Uploading results into container
2025-03-14 08:14:34,075:INFO:Uploading model into container now
2025-03-14 08:14:34,075:INFO:_master_model_container: 12
2025-03-14 08:14:34,075:INFO:_display_container: 2
2025-03-14 08:14:34,076:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-14 08:14:34,076:INFO:create_model() successfully completed......................................
2025-03-14 08:14:34,186:INFO:SubProcess create_model() end ==================================
2025-03-14 08:14:34,186:INFO:Creating metrics dataframe
2025-03-14 08:14:34,194:INFO:Initializing Light Gradient Boosting Machine
2025-03-14 08:14:34,194:INFO:Total runtime is 10.82321436802546 minutes
2025-03-14 08:14:34,197:INFO:SubProcess create_model() called ==================================
2025-03-14 08:14:34,197:INFO:Initializing create_model()
2025-03-14 08:14:34,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:14:34,198:INFO:Checking exceptions
2025-03-14 08:14:34,198:INFO:Importing libraries
2025-03-14 08:14:34,198:INFO:Copying training dataset
2025-03-14 08:14:34,227:INFO:Defining folds
2025-03-14 08:14:34,227:INFO:Declaring metric variables
2025-03-14 08:14:34,233:INFO:Importing untrained model
2025-03-14 08:14:34,237:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-14 08:14:34,245:INFO:Starting cross validation
2025-03-14 08:14:34,247:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:14:50,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,373:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,894:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:50,910:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,637:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,652:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,662:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:51,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,003:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,208:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:52,225:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,366:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:53,369:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:53,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,625:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,631:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,639:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,668:INFO:Calculating mean and std
2025-03-14 08:14:53,669:INFO:Creating metrics dataframe
2025-03-14 08:14:53,672:INFO:Uploading results into container
2025-03-14 08:14:53,673:INFO:Uploading model into container now
2025-03-14 08:14:53,673:INFO:_master_model_container: 13
2025-03-14 08:14:53,673:INFO:_display_container: 2
2025-03-14 08:14:53,674:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 08:14:53,674:INFO:create_model() successfully completed......................................
2025-03-14 08:14:53,765:INFO:SubProcess create_model() end ==================================
2025-03-14 08:14:53,765:INFO:Creating metrics dataframe
2025-03-14 08:14:53,773:INFO:Initializing Dummy Classifier
2025-03-14 08:14:53,773:INFO:Total runtime is 11.149530661106109 minutes
2025-03-14 08:14:53,778:INFO:SubProcess create_model() called ==================================
2025-03-14 08:14:53,778:INFO:Initializing create_model()
2025-03-14 08:14:53,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C83AEAF7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:14:53,778:INFO:Checking exceptions
2025-03-14 08:14:53,778:INFO:Importing libraries
2025-03-14 08:14:53,778:INFO:Copying training dataset
2025-03-14 08:14:53,806:INFO:Defining folds
2025-03-14 08:14:53,806:INFO:Declaring metric variables
2025-03-14 08:14:53,810:INFO:Importing untrained model
2025-03-14 08:14:53,814:INFO:Dummy Classifier Imported successfully
2025-03-14 08:14:53,825:INFO:Starting cross validation
2025-03-14 08:14:53,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 08:14:53,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:53,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,986:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,989:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:53,993:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:53,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,043:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,053:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,061:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,110:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,121:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,140:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 08:14:54,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 08:14:54,168:INFO:Calculating mean and std
2025-03-14 08:14:54,169:INFO:Creating metrics dataframe
2025-03-14 08:14:54,171:INFO:Uploading results into container
2025-03-14 08:14:54,171:INFO:Uploading model into container now
2025-03-14 08:14:54,172:INFO:_master_model_container: 14
2025-03-14 08:14:54,172:INFO:_display_container: 2
2025-03-14 08:14:54,172:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-14 08:14:54,172:INFO:create_model() successfully completed......................................
2025-03-14 08:14:54,254:INFO:SubProcess create_model() end ==================================
2025-03-14 08:14:54,254:INFO:Creating metrics dataframe
2025-03-14 08:14:54,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-14 08:14:54,272:INFO:Initializing create_model()
2025-03-14 08:14:54,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 08:14:54,273:INFO:Checking exceptions
2025-03-14 08:14:54,274:INFO:Importing libraries
2025-03-14 08:14:54,274:INFO:Copying training dataset
2025-03-14 08:14:54,303:INFO:Defining folds
2025-03-14 08:14:54,303:INFO:Declaring metric variables
2025-03-14 08:14:54,303:INFO:Importing untrained model
2025-03-14 08:14:54,303:INFO:Declaring custom model
2025-03-14 08:14:54,304:INFO:Extra Trees Classifier Imported successfully
2025-03-14 08:14:54,305:INFO:Cross validation set to False
2025-03-14 08:14:54,305:INFO:Fitting Model
2025-03-14 08:14:55,043:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-14 08:14:55,043:INFO:create_model() successfully completed......................................
2025-03-14 08:14:55,155:INFO:_master_model_container: 14
2025-03-14 08:14:55,155:INFO:_display_container: 2
2025-03-14 08:14:55,155:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-14 08:14:55,156:INFO:compare_models() successfully completed......................................
2025-03-14 08:14:55,156:INFO:Initializing evaluate_model()
2025-03-14 08:14:55,156:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-14 08:14:55,191:INFO:Initializing plot_model()
2025-03-14 08:14:55,191:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, system=True)
2025-03-14 08:14:55,191:INFO:Checking exceptions
2025-03-14 08:14:55,237:INFO:Preloading libraries
2025-03-14 08:14:55,524:INFO:Copying training dataset
2025-03-14 08:14:55,524:INFO:Plot type: pipeline
2025-03-14 08:14:55,676:INFO:Visual Rendered Successfully
2025-03-14 08:14:55,764:INFO:plot_model() successfully completed......................................
2025-03-14 08:14:58,035:WARNING:C:\Users\Asus\AppData\Local\Temp\ipykernel_23296\4226393491.py:814: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  import pkg_resources

2025-03-14 08:15:52,880:INFO:Initializing plot_model()
2025-03-14 08:15:52,880:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C872D7F7C0>, system=True)
2025-03-14 08:15:52,880:INFO:Checking exceptions
2025-03-14 08:15:52,933:INFO:Preloading libraries
2025-03-14 08:15:53,175:INFO:Copying training dataset
2025-03-14 08:15:53,175:INFO:Plot type: feature
2025-03-14 08:15:53,175:WARNING:No coef_ found. Trying feature_importances_
2025-03-14 08:15:53,339:INFO:Visual Rendered Successfully
2025-03-14 08:15:53,423:INFO:plot_model() successfully completed......................................
2025-03-15 12:04:31,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 12:04:31,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 12:04:31,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 12:04:31,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 12:04:31,855:INFO:PyCaret ClassificationExperiment
2025-03-15 12:04:31,856:INFO:Logging name: clf-default-name
2025-03-15 12:04:31,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-15 12:04:31,856:INFO:version 3.3.2
2025-03-15 12:04:31,856:INFO:Initializing setup()
2025-03-15 12:04:31,856:INFO:self.USI: e659
2025-03-15 12:04:31,856:INFO:self._variable_keys: {'X_test', 'fold_generator', 'seed', 'y', 'fold_shuffle_param', 'memory', 'X_train', 'fold_groups_param', 'html_param', 'y_train', 'y_test', 'log_plots_param', 'USI', 'data', 'gpu_param', 'exp_id', '_available_plots', 'gpu_n_jobs_param', '_ml_usecase', 'pipeline', 'idx', 'is_multiclass', 'exp_name_log', 'fix_imbalance', 'X', 'logging_param', 'n_jobs_param', 'target_param'}
2025-03-15 12:04:31,856:INFO:Checking environment
2025-03-15 12:04:31,856:INFO:python_version: 3.9.21
2025-03-15 12:04:31,856:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-15 12:04:31,856:INFO:machine: AMD64
2025-03-15 12:04:31,856:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-15 12:04:31,856:INFO:Memory: svmem(total=25372119040, available=7588257792, percent=70.1, used=17783861248, free=7588257792)
2025-03-15 12:04:31,856:INFO:Physical Core: 10
2025-03-15 12:04:31,856:INFO:Logical Core: 16
2025-03-15 12:04:31,856:INFO:Checking libraries
2025-03-15 12:04:31,856:INFO:System:
2025-03-15 12:04:31,856:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-15 12:04:31,856:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-15 12:04:31,856:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-15 12:04:31,856:INFO:PyCaret required dependencies:
2025-03-15 12:04:31,926:INFO:                 pip: 24.2
2025-03-15 12:04:31,926:INFO:          setuptools: 75.1.0
2025-03-15 12:04:31,926:INFO:             pycaret: 3.3.2
2025-03-15 12:04:31,926:INFO:             IPython: 8.12.0
2025-03-15 12:04:31,926:INFO:          ipywidgets: 8.1.5
2025-03-15 12:04:31,926:INFO:                tqdm: 4.67.1
2025-03-15 12:04:31,926:INFO:               numpy: 1.24.3
2025-03-15 12:04:31,926:INFO:              pandas: 2.1.4
2025-03-15 12:04:31,926:INFO:              jinja2: 3.1.5
2025-03-15 12:04:31,926:INFO:               scipy: 1.11.4
2025-03-15 12:04:31,926:INFO:              joblib: 1.3.2
2025-03-15 12:04:31,926:INFO:             sklearn: 1.4.2
2025-03-15 12:04:31,926:INFO:                pyod: 2.0.3
2025-03-15 12:04:31,926:INFO:            imblearn: 0.12.4
2025-03-15 12:04:31,926:INFO:   category_encoders: 2.6.4
2025-03-15 12:04:31,926:INFO:            lightgbm: 4.6.0
2025-03-15 12:04:31,926:INFO:               numba: 0.60.0
2025-03-15 12:04:31,926:INFO:            requests: 2.32.3
2025-03-15 12:04:31,926:INFO:          matplotlib: 3.7.5
2025-03-15 12:04:31,926:INFO:          scikitplot: 0.3.7
2025-03-15 12:04:31,926:INFO:         yellowbrick: 1.5
2025-03-15 12:04:31,926:INFO:              plotly: 5.24.1
2025-03-15 12:04:31,926:INFO:    plotly-resampler: Not installed
2025-03-15 12:04:31,926:INFO:             kaleido: 0.2.1
2025-03-15 12:04:31,926:INFO:           schemdraw: 0.15
2025-03-15 12:04:31,926:INFO:         statsmodels: 0.14.4
2025-03-15 12:04:31,926:INFO:              sktime: 0.26.0
2025-03-15 12:04:31,926:INFO:               tbats: 1.1.3
2025-03-15 12:04:31,926:INFO:            pmdarima: 2.0.4
2025-03-15 12:04:31,926:INFO:              psutil: 5.9.0
2025-03-15 12:04:31,926:INFO:          markupsafe: 3.0.2
2025-03-15 12:04:31,926:INFO:             pickle5: Not installed
2025-03-15 12:04:31,926:INFO:         cloudpickle: 2.2.1
2025-03-15 12:04:31,926:INFO:         deprecation: 2.1.0
2025-03-15 12:04:31,926:INFO:              xxhash: 3.5.0
2025-03-15 12:04:31,926:INFO:           wurlitzer: Not installed
2025-03-15 12:04:31,926:INFO:PyCaret optional dependencies:
2025-03-15 12:04:32,081:INFO:                shap: Not installed
2025-03-15 12:04:32,081:INFO:           interpret: Not installed
2025-03-15 12:04:32,081:INFO:                umap: Not installed
2025-03-15 12:04:32,081:INFO:     ydata_profiling: Not installed
2025-03-15 12:04:32,081:INFO:  explainerdashboard: Not installed
2025-03-15 12:04:32,081:INFO:             autoviz: Not installed
2025-03-15 12:04:32,081:INFO:           fairlearn: Not installed
2025-03-15 12:04:32,082:INFO:          deepchecks: Not installed
2025-03-15 12:04:32,082:INFO:             xgboost: 2.1.4
2025-03-15 12:04:32,082:INFO:            catboost: Not installed
2025-03-15 12:04:32,082:INFO:              kmodes: Not installed
2025-03-15 12:04:32,082:INFO:             mlxtend: Not installed
2025-03-15 12:04:32,082:INFO:       statsforecast: Not installed
2025-03-15 12:04:32,082:INFO:        tune_sklearn: Not installed
2025-03-15 12:04:32,082:INFO:                 ray: Not installed
2025-03-15 12:04:32,082:INFO:            hyperopt: Not installed
2025-03-15 12:04:32,082:INFO:              optuna: Not installed
2025-03-15 12:04:32,082:INFO:               skopt: Not installed
2025-03-15 12:04:32,082:INFO:              mlflow: Not installed
2025-03-15 12:04:32,082:INFO:              gradio: Not installed
2025-03-15 12:04:32,082:INFO:             fastapi: Not installed
2025-03-15 12:04:32,082:INFO:             uvicorn: 0.34.0
2025-03-15 12:04:32,082:INFO:              m2cgen: Not installed
2025-03-15 12:04:32,082:INFO:           evidently: Not installed
2025-03-15 12:04:32,082:INFO:               fugue: Not installed
2025-03-15 12:04:32,082:INFO:           streamlit: Not installed
2025-03-15 12:04:32,082:INFO:             prophet: 1.1.6
2025-03-15 12:04:32,082:INFO:None
2025-03-15 12:04:32,082:INFO:Set up data.
2025-03-15 12:04:32,108:INFO:Set up folding strategy.
2025-03-15 12:04:32,108:INFO:Set up train/test split.
2025-03-15 12:04:32,159:INFO:Set up index.
2025-03-15 12:04:32,162:INFO:Assigning column types.
2025-03-15 12:04:32,192:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-15 12:04:32,221:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,249:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,277:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,292:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,294:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-15 12:04:32,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,336:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,365:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 12:04:32,381:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,382:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-15 12:04:32,426:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,472:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,479:INFO:Preparing preprocessing pipeline...
2025-03-15 12:04:32,484:INFO:Set up label encoding.
2025-03-15 12:04:32,484:INFO:Set up simple imputation.
2025-03-15 12:04:32,484:INFO:Set up feature normalization.
2025-03-15 12:04:32,581:INFO:Finished creating preprocessing pipeline.
2025-03-15 12:04:32,585:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'PHI_S', 'NDPD'],
                                    transforme...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-15 12:04:32,585:INFO:Creating final display dataframe.
2025-03-15 12:04:32,824:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                        (124347, 14)  
5                                        (124347, 14)  
6                                         (87042, 14)  
7                                         (37305, 14)  
8                                                  13  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               e659  
2025-03-15 12:04:32,870:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,921:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 12:04:32,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 12:04:32,924:INFO:setup() successfully completed in 1.07s...............
2025-03-15 12:04:32,924:INFO:Initializing compare_models()
2025-03-15 12:04:32,924:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-15 12:04:32,924:INFO:Checking exceptions
2025-03-15 12:04:32,949:INFO:Preparing display monitor
2025-03-15 12:04:32,974:INFO:Initializing Logistic Regression
2025-03-15 12:04:32,974:INFO:Total runtime is 0.0 minutes
2025-03-15 12:04:32,979:INFO:SubProcess create_model() called ==================================
2025-03-15 12:04:32,979:INFO:Initializing create_model()
2025-03-15 12:04:32,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:04:32,979:INFO:Checking exceptions
2025-03-15 12:04:32,979:INFO:Importing libraries
2025-03-15 12:04:32,980:INFO:Copying training dataset
2025-03-15 12:04:33,020:INFO:Defining folds
2025-03-15 12:04:33,021:INFO:Declaring metric variables
2025-03-15 12:04:33,025:INFO:Importing untrained model
2025-03-15 12:04:33,028:INFO:Logistic Regression Imported successfully
2025-03-15 12:04:33,039:INFO:Starting cross validation
2025-03-15 12:04:33,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:04:47,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:47,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:47,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,369:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:47,375:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:47,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:47,606:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,615:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:47,625:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:47,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:47,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:47,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:48,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:48,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,689:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:48,693:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:48,694:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,702:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,708:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,709:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:48,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,805:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:48,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,818:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:48,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:48,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:48,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:48,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:49,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:04:49,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:49,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:49,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:04:49,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:49,521:INFO:Calculating mean and std
2025-03-15 12:04:49,522:INFO:Creating metrics dataframe
2025-03-15 12:04:49,524:INFO:Uploading results into container
2025-03-15 12:04:49,524:INFO:Uploading model into container now
2025-03-15 12:04:49,524:INFO:_master_model_container: 1
2025-03-15 12:04:49,524:INFO:_display_container: 2
2025-03-15 12:04:49,524:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-15 12:04:49,524:INFO:create_model() successfully completed......................................
2025-03-15 12:04:49,606:INFO:SubProcess create_model() end ==================================
2025-03-15 12:04:49,606:INFO:Creating metrics dataframe
2025-03-15 12:04:49,613:INFO:Initializing K Neighbors Classifier
2025-03-15 12:04:49,613:INFO:Total runtime is 0.2773154854774475 minutes
2025-03-15 12:04:49,616:INFO:SubProcess create_model() called ==================================
2025-03-15 12:04:49,616:INFO:Initializing create_model()
2025-03-15 12:04:49,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:04:49,617:INFO:Checking exceptions
2025-03-15 12:04:49,617:INFO:Importing libraries
2025-03-15 12:04:49,617:INFO:Copying training dataset
2025-03-15 12:04:49,658:INFO:Defining folds
2025-03-15 12:04:49,658:INFO:Declaring metric variables
2025-03-15 12:04:49,663:INFO:Importing untrained model
2025-03-15 12:04:49,668:INFO:K Neighbors Classifier Imported successfully
2025-03-15 12:04:49,675:INFO:Starting cross validation
2025-03-15 12:04:49,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:04:51,301:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,325:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,620:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:51,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,293:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,318:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,590:INFO:Calculating mean and std
2025-03-15 12:04:55,591:INFO:Creating metrics dataframe
2025-03-15 12:04:55,593:INFO:Uploading results into container
2025-03-15 12:04:55,593:INFO:Uploading model into container now
2025-03-15 12:04:55,594:INFO:_master_model_container: 2
2025-03-15 12:04:55,594:INFO:_display_container: 2
2025-03-15 12:04:55,594:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-15 12:04:55,594:INFO:create_model() successfully completed......................................
2025-03-15 12:04:55,677:INFO:SubProcess create_model() end ==================================
2025-03-15 12:04:55,677:INFO:Creating metrics dataframe
2025-03-15 12:04:55,684:INFO:Initializing Naive Bayes
2025-03-15 12:04:55,684:INFO:Total runtime is 0.37848593791325885 minutes
2025-03-15 12:04:55,686:INFO:SubProcess create_model() called ==================================
2025-03-15 12:04:55,687:INFO:Initializing create_model()
2025-03-15 12:04:55,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:04:55,687:INFO:Checking exceptions
2025-03-15 12:04:55,687:INFO:Importing libraries
2025-03-15 12:04:55,687:INFO:Copying training dataset
2025-03-15 12:04:55,726:INFO:Defining folds
2025-03-15 12:04:55,726:INFO:Declaring metric variables
2025-03-15 12:04:55,730:INFO:Importing untrained model
2025-03-15 12:04:55,734:INFO:Naive Bayes Imported successfully
2025-03-15 12:04:55,742:INFO:Starting cross validation
2025-03-15 12:04:55,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:04:55,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:55,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,028:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,190:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,204:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,218:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:56,261:INFO:Calculating mean and std
2025-03-15 12:04:56,262:INFO:Creating metrics dataframe
2025-03-15 12:04:56,264:INFO:Uploading results into container
2025-03-15 12:04:56,264:INFO:Uploading model into container now
2025-03-15 12:04:56,265:INFO:_master_model_container: 3
2025-03-15 12:04:56,265:INFO:_display_container: 2
2025-03-15 12:04:56,265:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-15 12:04:56,265:INFO:create_model() successfully completed......................................
2025-03-15 12:04:56,349:INFO:SubProcess create_model() end ==================================
2025-03-15 12:04:56,349:INFO:Creating metrics dataframe
2025-03-15 12:04:56,355:INFO:Initializing Decision Tree Classifier
2025-03-15 12:04:56,355:INFO:Total runtime is 0.38967333237330115 minutes
2025-03-15 12:04:56,358:INFO:SubProcess create_model() called ==================================
2025-03-15 12:04:56,358:INFO:Initializing create_model()
2025-03-15 12:04:56,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:04:56,359:INFO:Checking exceptions
2025-03-15 12:04:56,359:INFO:Importing libraries
2025-03-15 12:04:56,359:INFO:Copying training dataset
2025-03-15 12:04:56,398:INFO:Defining folds
2025-03-15 12:04:56,398:INFO:Declaring metric variables
2025-03-15 12:04:56,403:INFO:Importing untrained model
2025-03-15 12:04:56,406:INFO:Decision Tree Classifier Imported successfully
2025-03-15 12:04:56,416:INFO:Starting cross validation
2025-03-15 12:04:56,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:04:59,646:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,724:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,727:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,732:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,911:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,917:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,952:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:04:59,983:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:00,006:INFO:Calculating mean and std
2025-03-15 12:05:00,007:INFO:Creating metrics dataframe
2025-03-15 12:05:00,009:INFO:Uploading results into container
2025-03-15 12:05:00,009:INFO:Uploading model into container now
2025-03-15 12:05:00,009:INFO:_master_model_container: 4
2025-03-15 12:05:00,010:INFO:_display_container: 2
2025-03-15 12:05:00,010:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-15 12:05:00,010:INFO:create_model() successfully completed......................................
2025-03-15 12:05:00,088:INFO:SubProcess create_model() end ==================================
2025-03-15 12:05:00,090:INFO:Creating metrics dataframe
2025-03-15 12:05:00,095:INFO:Initializing SVM - Linear Kernel
2025-03-15 12:05:00,095:INFO:Total runtime is 0.452008048693339 minutes
2025-03-15 12:05:00,098:INFO:SubProcess create_model() called ==================================
2025-03-15 12:05:00,098:INFO:Initializing create_model()
2025-03-15 12:05:00,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:05:00,098:INFO:Checking exceptions
2025-03-15 12:05:00,098:INFO:Importing libraries
2025-03-15 12:05:00,098:INFO:Copying training dataset
2025-03-15 12:05:00,141:INFO:Defining folds
2025-03-15 12:05:00,141:INFO:Declaring metric variables
2025-03-15 12:05:00,144:INFO:Importing untrained model
2025-03-15 12:05:00,150:INFO:SVM - Linear Kernel Imported successfully
2025-03-15 12:05:00,157:INFO:Starting cross validation
2025-03-15 12:05:00,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:05:01,008:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,063:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,367:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,423:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,427:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,813:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,817:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,823:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,826:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,927:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,947:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:01,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:01,961:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:01,976:INFO:Calculating mean and std
2025-03-15 12:05:01,977:INFO:Creating metrics dataframe
2025-03-15 12:05:01,979:INFO:Uploading results into container
2025-03-15 12:05:01,980:INFO:Uploading model into container now
2025-03-15 12:05:01,980:INFO:_master_model_container: 5
2025-03-15 12:05:01,980:INFO:_display_container: 2
2025-03-15 12:05:01,981:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-15 12:05:01,981:INFO:create_model() successfully completed......................................
2025-03-15 12:05:02,067:INFO:SubProcess create_model() end ==================================
2025-03-15 12:05:02,067:INFO:Creating metrics dataframe
2025-03-15 12:05:02,073:INFO:Initializing Ridge Classifier
2025-03-15 12:05:02,074:INFO:Total runtime is 0.4849922180175781 minutes
2025-03-15 12:05:02,077:INFO:SubProcess create_model() called ==================================
2025-03-15 12:05:02,077:INFO:Initializing create_model()
2025-03-15 12:05:02,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:05:02,078:INFO:Checking exceptions
2025-03-15 12:05:02,078:INFO:Importing libraries
2025-03-15 12:05:02,078:INFO:Copying training dataset
2025-03-15 12:05:02,122:INFO:Defining folds
2025-03-15 12:05:02,123:INFO:Declaring metric variables
2025-03-15 12:05:02,126:INFO:Importing untrained model
2025-03-15 12:05:02,130:INFO:Ridge Classifier Imported successfully
2025-03-15 12:05:02,138:INFO:Starting cross validation
2025-03-15 12:05:02,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:05:02,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,364:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,373:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,422:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,497:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,528:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,573:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,588:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:02,601:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,609:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:05:02,611:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:02,631:INFO:Calculating mean and std
2025-03-15 12:05:02,631:INFO:Creating metrics dataframe
2025-03-15 12:05:02,634:INFO:Uploading results into container
2025-03-15 12:05:02,635:INFO:Uploading model into container now
2025-03-15 12:05:02,635:INFO:_master_model_container: 6
2025-03-15 12:05:02,635:INFO:_display_container: 2
2025-03-15 12:05:02,635:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-15 12:05:02,635:INFO:create_model() successfully completed......................................
2025-03-15 12:05:02,710:INFO:SubProcess create_model() end ==================================
2025-03-15 12:05:02,710:INFO:Creating metrics dataframe
2025-03-15 12:05:02,716:INFO:Initializing Random Forest Classifier
2025-03-15 12:05:02,716:INFO:Total runtime is 0.4956917842229207 minutes
2025-03-15 12:05:02,718:INFO:SubProcess create_model() called ==================================
2025-03-15 12:05:02,719:INFO:Initializing create_model()
2025-03-15 12:05:02,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:05:02,719:INFO:Checking exceptions
2025-03-15 12:05:02,719:INFO:Importing libraries
2025-03-15 12:05:02,719:INFO:Copying training dataset
2025-03-15 12:05:02,761:INFO:Defining folds
2025-03-15 12:05:02,761:INFO:Declaring metric variables
2025-03-15 12:05:02,765:INFO:Importing untrained model
2025-03-15 12:05:02,769:INFO:Random Forest Classifier Imported successfully
2025-03-15 12:05:02,775:INFO:Starting cross validation
2025-03-15 12:05:02,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:05:42,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,053:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,220:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,232:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,241:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,243:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,251:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,257:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,269:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,284:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,344:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,353:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,372:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:42,566:INFO:Calculating mean and std
2025-03-15 12:05:42,567:INFO:Creating metrics dataframe
2025-03-15 12:05:42,570:INFO:Uploading results into container
2025-03-15 12:05:42,570:INFO:Uploading model into container now
2025-03-15 12:05:42,570:INFO:_master_model_container: 7
2025-03-15 12:05:42,571:INFO:_display_container: 2
2025-03-15 12:05:42,571:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-15 12:05:42,571:INFO:create_model() successfully completed......................................
2025-03-15 12:05:42,663:INFO:SubProcess create_model() end ==================================
2025-03-15 12:05:42,663:INFO:Creating metrics dataframe
2025-03-15 12:05:42,670:INFO:Initializing Quadratic Discriminant Analysis
2025-03-15 12:05:42,671:INFO:Total runtime is 1.1616084218025207 minutes
2025-03-15 12:05:42,674:INFO:SubProcess create_model() called ==================================
2025-03-15 12:05:42,674:INFO:Initializing create_model()
2025-03-15 12:05:42,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:05:42,674:INFO:Checking exceptions
2025-03-15 12:05:42,674:INFO:Importing libraries
2025-03-15 12:05:42,674:INFO:Copying training dataset
2025-03-15 12:05:42,720:INFO:Defining folds
2025-03-15 12:05:42,720:INFO:Declaring metric variables
2025-03-15 12:05:42,726:INFO:Importing untrained model
2025-03-15 12:05:42,730:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-15 12:05:42,738:INFO:Starting cross validation
2025-03-15 12:05:42,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:05:42,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:42,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,034:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,051:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,063:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,158:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,169:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,170:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,209:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,242:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,250:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 12:05:43,252:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,259:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,261:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,264:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,288:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:05:43,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:05:43,328:INFO:Calculating mean and std
2025-03-15 12:05:43,329:INFO:Creating metrics dataframe
2025-03-15 12:05:43,331:INFO:Uploading results into container
2025-03-15 12:05:43,331:INFO:Uploading model into container now
2025-03-15 12:05:43,332:INFO:_master_model_container: 8
2025-03-15 12:05:43,332:INFO:_display_container: 2
2025-03-15 12:05:43,332:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-15 12:05:43,332:INFO:create_model() successfully completed......................................
2025-03-15 12:05:43,416:INFO:SubProcess create_model() end ==================================
2025-03-15 12:05:43,416:INFO:Creating metrics dataframe
2025-03-15 12:05:43,421:INFO:Initializing Ada Boost Classifier
2025-03-15 12:05:43,422:INFO:Total runtime is 1.1741333842277526 minutes
2025-03-15 12:05:43,424:INFO:SubProcess create_model() called ==================================
2025-03-15 12:05:43,424:INFO:Initializing create_model()
2025-03-15 12:05:43,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:05:43,426:INFO:Checking exceptions
2025-03-15 12:05:43,426:INFO:Importing libraries
2025-03-15 12:05:43,426:INFO:Copying training dataset
2025-03-15 12:05:43,469:INFO:Defining folds
2025-03-15 12:05:43,470:INFO:Declaring metric variables
2025-03-15 12:05:43,475:INFO:Importing untrained model
2025-03-15 12:05:43,479:INFO:Ada Boost Classifier Imported successfully
2025-03-15 12:05:43,487:INFO:Starting cross validation
2025-03-15 12:05:43,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:05:43,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,800:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:05:43,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 12:06:00,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:00,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:00,812:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:00,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:00,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,060:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,121:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,140:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,158:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,168:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,168:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,232:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,243:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,319:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:06:01,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:06:01,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:06:01,427:INFO:Calculating mean and std
2025-03-15 12:06:01,428:INFO:Creating metrics dataframe
2025-03-15 12:06:01,429:INFO:Uploading results into container
2025-03-15 12:06:01,429:INFO:Uploading model into container now
2025-03-15 12:06:01,429:INFO:_master_model_container: 9
2025-03-15 12:06:01,429:INFO:_display_container: 2
2025-03-15 12:06:01,431:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-15 12:06:01,431:INFO:create_model() successfully completed......................................
2025-03-15 12:06:01,509:INFO:SubProcess create_model() end ==================================
2025-03-15 12:06:01,509:INFO:Creating metrics dataframe
2025-03-15 12:06:01,514:INFO:Initializing Gradient Boosting Classifier
2025-03-15 12:06:01,514:INFO:Total runtime is 1.4756579478581746 minutes
2025-03-15 12:06:01,517:INFO:SubProcess create_model() called ==================================
2025-03-15 12:06:01,517:INFO:Initializing create_model()
2025-03-15 12:06:01,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:06:01,517:INFO:Checking exceptions
2025-03-15 12:06:01,517:INFO:Importing libraries
2025-03-15 12:06:01,517:INFO:Copying training dataset
2025-03-15 12:06:01,557:INFO:Defining folds
2025-03-15 12:06:01,557:INFO:Declaring metric variables
2025-03-15 12:06:01,562:INFO:Importing untrained model
2025-03-15 12:06:01,567:INFO:Gradient Boosting Classifier Imported successfully
2025-03-15 12:06:01,578:INFO:Starting cross validation
2025-03-15 12:06:01,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:19:23,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:23,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:23,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:23,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:23,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:23,761:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:23,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:23,776:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,817:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:24,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,881:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:24,886:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,892:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,899:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:24,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:24,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:25,606:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,611:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:25,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:25,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:26,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:26,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:26,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:26,760:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:28,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:28,179:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:28,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:28,191:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,133:INFO:Calculating mean and std
2025-03-15 12:19:29,134:INFO:Creating metrics dataframe
2025-03-15 12:19:29,135:INFO:Uploading results into container
2025-03-15 12:19:29,136:INFO:Uploading model into container now
2025-03-15 12:19:29,136:INFO:_master_model_container: 10
2025-03-15 12:19:29,136:INFO:_display_container: 2
2025-03-15 12:19:29,137:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-15 12:19:29,137:INFO:create_model() successfully completed......................................
2025-03-15 12:19:29,224:INFO:SubProcess create_model() end ==================================
2025-03-15 12:19:29,224:INFO:Creating metrics dataframe
2025-03-15 12:19:29,231:INFO:Initializing Linear Discriminant Analysis
2025-03-15 12:19:29,231:INFO:Total runtime is 14.937616233030955 minutes
2025-03-15 12:19:29,235:INFO:SubProcess create_model() called ==================================
2025-03-15 12:19:29,235:INFO:Initializing create_model()
2025-03-15 12:19:29,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:19:29,235:INFO:Checking exceptions
2025-03-15 12:19:29,235:INFO:Importing libraries
2025-03-15 12:19:29,235:INFO:Copying training dataset
2025-03-15 12:19:29,273:INFO:Defining folds
2025-03-15 12:19:29,273:INFO:Declaring metric variables
2025-03-15 12:19:29,276:INFO:Importing untrained model
2025-03-15 12:19:29,281:INFO:Linear Discriminant Analysis Imported successfully
2025-03-15 12:19:29,288:INFO:Starting cross validation
2025-03-15 12:19:29,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:19:29,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,664:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,670:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,763:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,790:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,885:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,891:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,896:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,911:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,922:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,927:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,943:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,958:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:29,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,985:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 12:19:29,988:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:29,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:19:30,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:30,023:INFO:Calculating mean and std
2025-03-15 12:19:30,023:INFO:Creating metrics dataframe
2025-03-15 12:19:30,025:INFO:Uploading results into container
2025-03-15 12:19:30,026:INFO:Uploading model into container now
2025-03-15 12:19:30,026:INFO:_master_model_container: 11
2025-03-15 12:19:30,026:INFO:_display_container: 2
2025-03-15 12:19:30,027:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-15 12:19:30,027:INFO:create_model() successfully completed......................................
2025-03-15 12:19:30,109:INFO:SubProcess create_model() end ==================================
2025-03-15 12:19:30,109:INFO:Creating metrics dataframe
2025-03-15 12:19:30,116:INFO:Initializing Extra Trees Classifier
2025-03-15 12:19:30,116:INFO:Total runtime is 14.952355790138244 minutes
2025-03-15 12:19:30,119:INFO:SubProcess create_model() called ==================================
2025-03-15 12:19:30,119:INFO:Initializing create_model()
2025-03-15 12:19:30,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:19:30,119:INFO:Checking exceptions
2025-03-15 12:19:30,119:INFO:Importing libraries
2025-03-15 12:19:30,119:INFO:Copying training dataset
2025-03-15 12:19:30,164:INFO:Defining folds
2025-03-15 12:19:30,164:INFO:Declaring metric variables
2025-03-15 12:19:30,169:INFO:Importing untrained model
2025-03-15 12:19:30,175:INFO:Extra Trees Classifier Imported successfully
2025-03-15 12:19:30,183:INFO:Starting cross validation
2025-03-15 12:19:30,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:19:35,361:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:35,609:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,710:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,730:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:40,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:41,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:41,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:41,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:41,132:INFO:Calculating mean and std
2025-03-15 12:19:41,133:INFO:Creating metrics dataframe
2025-03-15 12:19:41,134:INFO:Uploading results into container
2025-03-15 12:19:41,135:INFO:Uploading model into container now
2025-03-15 12:19:41,136:INFO:_master_model_container: 12
2025-03-15 12:19:41,136:INFO:_display_container: 2
2025-03-15 12:19:41,136:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 12:19:41,136:INFO:create_model() successfully completed......................................
2025-03-15 12:19:41,233:INFO:SubProcess create_model() end ==================================
2025-03-15 12:19:41,233:INFO:Creating metrics dataframe
2025-03-15 12:19:41,239:INFO:Initializing Extreme Gradient Boosting
2025-03-15 12:19:41,239:INFO:Total runtime is 15.13774911959966 minutes
2025-03-15 12:19:41,244:INFO:SubProcess create_model() called ==================================
2025-03-15 12:19:41,244:INFO:Initializing create_model()
2025-03-15 12:19:41,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:19:41,244:INFO:Checking exceptions
2025-03-15 12:19:41,244:INFO:Importing libraries
2025-03-15 12:19:41,244:INFO:Copying training dataset
2025-03-15 12:19:41,295:INFO:Defining folds
2025-03-15 12:19:41,295:INFO:Declaring metric variables
2025-03-15 12:19:41,300:INFO:Importing untrained model
2025-03-15 12:19:41,306:INFO:Extreme Gradient Boosting Imported successfully
2025-03-15 12:19:41,316:INFO:Starting cross validation
2025-03-15 12:19:41,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:19:58,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,631:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,722:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,734:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,820:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,826:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:19:58,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,901:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,913:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:00,933:INFO:Calculating mean and std
2025-03-15 12:20:00,934:INFO:Creating metrics dataframe
2025-03-15 12:20:00,936:INFO:Uploading results into container
2025-03-15 12:20:00,936:INFO:Uploading model into container now
2025-03-15 12:20:00,936:INFO:_master_model_container: 13
2025-03-15 12:20:00,936:INFO:_display_container: 2
2025-03-15 12:20:00,937:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-15 12:20:00,937:INFO:create_model() successfully completed......................................
2025-03-15 12:20:01,022:INFO:SubProcess create_model() end ==================================
2025-03-15 12:20:01,022:INFO:Creating metrics dataframe
2025-03-15 12:20:01,029:INFO:Initializing Light Gradient Boosting Machine
2025-03-15 12:20:01,029:INFO:Total runtime is 15.467574826876321 minutes
2025-03-15 12:20:01,032:INFO:SubProcess create_model() called ==================================
2025-03-15 12:20:01,032:INFO:Initializing create_model()
2025-03-15 12:20:01,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:20:01,032:INFO:Checking exceptions
2025-03-15 12:20:01,032:INFO:Importing libraries
2025-03-15 12:20:01,032:INFO:Copying training dataset
2025-03-15 12:20:01,074:INFO:Defining folds
2025-03-15 12:20:01,075:INFO:Declaring metric variables
2025-03-15 12:20:01,079:INFO:Importing untrained model
2025-03-15 12:20:01,082:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-15 12:20:01,089:INFO:Starting cross validation
2025-03-15 12:20:01,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:20:24,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:24,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:24,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:24,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:24,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:24,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:24,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:25,889:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,060:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,636:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,645:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:26,654:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:27,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:27,207:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:27,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,168:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,664:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,680:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:28,705:INFO:Calculating mean and std
2025-03-15 12:20:28,706:INFO:Creating metrics dataframe
2025-03-15 12:20:28,709:INFO:Uploading results into container
2025-03-15 12:20:28,710:INFO:Uploading model into container now
2025-03-15 12:20:28,710:INFO:_master_model_container: 14
2025-03-15 12:20:28,711:INFO:_display_container: 2
2025-03-15 12:20:28,712:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-15 12:20:28,712:INFO:create_model() successfully completed......................................
2025-03-15 12:20:28,802:INFO:SubProcess create_model() end ==================================
2025-03-15 12:20:28,802:INFO:Creating metrics dataframe
2025-03-15 12:20:28,809:INFO:Initializing Dummy Classifier
2025-03-15 12:20:28,809:INFO:Total runtime is 15.930575450261433 minutes
2025-03-15 12:20:28,813:INFO:SubProcess create_model() called ==================================
2025-03-15 12:20:28,813:INFO:Initializing create_model()
2025-03-15 12:20:28,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026F48D698B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:20:28,813:INFO:Checking exceptions
2025-03-15 12:20:28,813:INFO:Importing libraries
2025-03-15 12:20:28,813:INFO:Copying training dataset
2025-03-15 12:20:28,857:INFO:Defining folds
2025-03-15 12:20:28,857:INFO:Declaring metric variables
2025-03-15 12:20:28,863:INFO:Importing untrained model
2025-03-15 12:20:28,868:INFO:Dummy Classifier Imported successfully
2025-03-15 12:20:28,878:INFO:Starting cross validation
2025-03-15 12:20:28,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 12:20:29,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,137:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,155:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,164:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,169:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,215:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,225:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,235:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,238:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,287:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,325:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 12:20:29,356:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:20:29,378:INFO:Calculating mean and std
2025-03-15 12:20:29,379:INFO:Creating metrics dataframe
2025-03-15 12:20:29,380:INFO:Uploading results into container
2025-03-15 12:20:29,381:INFO:Uploading model into container now
2025-03-15 12:20:29,381:INFO:_master_model_container: 15
2025-03-15 12:20:29,381:INFO:_display_container: 2
2025-03-15 12:20:29,381:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-15 12:20:29,381:INFO:create_model() successfully completed......................................
2025-03-15 12:20:29,469:INFO:SubProcess create_model() end ==================================
2025-03-15 12:20:29,469:INFO:Creating metrics dataframe
2025-03-15 12:20:29,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-15 12:20:29,488:INFO:Initializing create_model()
2025-03-15 12:20:29,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 12:20:29,489:INFO:Checking exceptions
2025-03-15 12:20:29,490:INFO:Importing libraries
2025-03-15 12:20:29,490:INFO:Copying training dataset
2025-03-15 12:20:29,533:INFO:Defining folds
2025-03-15 12:20:29,533:INFO:Declaring metric variables
2025-03-15 12:20:29,533:INFO:Importing untrained model
2025-03-15 12:20:29,533:INFO:Declaring custom model
2025-03-15 12:20:29,533:INFO:Extra Trees Classifier Imported successfully
2025-03-15 12:20:29,534:INFO:Cross validation set to False
2025-03-15 12:20:29,534:INFO:Fitting Model
2025-03-15 12:20:30,539:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 12:20:30,539:INFO:create_model() successfully completed......................................
2025-03-15 12:20:30,649:INFO:_master_model_container: 15
2025-03-15 12:20:30,649:INFO:_display_container: 2
2025-03-15 12:20:30,650:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 12:20:30,650:INFO:compare_models() successfully completed......................................
2025-03-15 12:20:30,650:INFO:Initializing evaluate_model()
2025-03-15 12:20:30,650:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-15 12:20:30,683:INFO:Initializing plot_model()
2025-03-15 12:20:30,683:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, system=True)
2025-03-15 12:20:30,683:INFO:Checking exceptions
2025-03-15 12:20:30,723:INFO:Preloading libraries
2025-03-15 12:20:31,073:INFO:Copying training dataset
2025-03-15 12:20:31,073:INFO:Plot type: pipeline
2025-03-15 12:20:31,229:INFO:Visual Rendered Successfully
2025-03-15 12:20:31,321:INFO:plot_model() successfully completed......................................
2025-03-15 12:40:16,478:INFO:Initializing plot_model()
2025-03-15 12:40:16,478:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, system=True)
2025-03-15 12:40:16,478:INFO:Checking exceptions
2025-03-15 12:40:21,226:INFO:Initializing plot_model()
2025-03-15 12:40:21,227:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, system=True)
2025-03-15 12:40:21,227:INFO:Checking exceptions
2025-03-15 12:40:21,263:INFO:Preloading libraries
2025-03-15 12:40:21,446:INFO:Copying training dataset
2025-03-15 12:40:21,446:INFO:Plot type: feature
2025-03-15 12:40:21,447:WARNING:No coef_ found. Trying feature_importances_
2025-03-15 12:40:21,609:INFO:Visual Rendered Successfully
2025-03-15 12:40:21,694:INFO:plot_model() successfully completed......................................
2025-03-15 12:43:05,927:INFO:Initializing predict_model()
2025-03-15 12:43:05,927:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026F513C5EE0>)
2025-03-15 12:43:05,927:INFO:Checking exceptions
2025-03-15 12:43:05,927:INFO:Preloading libraries
2025-03-15 12:43:05,931:INFO:Set up data.
2025-03-15 12:43:05,955:INFO:Set up index.
2025-03-15 12:43:06,763:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:43:06,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:43:06,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 12:45:31,240:INFO:Initializing save_model()
2025-03-15 12:45:31,241:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), model_name=best_model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'PHI_S', 'NDPD'],
                                    transforme...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-15 12:45:31,241:INFO:Adding model into prep_pipe
2025-03-15 12:45:31,499:INFO:best_model_1.pkl saved in current working directory
2025-03-15 12:45:31,502:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'PHI_S', 'NDPD'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-03-15 12:45:31,502:INFO:save_model() successfully completed......................................
2025-03-15 12:46:16,503:INFO:Initializing plot_model()
2025-03-15 12:46:16,503:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026F1A756490>, system=True)
2025-03-15 12:46:16,503:INFO:Checking exceptions
2025-03-15 12:46:16,540:INFO:Preloading libraries
2025-03-15 12:46:16,748:INFO:Copying training dataset
2025-03-15 12:46:16,748:INFO:Plot type: auc
2025-03-15 12:46:16,951:INFO:Fitting Model
2025-03-15 12:46:16,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-03-15 12:46:16,958:INFO:Scoring test/hold-out set
2025-03-15 12:46:17,449:INFO:Visual Rendered Successfully
2025-03-15 12:46:17,566:INFO:plot_model() successfully completed......................................
2025-03-15 15:04:19,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:04:19,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:04:19,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:04:19,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:04:20,185:INFO:Initializing load_model()
2025-03-15 15:04:20,185:INFO:load_model(model_name=best_model_1, platform=None, authentication=None, verbose=True)
2025-03-15 15:04:20,687:INFO:Initializing predict_model()
2025-03-15 15:04:20,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015923D20F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'PHI_S', 'NDPD'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015A1C4985E0>)
2025-03-15 15:04:20,687:INFO:Checking exceptions
2025-03-15 15:04:20,687:INFO:Preloading libraries
2025-03-15 15:04:20,688:INFO:Set up data.
2025-03-15 15:04:20,707:INFO:Set up index.
2025-03-15 15:05:30,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:05:30,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:05:30,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:05:30,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 15:05:30,622:INFO:PyCaret ClassificationExperiment
2025-03-15 15:05:30,622:INFO:Logging name: clf-default-name
2025-03-15 15:05:30,623:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-15 15:05:30,623:INFO:version 3.3.2
2025-03-15 15:05:30,623:INFO:Initializing setup()
2025-03-15 15:05:30,623:INFO:self.USI: db90
2025-03-15 15:05:30,623:INFO:self._variable_keys: {'idx', 'log_plots_param', 'memory', 'fold_generator', 'is_multiclass', 'data', 'fold_shuffle_param', 'gpu_n_jobs_param', 'pipeline', 'X_train', 'y_train', 'y_test', 'X_test', '_available_plots', 'n_jobs_param', 'gpu_param', 'USI', 'target_param', 'exp_id', 'seed', 'exp_name_log', 'fix_imbalance', 'y', '_ml_usecase', 'X', 'logging_param', 'html_param', 'fold_groups_param'}
2025-03-15 15:05:30,623:INFO:Checking environment
2025-03-15 15:05:30,623:INFO:python_version: 3.9.21
2025-03-15 15:05:30,623:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-15 15:05:30,623:INFO:machine: AMD64
2025-03-15 15:05:30,623:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-15 15:05:30,623:INFO:Memory: svmem(total=25372119040, available=9603575808, percent=62.1, used=15768543232, free=9603575808)
2025-03-15 15:05:30,623:INFO:Physical Core: 10
2025-03-15 15:05:30,623:INFO:Logical Core: 16
2025-03-15 15:05:30,623:INFO:Checking libraries
2025-03-15 15:05:30,623:INFO:System:
2025-03-15 15:05:30,623:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-15 15:05:30,623:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-03-15 15:05:30,623:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-15 15:05:30,623:INFO:PyCaret required dependencies:
2025-03-15 15:05:30,664:INFO:                 pip: 24.2
2025-03-15 15:05:30,664:INFO:          setuptools: 75.1.0
2025-03-15 15:05:30,664:INFO:             pycaret: 3.3.2
2025-03-15 15:05:30,664:INFO:             IPython: 8.12.0
2025-03-15 15:05:30,664:INFO:          ipywidgets: 8.1.5
2025-03-15 15:05:30,664:INFO:                tqdm: 4.67.1
2025-03-15 15:05:30,664:INFO:               numpy: 1.24.3
2025-03-15 15:05:30,664:INFO:              pandas: 2.1.4
2025-03-15 15:05:30,664:INFO:              jinja2: 3.1.5
2025-03-15 15:05:30,664:INFO:               scipy: 1.11.4
2025-03-15 15:05:30,664:INFO:              joblib: 1.3.2
2025-03-15 15:05:30,664:INFO:             sklearn: 1.4.2
2025-03-15 15:05:30,664:INFO:                pyod: 2.0.3
2025-03-15 15:05:30,664:INFO:            imblearn: 0.12.4
2025-03-15 15:05:30,664:INFO:   category_encoders: 2.6.4
2025-03-15 15:05:30,664:INFO:            lightgbm: 4.6.0
2025-03-15 15:05:30,664:INFO:               numba: 0.60.0
2025-03-15 15:05:30,664:INFO:            requests: 2.32.3
2025-03-15 15:05:30,664:INFO:          matplotlib: 3.7.5
2025-03-15 15:05:30,664:INFO:          scikitplot: 0.3.7
2025-03-15 15:05:30,664:INFO:         yellowbrick: 1.5
2025-03-15 15:05:30,664:INFO:              plotly: 5.24.1
2025-03-15 15:05:30,664:INFO:    plotly-resampler: Not installed
2025-03-15 15:05:30,664:INFO:             kaleido: 0.2.1
2025-03-15 15:05:30,664:INFO:           schemdraw: 0.15
2025-03-15 15:05:30,664:INFO:         statsmodels: 0.14.4
2025-03-15 15:05:30,664:INFO:              sktime: 0.26.0
2025-03-15 15:05:30,664:INFO:               tbats: 1.1.3
2025-03-15 15:05:30,664:INFO:            pmdarima: 2.0.4
2025-03-15 15:05:30,664:INFO:              psutil: 5.9.0
2025-03-15 15:05:30,664:INFO:          markupsafe: 3.0.2
2025-03-15 15:05:30,664:INFO:             pickle5: Not installed
2025-03-15 15:05:30,664:INFO:         cloudpickle: 2.2.1
2025-03-15 15:05:30,664:INFO:         deprecation: 2.1.0
2025-03-15 15:05:30,664:INFO:              xxhash: 3.5.0
2025-03-15 15:05:30,664:INFO:           wurlitzer: Not installed
2025-03-15 15:05:30,664:INFO:PyCaret optional dependencies:
2025-03-15 15:05:30,852:INFO:                shap: Not installed
2025-03-15 15:05:30,852:INFO:           interpret: Not installed
2025-03-15 15:05:30,852:INFO:                umap: Not installed
2025-03-15 15:05:30,852:INFO:     ydata_profiling: Not installed
2025-03-15 15:05:30,852:INFO:  explainerdashboard: Not installed
2025-03-15 15:05:30,852:INFO:             autoviz: Not installed
2025-03-15 15:05:30,852:INFO:           fairlearn: Not installed
2025-03-15 15:05:30,853:INFO:          deepchecks: Not installed
2025-03-15 15:05:30,853:INFO:             xgboost: 2.1.4
2025-03-15 15:05:30,853:INFO:            catboost: Not installed
2025-03-15 15:05:30,853:INFO:              kmodes: Not installed
2025-03-15 15:05:30,853:INFO:             mlxtend: Not installed
2025-03-15 15:05:30,853:INFO:       statsforecast: Not installed
2025-03-15 15:05:30,853:INFO:        tune_sklearn: Not installed
2025-03-15 15:05:30,853:INFO:                 ray: Not installed
2025-03-15 15:05:30,853:INFO:            hyperopt: Not installed
2025-03-15 15:05:30,853:INFO:              optuna: Not installed
2025-03-15 15:05:30,853:INFO:               skopt: Not installed
2025-03-15 15:05:30,853:INFO:              mlflow: Not installed
2025-03-15 15:05:30,853:INFO:              gradio: Not installed
2025-03-15 15:05:30,853:INFO:             fastapi: Not installed
2025-03-15 15:05:30,853:INFO:             uvicorn: 0.34.0
2025-03-15 15:05:30,853:INFO:              m2cgen: Not installed
2025-03-15 15:05:30,853:INFO:           evidently: Not installed
2025-03-15 15:05:30,853:INFO:               fugue: Not installed
2025-03-15 15:05:30,853:INFO:           streamlit: Not installed
2025-03-15 15:05:30,853:INFO:             prophet: 1.1.6
2025-03-15 15:05:30,853:INFO:None
2025-03-15 15:05:30,853:INFO:Set up data.
2025-03-15 15:05:30,876:INFO:Set up folding strategy.
2025-03-15 15:05:30,876:INFO:Set up train/test split.
2025-03-15 15:05:30,923:INFO:Set up index.
2025-03-15 15:05:30,927:INFO:Assigning column types.
2025-03-15 15:05:30,955:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-15 15:05:30,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 15:05:30,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 15:05:31,010:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 15:05:31,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 15:05:31,055:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,057:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-15 15:05:31,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 15:05:31,099:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 15:05:31,144:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,145:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-15 15:05:31,186:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,228:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,233:INFO:Preparing preprocessing pipeline...
2025-03-15 15:05:31,238:INFO:Set up label encoding.
2025-03-15 15:05:31,238:INFO:Set up simple imputation.
2025-03-15 15:05:31,238:INFO:Set up feature normalization.
2025-03-15 15:05:31,324:INFO:Finished creating preprocessing pipeline.
2025-03-15 15:05:31,327:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'NDPD'],
                                    transformer=Simple...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-03-15 15:05:31,327:INFO:Creating final display dataframe.
2025-03-15 15:05:31,550:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                  42  
1                                      Lithology_code  
2                                          Multiclass  
3   30000.0: 0, 65000.0: 1, 65030.0: 2, 70000.0: 3...  
4                                        (124347, 13)  
5                                        (124347, 13)  
6                                         (87042, 13)  
7                                         (37305, 13)  
8                                                  12  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               db90  
2025-03-15 15:05:31,605:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,652:INFO:Soft dependency imported: xgboost: 2.1.4
2025-03-15 15:05:31,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-15 15:05:31,654:INFO:setup() successfully completed in 1.04s...............
2025-03-15 15:05:31,655:INFO:Initializing compare_models()
2025-03-15 15:05:31,655:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-15 15:05:31,655:INFO:Checking exceptions
2025-03-15 15:05:31,677:INFO:Preparing display monitor
2025-03-15 15:05:31,698:INFO:Initializing Logistic Regression
2025-03-15 15:05:31,698:INFO:Total runtime is 0.0 minutes
2025-03-15 15:05:31,701:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:31,702:INFO:Initializing create_model()
2025-03-15 15:05:31,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:31,702:INFO:Checking exceptions
2025-03-15 15:05:31,702:INFO:Importing libraries
2025-03-15 15:05:31,702:INFO:Copying training dataset
2025-03-15 15:05:31,744:INFO:Defining folds
2025-03-15 15:05:31,744:INFO:Declaring metric variables
2025-03-15 15:05:31,747:INFO:Importing untrained model
2025-03-15 15:05:31,751:INFO:Logistic Regression Imported successfully
2025-03-15 15:05:31,759:INFO:Starting cross validation
2025-03-15 15:05:31,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:43,687:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:43,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:43,704:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:43,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:43,711:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:45,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:45,171:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:45,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:45,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:45,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,026:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,028:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,042:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,055:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,060:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,629:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,729:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,729:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,734:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,740:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,742:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,845:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:46,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:46,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:46,885:INFO:Calculating mean and std
2025-03-15 15:05:46,886:INFO:Creating metrics dataframe
2025-03-15 15:05:46,888:INFO:Uploading results into container
2025-03-15 15:05:46,889:INFO:Uploading model into container now
2025-03-15 15:05:46,889:INFO:_master_model_container: 1
2025-03-15 15:05:46,889:INFO:_display_container: 2
2025-03-15 15:05:46,889:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-15 15:05:46,889:INFO:create_model() successfully completed......................................
2025-03-15 15:05:46,953:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:46,953:INFO:Creating metrics dataframe
2025-03-15 15:05:46,958:INFO:Initializing K Neighbors Classifier
2025-03-15 15:05:46,958:INFO:Total runtime is 0.2543382167816162 minutes
2025-03-15 15:05:46,962:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:46,962:INFO:Initializing create_model()
2025-03-15 15:05:46,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:46,962:INFO:Checking exceptions
2025-03-15 15:05:46,962:INFO:Importing libraries
2025-03-15 15:05:46,962:INFO:Copying training dataset
2025-03-15 15:05:47,003:INFO:Defining folds
2025-03-15 15:05:47,003:INFO:Declaring metric variables
2025-03-15 15:05:47,007:INFO:Importing untrained model
2025-03-15 15:05:47,011:INFO:K Neighbors Classifier Imported successfully
2025-03-15 15:05:47,018:INFO:Starting cross validation
2025-03-15 15:05:47,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:48,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,817:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:48,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,684:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,693:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,733:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,735:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,749:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:51,994:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,002:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,009:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,051:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,061:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,088:INFO:Calculating mean and std
2025-03-15 15:05:52,089:INFO:Creating metrics dataframe
2025-03-15 15:05:52,093:INFO:Uploading results into container
2025-03-15 15:05:52,094:INFO:Uploading model into container now
2025-03-15 15:05:52,094:INFO:_master_model_container: 2
2025-03-15 15:05:52,094:INFO:_display_container: 2
2025-03-15 15:05:52,095:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-15 15:05:52,095:INFO:create_model() successfully completed......................................
2025-03-15 15:05:52,163:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:52,163:INFO:Creating metrics dataframe
2025-03-15 15:05:52,168:INFO:Initializing Naive Bayes
2025-03-15 15:05:52,168:INFO:Total runtime is 0.34117165406545 minutes
2025-03-15 15:05:52,171:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:52,172:INFO:Initializing create_model()
2025-03-15 15:05:52,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:52,172:INFO:Checking exceptions
2025-03-15 15:05:52,172:INFO:Importing libraries
2025-03-15 15:05:52,172:INFO:Copying training dataset
2025-03-15 15:05:52,208:INFO:Defining folds
2025-03-15 15:05:52,208:INFO:Declaring metric variables
2025-03-15 15:05:52,213:INFO:Importing untrained model
2025-03-15 15:05:52,216:INFO:Naive Bayes Imported successfully
2025-03-15 15:05:52,222:INFO:Starting cross validation
2025-03-15 15:05:52,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:52,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,420:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,563:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,582:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,593:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,601:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,611:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,629:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:52,651:INFO:Calculating mean and std
2025-03-15 15:05:52,652:INFO:Creating metrics dataframe
2025-03-15 15:05:52,653:INFO:Uploading results into container
2025-03-15 15:05:52,654:INFO:Uploading model into container now
2025-03-15 15:05:52,654:INFO:_master_model_container: 3
2025-03-15 15:05:52,654:INFO:_display_container: 2
2025-03-15 15:05:52,654:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-15 15:05:52,654:INFO:create_model() successfully completed......................................
2025-03-15 15:05:52,712:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:52,712:INFO:Creating metrics dataframe
2025-03-15 15:05:52,717:INFO:Initializing Decision Tree Classifier
2025-03-15 15:05:52,717:INFO:Total runtime is 0.3503204345703125 minutes
2025-03-15 15:05:52,719:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:52,719:INFO:Initializing create_model()
2025-03-15 15:05:52,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:52,719:INFO:Checking exceptions
2025-03-15 15:05:52,719:INFO:Importing libraries
2025-03-15 15:05:52,719:INFO:Copying training dataset
2025-03-15 15:05:52,771:INFO:Defining folds
2025-03-15 15:05:52,771:INFO:Declaring metric variables
2025-03-15 15:05:52,776:INFO:Importing untrained model
2025-03-15 15:05:52,782:INFO:Decision Tree Classifier Imported successfully
2025-03-15 15:05:52,792:INFO:Starting cross validation
2025-03-15 15:05:52,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:55,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,776:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,869:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,873:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,900:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,959:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,979:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,986:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:55,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,033:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:56,062:INFO:Calculating mean and std
2025-03-15 15:05:56,063:INFO:Creating metrics dataframe
2025-03-15 15:05:56,065:INFO:Uploading results into container
2025-03-15 15:05:56,065:INFO:Uploading model into container now
2025-03-15 15:05:56,066:INFO:_master_model_container: 4
2025-03-15 15:05:56,066:INFO:_display_container: 2
2025-03-15 15:05:56,066:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-15 15:05:56,066:INFO:create_model() successfully completed......................................
2025-03-15 15:05:56,123:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:56,123:INFO:Creating metrics dataframe
2025-03-15 15:05:56,127:INFO:Initializing SVM - Linear Kernel
2025-03-15 15:05:56,127:INFO:Total runtime is 0.40715313752492266 minutes
2025-03-15 15:05:56,131:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:56,131:INFO:Initializing create_model()
2025-03-15 15:05:56,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:56,131:INFO:Checking exceptions
2025-03-15 15:05:56,131:INFO:Importing libraries
2025-03-15 15:05:56,131:INFO:Copying training dataset
2025-03-15 15:05:56,167:INFO:Defining folds
2025-03-15 15:05:56,167:INFO:Declaring metric variables
2025-03-15 15:05:56,170:INFO:Importing untrained model
2025-03-15 15:05:56,175:INFO:SVM - Linear Kernel Imported successfully
2025-03-15 15:05:56,182:INFO:Starting cross validation
2025-03-15 15:05:56,183:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:57,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,189:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,218:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,232:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,476:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,568:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:57,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,620:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,651:INFO:Calculating mean and std
2025-03-15 15:05:57,652:INFO:Creating metrics dataframe
2025-03-15 15:05:57,653:INFO:Uploading results into container
2025-03-15 15:05:57,655:INFO:Uploading model into container now
2025-03-15 15:05:57,655:INFO:_master_model_container: 5
2025-03-15 15:05:57,655:INFO:_display_container: 2
2025-03-15 15:05:57,655:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-15 15:05:57,655:INFO:create_model() successfully completed......................................
2025-03-15 15:05:57,713:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:57,713:INFO:Creating metrics dataframe
2025-03-15 15:05:57,718:INFO:Initializing Ridge Classifier
2025-03-15 15:05:57,718:INFO:Total runtime is 0.43367492755254106 minutes
2025-03-15 15:05:57,721:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:57,722:INFO:Initializing create_model()
2025-03-15 15:05:57,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:57,722:INFO:Checking exceptions
2025-03-15 15:05:57,722:INFO:Importing libraries
2025-03-15 15:05:57,722:INFO:Copying training dataset
2025-03-15 15:05:57,755:INFO:Defining folds
2025-03-15 15:05:57,755:INFO:Declaring metric variables
2025-03-15 15:05:57,759:INFO:Importing untrained model
2025-03-15 15:05:57,765:INFO:Ridge Classifier Imported successfully
2025-03-15 15:05:57,780:INFO:Starting cross validation
2025-03-15 15:05:57,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:05:57,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,988:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,993:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:57,993:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:57,997:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,001:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,004:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,012:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,025:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,037:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,061:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,088:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,096:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,121:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,170:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,184:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,189:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,195:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,196:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:05:58,198:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,204:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,207:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:05:58,209:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:05:58,231:INFO:Calculating mean and std
2025-03-15 15:05:58,232:INFO:Creating metrics dataframe
2025-03-15 15:05:58,233:INFO:Uploading results into container
2025-03-15 15:05:58,234:INFO:Uploading model into container now
2025-03-15 15:05:58,234:INFO:_master_model_container: 6
2025-03-15 15:05:58,234:INFO:_display_container: 2
2025-03-15 15:05:58,235:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-15 15:05:58,235:INFO:create_model() successfully completed......................................
2025-03-15 15:05:58,293:INFO:SubProcess create_model() end ==================================
2025-03-15 15:05:58,293:INFO:Creating metrics dataframe
2025-03-15 15:05:58,298:INFO:Initializing Random Forest Classifier
2025-03-15 15:05:58,298:INFO:Total runtime is 0.44333790143330887 minutes
2025-03-15 15:05:58,301:INFO:SubProcess create_model() called ==================================
2025-03-15 15:05:58,301:INFO:Initializing create_model()
2025-03-15 15:05:58,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:05:58,301:INFO:Checking exceptions
2025-03-15 15:05:58,301:INFO:Importing libraries
2025-03-15 15:05:58,301:INFO:Copying training dataset
2025-03-15 15:05:58,334:INFO:Defining folds
2025-03-15 15:05:58,334:INFO:Declaring metric variables
2025-03-15 15:05:58,338:INFO:Importing untrained model
2025-03-15 15:05:58,343:INFO:Random Forest Classifier Imported successfully
2025-03-15 15:05:58,350:INFO:Starting cross validation
2025-03-15 15:05:58,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:06:35,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,543:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,563:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,793:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,823:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,869:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:35,993:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,004:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,127:INFO:Calculating mean and std
2025-03-15 15:06:36,128:INFO:Creating metrics dataframe
2025-03-15 15:06:36,131:INFO:Uploading results into container
2025-03-15 15:06:36,131:INFO:Uploading model into container now
2025-03-15 15:06:36,131:INFO:_master_model_container: 7
2025-03-15 15:06:36,132:INFO:_display_container: 2
2025-03-15 15:06:36,132:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-15 15:06:36,132:INFO:create_model() successfully completed......................................
2025-03-15 15:06:36,198:INFO:SubProcess create_model() end ==================================
2025-03-15 15:06:36,199:INFO:Creating metrics dataframe
2025-03-15 15:06:36,203:INFO:Initializing Quadratic Discriminant Analysis
2025-03-15 15:06:36,204:INFO:Total runtime is 1.0751040895779926 minutes
2025-03-15 15:06:36,206:INFO:SubProcess create_model() called ==================================
2025-03-15 15:06:36,206:INFO:Initializing create_model()
2025-03-15 15:06:36,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:06:36,207:INFO:Checking exceptions
2025-03-15 15:06:36,207:INFO:Importing libraries
2025-03-15 15:06:36,207:INFO:Copying training dataset
2025-03-15 15:06:36,243:INFO:Defining folds
2025-03-15 15:06:36,244:INFO:Declaring metric variables
2025-03-15 15:06:36,248:INFO:Importing untrained model
2025-03-15 15:06:36,253:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-15 15:06:36,259:INFO:Starting cross validation
2025-03-15 15:06:36,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:06:36,408:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,497:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,539:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,583:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,606:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 15:06:36,627:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,633:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,636:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,640:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,658:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:36,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,680:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,682:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,685:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,688:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:36,703:INFO:Calculating mean and std
2025-03-15 15:06:36,704:INFO:Creating metrics dataframe
2025-03-15 15:06:36,706:INFO:Uploading results into container
2025-03-15 15:06:36,706:INFO:Uploading model into container now
2025-03-15 15:06:36,707:INFO:_master_model_container: 8
2025-03-15 15:06:36,707:INFO:_display_container: 2
2025-03-15 15:06:36,707:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-15 15:06:36,707:INFO:create_model() successfully completed......................................
2025-03-15 15:06:36,764:INFO:SubProcess create_model() end ==================================
2025-03-15 15:06:36,765:INFO:Creating metrics dataframe
2025-03-15 15:06:36,769:INFO:Initializing Ada Boost Classifier
2025-03-15 15:06:36,769:INFO:Total runtime is 1.0845184564590453 minutes
2025-03-15 15:06:36,772:INFO:SubProcess create_model() called ==================================
2025-03-15 15:06:36,773:INFO:Initializing create_model()
2025-03-15 15:06:36,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:06:36,773:INFO:Checking exceptions
2025-03-15 15:06:36,773:INFO:Importing libraries
2025-03-15 15:06:36,773:INFO:Copying training dataset
2025-03-15 15:06:36,814:INFO:Defining folds
2025-03-15 15:06:36,814:INFO:Declaring metric variables
2025-03-15 15:06:36,818:INFO:Importing untrained model
2025-03-15 15:06:36,823:INFO:Ada Boost Classifier Imported successfully
2025-03-15 15:06:36,836:INFO:Starting cross validation
2025-03-15 15:06:36,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:06:36,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:36,996:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,018:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,183:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:37,214:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 15:06:53,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,227:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,236:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,242:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,246:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,260:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,265:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,273:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,279:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,279:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,293:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,329:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,401:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,408:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,426:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,429:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:06:53,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:06:53,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:06:53,556:INFO:Calculating mean and std
2025-03-15 15:06:53,557:INFO:Creating metrics dataframe
2025-03-15 15:06:53,559:INFO:Uploading results into container
2025-03-15 15:06:53,559:INFO:Uploading model into container now
2025-03-15 15:06:53,559:INFO:_master_model_container: 9
2025-03-15 15:06:53,560:INFO:_display_container: 2
2025-03-15 15:06:53,560:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-15 15:06:53,560:INFO:create_model() successfully completed......................................
2025-03-15 15:06:53,623:INFO:SubProcess create_model() end ==================================
2025-03-15 15:06:53,623:INFO:Creating metrics dataframe
2025-03-15 15:06:53,628:INFO:Initializing Gradient Boosting Classifier
2025-03-15 15:06:53,628:INFO:Total runtime is 1.365509323279063 minutes
2025-03-15 15:06:53,631:INFO:SubProcess create_model() called ==================================
2025-03-15 15:06:53,631:INFO:Initializing create_model()
2025-03-15 15:06:53,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:06:53,632:INFO:Checking exceptions
2025-03-15 15:06:53,632:INFO:Importing libraries
2025-03-15 15:06:53,632:INFO:Copying training dataset
2025-03-15 15:06:53,666:INFO:Defining folds
2025-03-15 15:06:53,667:INFO:Declaring metric variables
2025-03-15 15:06:53,671:INFO:Importing untrained model
2025-03-15 15:06:53,677:INFO:Gradient Boosting Classifier Imported successfully
2025-03-15 15:06:53,686:INFO:Starting cross validation
2025-03-15 15:06:53,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:19:09,967:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:09,972:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:09,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:09,990:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,175:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:11,179:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,194:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,224:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:11,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,236:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:11,245:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,627:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:12,631:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,644:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:12,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:12,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:12,960:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:13,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:13,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:13,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:13,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:15,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:15,910:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:15,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:16,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:16,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:16,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:16,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:16,876:INFO:Calculating mean and std
2025-03-15 15:19:16,878:INFO:Creating metrics dataframe
2025-03-15 15:19:16,880:INFO:Uploading results into container
2025-03-15 15:19:16,881:INFO:Uploading model into container now
2025-03-15 15:19:16,881:INFO:_master_model_container: 10
2025-03-15 15:19:16,881:INFO:_display_container: 2
2025-03-15 15:19:16,882:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-15 15:19:16,882:INFO:create_model() successfully completed......................................
2025-03-15 15:19:16,949:INFO:SubProcess create_model() end ==================================
2025-03-15 15:19:16,949:INFO:Creating metrics dataframe
2025-03-15 15:19:16,956:INFO:Initializing Linear Discriminant Analysis
2025-03-15 15:19:16,956:INFO:Total runtime is 13.754299207528433 minutes
2025-03-15 15:19:16,959:INFO:SubProcess create_model() called ==================================
2025-03-15 15:19:16,959:INFO:Initializing create_model()
2025-03-15 15:19:16,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:19:16,959:INFO:Checking exceptions
2025-03-15 15:19:16,959:INFO:Importing libraries
2025-03-15 15:19:16,959:INFO:Copying training dataset
2025-03-15 15:19:16,996:INFO:Defining folds
2025-03-15 15:19:16,997:INFO:Declaring metric variables
2025-03-15 15:19:17,002:INFO:Importing untrained model
2025-03-15 15:19:17,006:INFO:Linear Discriminant Analysis Imported successfully
2025-03-15 15:19:17,013:INFO:Starting cross validation
2025-03-15 15:19:17,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:19:17,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,418:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,535:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,551:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,564:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,580:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,612:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,640:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,659:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,662:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,668:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,678:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,682:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,682:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,691:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,699:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,708:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 15:19:17,712:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,719:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,722:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:19:17,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:17,752:INFO:Calculating mean and std
2025-03-15 15:19:17,753:INFO:Creating metrics dataframe
2025-03-15 15:19:17,755:INFO:Uploading results into container
2025-03-15 15:19:17,755:INFO:Uploading model into container now
2025-03-15 15:19:17,755:INFO:_master_model_container: 11
2025-03-15 15:19:17,756:INFO:_display_container: 2
2025-03-15 15:19:17,756:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-15 15:19:17,756:INFO:create_model() successfully completed......................................
2025-03-15 15:19:17,814:INFO:SubProcess create_model() end ==================================
2025-03-15 15:19:17,814:INFO:Creating metrics dataframe
2025-03-15 15:19:17,821:INFO:Initializing Extra Trees Classifier
2025-03-15 15:19:17,821:INFO:Total runtime is 13.768721203009289 minutes
2025-03-15 15:19:17,824:INFO:SubProcess create_model() called ==================================
2025-03-15 15:19:17,825:INFO:Initializing create_model()
2025-03-15 15:19:17,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:19:17,825:INFO:Checking exceptions
2025-03-15 15:19:17,825:INFO:Importing libraries
2025-03-15 15:19:17,825:INFO:Copying training dataset
2025-03-15 15:19:17,866:INFO:Defining folds
2025-03-15 15:19:17,866:INFO:Declaring metric variables
2025-03-15 15:19:17,870:INFO:Importing untrained model
2025-03-15 15:19:17,874:INFO:Extra Trees Classifier Imported successfully
2025-03-15 15:19:17,883:INFO:Starting cross validation
2025-03-15 15:19:17,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:19:23,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,693:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,697:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,709:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,713:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,716:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,751:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,752:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,784:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,823:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,845:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:23,898:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,232:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,243:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,345:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:28,370:INFO:Calculating mean and std
2025-03-15 15:19:28,372:INFO:Creating metrics dataframe
2025-03-15 15:19:28,374:INFO:Uploading results into container
2025-03-15 15:19:28,374:INFO:Uploading model into container now
2025-03-15 15:19:28,375:INFO:_master_model_container: 12
2025-03-15 15:19:28,375:INFO:_display_container: 2
2025-03-15 15:19:28,375:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 15:19:28,375:INFO:create_model() successfully completed......................................
2025-03-15 15:19:28,447:INFO:SubProcess create_model() end ==================================
2025-03-15 15:19:28,447:INFO:Creating metrics dataframe
2025-03-15 15:19:28,454:INFO:Initializing Extreme Gradient Boosting
2025-03-15 15:19:28,454:INFO:Total runtime is 13.945943923791251 minutes
2025-03-15 15:19:28,457:INFO:SubProcess create_model() called ==================================
2025-03-15 15:19:28,457:INFO:Initializing create_model()
2025-03-15 15:19:28,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:19:28,457:INFO:Checking exceptions
2025-03-15 15:19:28,457:INFO:Importing libraries
2025-03-15 15:19:28,457:INFO:Copying training dataset
2025-03-15 15:19:28,499:INFO:Defining folds
2025-03-15 15:19:28,500:INFO:Declaring metric variables
2025-03-15 15:19:28,504:INFO:Importing untrained model
2025-03-15 15:19:28,509:INFO:Extreme Gradient Boosting Imported successfully
2025-03-15 15:19:28,519:INFO:Starting cross validation
2025-03-15 15:19:28,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:19:46,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,700:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,707:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,748:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,786:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,902:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:46,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:19:48,960:INFO:Calculating mean and std
2025-03-15 15:19:48,961:INFO:Creating metrics dataframe
2025-03-15 15:19:48,962:INFO:Uploading results into container
2025-03-15 15:19:48,963:INFO:Uploading model into container now
2025-03-15 15:19:48,963:INFO:_master_model_container: 13
2025-03-15 15:19:48,963:INFO:_display_container: 2
2025-03-15 15:19:48,964:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-15 15:19:48,964:INFO:create_model() successfully completed......................................
2025-03-15 15:19:49,027:INFO:SubProcess create_model() end ==================================
2025-03-15 15:19:49,027:INFO:Creating metrics dataframe
2025-03-15 15:19:49,034:INFO:Initializing Light Gradient Boosting Machine
2025-03-15 15:19:49,034:INFO:Total runtime is 14.288938387235007 minutes
2025-03-15 15:19:49,037:INFO:SubProcess create_model() called ==================================
2025-03-15 15:19:49,037:INFO:Initializing create_model()
2025-03-15 15:19:49,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:19:49,037:INFO:Checking exceptions
2025-03-15 15:19:49,037:INFO:Importing libraries
2025-03-15 15:19:49,037:INFO:Copying training dataset
2025-03-15 15:19:49,079:INFO:Defining folds
2025-03-15 15:19:49,079:INFO:Declaring metric variables
2025-03-15 15:19:49,084:INFO:Importing untrained model
2025-03-15 15:19:49,088:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-15 15:19:49,095:INFO:Starting cross validation
2025-03-15 15:19:49,097:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:20:11,988:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:11,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:12,007:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:12,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:12,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:12,805:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,006:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,033:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,965:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,976:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:13,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,168:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:14,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,274:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,284:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,341:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,366:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,375:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,418:INFO:Calculating mean and std
2025-03-15 15:20:16,419:INFO:Creating metrics dataframe
2025-03-15 15:20:16,422:INFO:Uploading results into container
2025-03-15 15:20:16,422:INFO:Uploading model into container now
2025-03-15 15:20:16,423:INFO:_master_model_container: 14
2025-03-15 15:20:16,423:INFO:_display_container: 2
2025-03-15 15:20:16,424:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-15 15:20:16,424:INFO:create_model() successfully completed......................................
2025-03-15 15:20:16,502:INFO:SubProcess create_model() end ==================================
2025-03-15 15:20:16,502:INFO:Creating metrics dataframe
2025-03-15 15:20:16,510:INFO:Initializing Dummy Classifier
2025-03-15 15:20:16,510:INFO:Total runtime is 14.746873541673025 minutes
2025-03-15 15:20:16,514:INFO:SubProcess create_model() called ==================================
2025-03-15 15:20:16,514:INFO:Initializing create_model()
2025-03-15 15:20:16,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B6804DD550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:20:16,515:INFO:Checking exceptions
2025-03-15 15:20:16,515:INFO:Importing libraries
2025-03-15 15:20:16,515:INFO:Copying training dataset
2025-03-15 15:20:16,566:INFO:Defining folds
2025-03-15 15:20:16,566:INFO:Declaring metric variables
2025-03-15 15:20:16,572:INFO:Importing untrained model
2025-03-15 15:20:16,576:INFO:Dummy Classifier Imported successfully
2025-03-15 15:20:16,585:INFO:Starting cross validation
2025-03-15 15:20:16,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 15:20:16,783:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,799:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,809:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,817:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,890:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,902:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,947:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,964:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,967:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,977:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:16,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:16,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,006:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:17,011:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,012:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:17,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,043:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 15:20:17,048:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:20:17,071:INFO:Calculating mean and std
2025-03-15 15:20:17,072:INFO:Creating metrics dataframe
2025-03-15 15:20:17,074:INFO:Uploading results into container
2025-03-15 15:20:17,074:INFO:Uploading model into container now
2025-03-15 15:20:17,075:INFO:_master_model_container: 15
2025-03-15 15:20:17,075:INFO:_display_container: 2
2025-03-15 15:20:17,075:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-15 15:20:17,075:INFO:create_model() successfully completed......................................
2025-03-15 15:20:17,143:INFO:SubProcess create_model() end ==================================
2025-03-15 15:20:17,143:INFO:Creating metrics dataframe
2025-03-15 15:20:17,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-15 15:20:17,161:INFO:Initializing create_model()
2025-03-15 15:20:17,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 15:20:17,161:INFO:Checking exceptions
2025-03-15 15:20:17,162:INFO:Importing libraries
2025-03-15 15:20:17,162:INFO:Copying training dataset
2025-03-15 15:20:17,211:INFO:Defining folds
2025-03-15 15:20:17,211:INFO:Declaring metric variables
2025-03-15 15:20:17,213:INFO:Importing untrained model
2025-03-15 15:20:17,213:INFO:Declaring custom model
2025-03-15 15:20:17,213:INFO:Extra Trees Classifier Imported successfully
2025-03-15 15:20:17,214:INFO:Cross validation set to False
2025-03-15 15:20:17,214:INFO:Fitting Model
2025-03-15 15:20:18,265:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 15:20:18,265:INFO:create_model() successfully completed......................................
2025-03-15 15:20:18,353:INFO:_master_model_container: 15
2025-03-15 15:20:18,353:INFO:_display_container: 2
2025-03-15 15:20:18,353:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-15 15:20:18,353:INFO:compare_models() successfully completed......................................
2025-03-15 15:20:18,354:INFO:Initializing evaluate_model()
2025-03-15 15:20:18,354:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-15 15:20:18,385:INFO:Initializing plot_model()
2025-03-15 15:20:18,385:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, system=True)
2025-03-15 15:20:18,385:INFO:Checking exceptions
2025-03-15 15:20:18,430:INFO:Preloading libraries
2025-03-15 15:20:18,693:INFO:Copying training dataset
2025-03-15 15:20:18,693:INFO:Plot type: pipeline
2025-03-15 15:20:18,842:INFO:Visual Rendered Successfully
2025-03-15 15:20:18,908:INFO:plot_model() successfully completed......................................
2025-03-15 15:39:11,297:INFO:Initializing predict_model()
2025-03-15 15:39:11,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B6D710FFD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B6853FEDC0>)
2025-03-15 15:39:11,297:INFO:Checking exceptions
2025-03-15 15:39:11,297:INFO:Preloading libraries
2025-03-15 15:39:11,298:INFO:Set up data.
2025-03-15 15:39:11,312:INFO:Set up index.
2025-03-15 15:39:11,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:39:11,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:39:11,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 99000.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 15:39:20,810:INFO:Initializing save_model()
2025-03-15 15:39:20,810:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), model_name=best_model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'NDPD'],
                                    transformer=Simple...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-15 15:39:20,810:INFO:Adding model into prep_pipe
2025-03-15 15:39:21,078:INFO:best_model_1.pkl saved in current working directory
2025-03-15 15:39:21,081:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'NDPD'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-03-15 15:39:21,081:INFO:save_model() successfully completed......................................
2025-03-15 15:39:25,734:INFO:Initializing load_model()
2025-03-15 15:39:25,734:INFO:load_model(model_name=best_model_1, platform=None, authentication=None, verbose=True)
2025-03-15 15:39:26,028:INFO:Initializing predict_model()
2025-03-15 15:39:26,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000159F7E0E6A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SP', 'GR', 'DTC', 'Y_LOC', 'DRHO',
                                             'RHOB', 'NPHI', 'X_LOC', 'CALI',
                                             'DEPT', 'Vclay', 'NDPD'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000159FBC85310>)
2025-03-15 15:39:26,028:INFO:Checking exceptions
2025-03-15 15:39:26,028:INFO:Preloading libraries
2025-03-15 15:39:26,029:INFO:Set up data.
2025-03-15 15:39:26,049:INFO:Set up index.
